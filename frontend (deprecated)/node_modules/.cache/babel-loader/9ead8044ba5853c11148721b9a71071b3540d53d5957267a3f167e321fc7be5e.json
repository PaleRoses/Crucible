{"ast":null,"code":"var _jsxFileName = \"/home/valeria/Documents/Crucible/frontend/src/components/core/effects/RevealText.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { useInView } from 'framer-motion';\nimport { createUseStyles } from 'react-jss';\n\n// Styles defined within the component file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  revealContainer: {\n    overflow: 'hidden',\n    marginBottom: '1.5rem'\n  },\n  revealText: {\n    transform: 'translateY(30px)',\n    opacity: 0,\n    transition: 'transform 0.8s ease, opacity 0.8s ease'\n  },\n  revealed: {\n    transform: 'translateY(0)',\n    opacity: 1\n  }\n});\n\n/**\n * RevealText Component\n * \n * Creates an animated text reveal effect when the component enters the viewport.\n * Uses Framer Motion's useInView hook to trigger the animation.\n * \n * @param {ReactNode} children - Content to be revealed\n * @param {number} threshold - Visibility threshold to trigger animation (0-1)\n * @param {number} delay - Animation delay in milliseconds\n */\nconst RevealText = ({\n  children,\n  threshold = 0.5,\n  delay = 0\n}) => {\n  _s();\n  const classes = useStyles();\n  const ref = useRef(null);\n  const isInView = useInView(ref, {\n    once: false,\n    threshold\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: classes.revealContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.revealText} ${isInView ? classes.revealed : ''}`,\n      style: {\n        transitionDelay: `${delay}ms`\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(RevealText, \"qDNUey5PmLGMEE7n7Fht+EzgXpQ=\", false, function () {\n  return [useStyles, useInView];\n});\n_c = RevealText;\nexport default RevealText;\nvar _c;\n$RefreshReg$(_c, \"RevealText\");","map":{"version":3,"names":["React","useRef","useInView","createUseStyles","jsxDEV","_jsxDEV","useStyles","revealContainer","overflow","marginBottom","revealText","transform","opacity","transition","revealed","RevealText","children","threshold","delay","_s","classes","ref","isInView","once","className","style","transitionDelay","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/core/effects/RevealText.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport { useInView } from 'framer-motion';\nimport { createUseStyles } from 'react-jss';\n\n// Styles defined within the component file\nconst useStyles = createUseStyles({\n  revealContainer: {\n    overflow: 'hidden',\n    marginBottom: '1.5rem'\n  },\n  revealText: {\n    transform: 'translateY(30px)',\n    opacity: 0,\n    transition: 'transform 0.8s ease, opacity 0.8s ease'\n  },\n  revealed: {\n    transform: 'translateY(0)',\n    opacity: 1\n  }\n});\n\n/**\n * RevealText Component\n * \n * Creates an animated text reveal effect when the component enters the viewport.\n * Uses Framer Motion's useInView hook to trigger the animation.\n * \n * @param {ReactNode} children - Content to be revealed\n * @param {number} threshold - Visibility threshold to trigger animation (0-1)\n * @param {number} delay - Animation delay in milliseconds\n */\nconst RevealText = ({ children, threshold = 0.5, delay = 0 }) => {\n  const classes = useStyles();\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: false, threshold });\n  \n  return (\n    <div ref={ref} className={classes.revealContainer}>\n      <div\n        className={`${classes.revealText} ${isInView ? classes.revealed : ''}`}\n        style={{ transitionDelay: `${delay}ms` }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default RevealText;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,SAAS,QAAQ,eAAe;AACzC,SAASC,eAAe,QAAQ,WAAW;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGH,eAAe,CAAC;EAChCI,eAAe,EAAE;IACfC,QAAQ,EAAE,QAAQ;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDC,UAAU,EAAE;IACVC,SAAS,EAAE,kBAAkB;IAC7BC,OAAO,EAAE,CAAC;IACVC,UAAU,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE;IACRH,SAAS,EAAE,eAAe;IAC1BC,OAAO,EAAE;EACX;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,UAAU,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,SAAS,GAAG,GAAG;EAAEC,KAAK,GAAG;AAAE,CAAC,KAAK;EAAAC,EAAA;EAC/D,MAAMC,OAAO,GAAGd,SAAS,CAAC,CAAC;EAC3B,MAAMe,GAAG,GAAGpB,MAAM,CAAC,IAAI,CAAC;EACxB,MAAMqB,QAAQ,GAAGpB,SAAS,CAACmB,GAAG,EAAE;IAAEE,IAAI,EAAE,KAAK;IAAEN;EAAU,CAAC,CAAC;EAE3D,oBACEZ,OAAA;IAAKgB,GAAG,EAAEA,GAAI;IAACG,SAAS,EAAEJ,OAAO,CAACb,eAAgB;IAAAS,QAAA,eAChDX,OAAA;MACEmB,SAAS,EAAE,GAAGJ,OAAO,CAACV,UAAU,IAAIY,QAAQ,GAAGF,OAAO,CAACN,QAAQ,GAAG,EAAE,EAAG;MACvEW,KAAK,EAAE;QAAEC,eAAe,EAAE,GAAGR,KAAK;MAAK,CAAE;MAAAF,QAAA,EAExCA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACX,EAAA,CAfIJ,UAAU;EAAA,QACET,SAAS,EAERJ,SAAS;AAAA;AAAA6B,EAAA,GAHtBhB,UAAU;AAiBhB,eAAeA,UAAU;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}