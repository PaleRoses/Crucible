{"ast":null,"code":"var _jsxFileName = \"/home/valeria/Documents/Crucible/frontend/src/components/core/Background.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useCallback, useMemo } from 'react';\nimport { useReducedMotion } from 'framer-motion';\n\n/**\n * Enhanced Background Component\n * \n * Creates a beautiful, subtle stellar background with gently animated stars\n * and constellation formations. High-performance, responsive, and optimized for all devices.\n * \n * @returns {JSX.Element} The background component\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Background = () => {\n  _s();\n  // Refs for animation and canvas\n  const canvasRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  const lastTimestampRef = useRef(0);\n  const starsRef = useRef([]);\n  const verticesRef = useRef([]);\n  const constellationsRef = useRef([]);\n  const resizeObserverRef = useRef(null);\n  const visibilityObserverRef = useRef(null);\n\n  // Motion state\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0,\n    pixelRatio: 1\n  });\n  const prefersReducedMotion = useReducedMotion();\n  const [isVisible, setIsVisible] = useState(true);\n  const [deviceCapabilities, setDeviceCapabilities] = useState({\n    isMobile: false,\n    memory: 4,\n    cores: 4\n  });\n\n  // Animation parameters (customizable)\n  const config = useMemo(() => ({\n    // Star parameters\n    starCount: 200,\n    minStarSize: 0.5,\n    maxStarSize: 1.8,\n    starColor: 'rgba(191, 173, 127, 0.7)',\n    pulseFactor: 0.2,\n    pulseSpeed: 0.5,\n    // Movement parameters\n    velocityFactor: 0.005,\n    starMovementSpeed: 0.02,\n    baseMovementRange: 3,\n    // Vertices and constellations\n    vertexCount: 12,\n    constellationRenderProbability: 0.3,\n    constellationLineThreshold: 170,\n    constellationLineColor: 'rgba(191, 173, 127, 0.2)',\n    constellationPulseColor: 'rgba(191, 173, 127, 0.15)',\n    maxHighlightedConstellations: 2,\n    // Performance and optimization\n    maxFPS: 60,\n    adaptiveQuality: true,\n    respectReducedMotion: true\n  }), []);\n\n  // Adaptive quality settings\n  const [qualityFactor, setQualityFactor] = useState(1);\n\n  // Adaptive settings based on device capabilities\n  const adaptedSettings = useMemo(() => {\n    if (!config.adaptiveQuality || qualityFactor === 1) {\n      return {\n        starCount: config.starCount,\n        vertexCount: config.vertexCount,\n        renderConstellations: true,\n        highQualityEffects: true\n      };\n    }\n    return {\n      starCount: Math.max(80, Math.floor(config.starCount * qualityFactor)),\n      vertexCount: Math.max(5, Math.floor(config.vertexCount * qualityFactor)),\n      renderConstellations: qualityFactor > 0.4,\n      highQualityEffects: qualityFactor > 0.7\n    };\n  }, [config, qualityFactor]);\n\n  // Detect device capabilities for adaptive quality\n  const detectCapabilities = useCallback(() => {\n    var _navigator, _navigator2;\n    const memory = ((_navigator = navigator) === null || _navigator === void 0 ? void 0 : _navigator.deviceMemory) || 4;\n    const cores = ((_navigator2 = navigator) === null || _navigator2 === void 0 ? void 0 : _navigator2.hardwareConcurrency) || 4;\n    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    setDeviceCapabilities({\n      memory,\n      cores,\n      isMobile\n    });\n    if (config.adaptiveQuality) {\n      // Calculate performance score and set quality\n      const performanceScore = memory * cores / (isMobile ? 2 : 1);\n      let quality = 1;\n      if (performanceScore > 16) {\n        quality = 1; // High-end devices\n      } else if (performanceScore > 8) {\n        quality = 0.8; // Mid-range devices\n      } else if (performanceScore > 4) {\n        quality = 0.6; // Low-end devices\n      } else {\n        quality = 0.4; // Very low-end devices\n      }\n      setQualityFactor(quality);\n    }\n  }, [config.adaptiveQuality]);\n\n  // Star and vertex generation\n  const generateStars = useCallback((width, height, count) => {\n    const stars = [];\n    for (let i = 0; i < count; i++) {\n      const x = Math.random() * width;\n      const y = Math.random() * height;\n      const size = Math.random() * (config.maxStarSize - config.minStarSize) + config.minStarSize;\n      const opacity = Math.random() * 0.5 + 0.25;\n      const pulsePhase = Math.random() * Math.PI * 2;\n      const pulseSpeed = config.pulseSpeed * (0.5 + Math.random() * 0.5);\n\n      // Add subtle movement vectors\n      const velocityX = (Math.random() * 2 - 1) * config.velocityFactor;\n      const velocityY = (Math.random() * 2 - 1) * config.velocityFactor;\n\n      // Define movement range for this star\n      const movementRange = config.baseMovementRange * (0.5 + Math.random() * 0.5);\n      const initialX = x;\n      const initialY = y;\n      stars.push({\n        x,\n        y,\n        initialX,\n        initialY,\n        size,\n        opacity,\n        pulsePhase,\n        pulseSpeed,\n        velocityX,\n        velocityY,\n        movementRange\n      });\n    }\n    return stars;\n  }, [config]);\n  const generateVertices = useCallback((width, height, count) => {\n    const vertices = [];\n    for (let i = 0; i < count; i++) {\n      const x = Math.random() * width;\n      const y = Math.random() * height;\n      const pulsePhase = Math.random() * Math.PI * 2;\n      vertices.push({\n        x,\n        y,\n        originalX: x,\n        originalY: y,\n        pulsePhase,\n        isHighlighted: false,\n        highlightStrength: 0\n      });\n    }\n    return vertices;\n  }, []);\n\n  // Set up canvas and initialize elements\n  const setupCanvas = useCallback(() => {\n    if (!canvasRef.current) return false;\n    const canvas = canvasRef.current;\n    const container = document.documentElement;\n    const pixelRatio = window.devicePixelRatio || 1;\n\n    // Calculate dimensions\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    // Set canvas size with pixel ratio consideration\n    canvas.width = width * pixelRatio;\n    canvas.height = height * pixelRatio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n\n    // Get 2D context\n    const ctx = canvas.getContext('2d', {\n      alpha: true,\n      desynchronized: true,\n      willReadFrequently: false\n    });\n    if (!ctx) return false;\n\n    // Scale context for high-DPI displays\n    ctx.scale(pixelRatio, pixelRatio);\n\n    // Store dimensions\n    setDimensions({\n      width,\n      height,\n      pixelRatio\n    });\n\n    // Generate stars and vertices\n    starsRef.current = generateStars(width, height, adaptedSettings.starCount);\n    verticesRef.current = generateVertices(width, height, adaptedSettings.vertexCount);\n    return true;\n  }, [generateStars, generateVertices, adaptedSettings.starCount, adaptedSettings.vertexCount]);\n\n  // Setup resize observer\n  useEffect(() => {\n    // Create ResizeObserver to handle window resizing\n    const resizeObserver = new ResizeObserver(entries => {\n      var _resizeObserverRef$cu;\n      // Debounce resize operations\n      if ((_resizeObserverRef$cu = resizeObserverRef.current) !== null && _resizeObserverRef$cu !== void 0 && _resizeObserverRef$cu.timeout) {\n        clearTimeout(resizeObserverRef.current.timeout);\n      }\n      resizeObserverRef.current = {\n        ...resizeObserverRef.current,\n        timeout: setTimeout(() => {\n          setupCanvas();\n        }, 200) // 200ms debounce\n      };\n    });\n\n    // Observe the whole document\n    resizeObserver.observe(document.documentElement);\n    resizeObserverRef.current = {\n      observer: resizeObserver\n    };\n\n    // Initial setup\n    detectCapabilities();\n    setupCanvas();\n    return () => {\n      var _resizeObserverRef$cu2, _resizeObserverRef$cu3;\n      if ((_resizeObserverRef$cu2 = resizeObserverRef.current) !== null && _resizeObserverRef$cu2 !== void 0 && _resizeObserverRef$cu2.observer) {\n        resizeObserverRef.current.observer.disconnect();\n      }\n      if ((_resizeObserverRef$cu3 = resizeObserverRef.current) !== null && _resizeObserverRef$cu3 !== void 0 && _resizeObserverRef$cu3.timeout) {\n        clearTimeout(resizeObserverRef.current.timeout);\n      }\n    };\n  }, [setupCanvas, detectCapabilities]);\n\n  // Setup intersection observer\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const observer = new IntersectionObserver(entries => {\n      const isIntersecting = entries[0].isIntersecting;\n      if (isIntersecting !== isVisible) {\n        setIsVisible(isIntersecting);\n\n        // Reset timing references when visible again\n        if (isIntersecting) {\n          lastTimestampRef.current = 0;\n        }\n      }\n    }, {\n      threshold: 0.01,\n      rootMargin: '200px'\n    });\n    observer.observe(canvasRef.current);\n    visibilityObserverRef.current = observer;\n    return () => {\n      if (visibilityObserverRef.current) {\n        visibilityObserverRef.current.disconnect();\n      }\n    };\n  }, [isVisible]);\n\n  // Handle visibility change\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.hidden) {\n        // Pause when tab is hidden\n        if (animationFrameRef.current) {\n          cancelAnimationFrame(animationFrameRef.current);\n        }\n      } else {\n        // Reset timestamp on resume\n        lastTimestampRef.current = 0;\n        // Resume animation\n        requestAnimationFrame(animate);\n      }\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, []);\n\n  // Draw a single star\n  const drawStar = useCallback((ctx, star, timestamp) => {\n    // Calculate pulse effect\n    const pulseEffect = 1 + Math.sin(timestamp * 0.001 * star.pulseSpeed + star.pulsePhase) * config.pulseFactor;\n\n    // Calculate current position based on movement pattern\n    const movementOffset = Math.sin(timestamp * 0.001 * config.starMovementSpeed + star.pulsePhase);\n    const x = star.initialX + movementOffset * star.movementRange * star.velocityX;\n    const y = star.initialY + movementOffset * star.movementRange * star.velocityY;\n\n    // Update star position\n    star.x = x;\n    star.y = y;\n\n    // Apply pulse to size and opacity\n    const currentSize = star.size * pulseEffect;\n    const currentOpacity = star.opacity * (0.8 + pulseEffect * 0.2);\n\n    // Determine star color with opacity\n    const color = config.starColor.replace(')', `, ${currentOpacity})`).replace('rgba', 'rgba');\n\n    // Draw star with soft glow effect\n    if (adaptedSettings.highQualityEffects) {\n      // High quality star with glow\n      ctx.save();\n\n      // Draw outer glow\n      ctx.beginPath();\n      ctx.arc(x, y, currentSize * 2, 0, Math.PI * 2);\n      ctx.fillStyle = color.replace(', 0.7)', ', 0.1)');\n      ctx.fill();\n\n      // Draw inner glow\n      ctx.beginPath();\n      ctx.arc(x, y, currentSize * 1.2, 0, Math.PI * 2);\n      ctx.fillStyle = color.replace(', 0.7)', ', 0.3)');\n      ctx.fill();\n\n      // Draw star core\n      ctx.beginPath();\n      ctx.arc(x, y, currentSize, 0, Math.PI * 2);\n      ctx.fillStyle = color;\n      ctx.fill();\n      ctx.restore();\n    } else {\n      // Simplified star for performance\n      ctx.beginPath();\n      ctx.arc(x, y, currentSize, 0, Math.PI * 2);\n      ctx.fillStyle = color;\n      ctx.fill();\n    }\n  }, [config, adaptedSettings.highQualityEffects]);\n\n  // Update constellation connections\n  const updateConstellations = useCallback((vertices, threshold, timestamp) => {\n    // Clear current constellations\n    const constellations = [];\n\n    // Select a few random vertices to highlight\n    const maxHighlighted = config.maxHighlightedConstellations;\n    if (Math.random() < config.constellationRenderProbability) {\n      for (let i = 0; i < vertices.length; i++) {\n        // Reset highlight state\n        vertices[i].isHighlighted = false;\n\n        // Decay existing highlight strength\n        if (vertices[i].highlightStrength > 0) {\n          vertices[i].highlightStrength -= 0.01;\n          if (vertices[i].highlightStrength < 0) vertices[i].highlightStrength = 0;\n        }\n      }\n\n      // Count current highlights\n      const currentHighlighted = vertices.filter(v => v.highlightStrength > 0.2).length;\n\n      // Add new highlights if below max\n      if (currentHighlighted < maxHighlighted) {\n        const vertexIndex = Math.floor(Math.random() * vertices.length);\n        vertices[vertexIndex].isHighlighted = true;\n        vertices[vertexIndex].highlightStrength = 1.0; // Start full strength\n      }\n    }\n\n    // Find connections between vertices\n    for (let i = 0; i < vertices.length; i++) {\n      for (let j = i + 1; j < vertices.length; j++) {\n        const v1 = vertices[i];\n        const v2 = vertices[j];\n\n        // Calculate distance between vertices\n        const dx = v2.x - v1.x;\n        const dy = v2.y - v1.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n\n        // Connect if within threshold\n        if (distance < threshold) {\n          // Adjust opacity based on distance and highlight state\n          const baseOpacity = 1 - distance / threshold;\n          let opacity = baseOpacity * 0.2; // Default low opacity\n\n          // Boost opacity if either vertex is highlighted\n          if (v1.highlightStrength > 0 || v2.highlightStrength > 0) {\n            const highlightFactor = Math.max(v1.highlightStrength, v2.highlightStrength);\n            opacity = baseOpacity * (0.2 + highlightFactor * 0.6);\n          }\n          constellations.push({\n            x1: v1.x,\n            y1: v1.y,\n            x2: v2.x,\n            y2: v2.y,\n            opacity\n          });\n        }\n      }\n    }\n    return constellations;\n  }, [config.maxHighlightedConstellations, config.constellationRenderProbability]);\n\n  // Draw constellations\n  const drawConstellations = useCallback((ctx, constellations) => {\n    constellations.forEach(line => {\n      // Extract line properties\n      const {\n        x1,\n        y1,\n        x2,\n        y2,\n        opacity\n      } = line;\n\n      // Draw line with gradient for more elegant effect\n      if (adaptedSettings.highQualityEffects) {\n        // Create gradient\n        const gradient = ctx.createLinearGradient(x1, y1, x2, y2);\n        const color = config.constellationLineColor.replace('0.2)', `${opacity})`);\n        gradient.addColorStop(0, color);\n        gradient.addColorStop(0.5, color.replace('0.2', '0.35')); // Slightly brighter in middle\n        gradient.addColorStop(1, color);\n\n        // Draw main line\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.strokeStyle = gradient;\n        ctx.lineWidth = 0.5;\n        ctx.stroke();\n      } else {\n        // Simplified line for performance\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        const color = config.constellationLineColor.replace('0.2)', `${opacity})`);\n        ctx.strokeStyle = color;\n        ctx.lineWidth = 0.5;\n        ctx.stroke();\n      }\n    });\n  }, [config.constellationLineColor, adaptedSettings.highQualityEffects]);\n\n  // Draw highlighted vertices\n  const drawVertices = useCallback((ctx, vertices, timestamp) => {\n    vertices.forEach(vertex => {\n      // Only draw vertices with highlight\n      if (vertex.highlightStrength <= 0) return;\n\n      // Calculate pulse effect for highlighted vertices\n      const pulseEffect = 1 + Math.sin(timestamp * 0.001 + vertex.pulsePhase) * 0.3;\n      const strength = vertex.highlightStrength * pulseEffect;\n\n      // Draw vertex glow\n      ctx.beginPath();\n      ctx.arc(vertex.x, vertex.y, 2 + strength * 8, 0, Math.PI * 2);\n\n      // Create radial gradient for glow effect\n      const gradient = ctx.createRadialGradient(vertex.x, vertex.y, 0, vertex.x, vertex.y, 2 + strength * 8);\n      gradient.addColorStop(0, config.constellationPulseColor.replace('0.15)', `${0.7 * strength})`));\n      gradient.addColorStop(0.5, config.constellationPulseColor.replace('0.15)', `${0.3 * strength})`));\n      gradient.addColorStop(1, config.constellationPulseColor.replace('0.15)', '0)'));\n      ctx.fillStyle = gradient;\n      ctx.fill();\n    });\n  }, [config.constellationPulseColor]);\n\n  // Main animation loop with optimized FPS limiting\n  const animate = useCallback(timestamp => {\n    // Skip if not visible, not initialized, or user prefers reduced motion\n    if (!isVisible || !canvasRef.current || config.respectReducedMotion && prefersReducedMotion) {\n      animationFrameRef.current = requestAnimationFrame(animate);\n      return;\n    }\n\n    // Initialize timestamp on first frame\n    if (lastTimestampRef.current === 0) {\n      lastTimestampRef.current = timestamp;\n      animationFrameRef.current = requestAnimationFrame(animate);\n      return;\n    }\n\n    // Calculate delta time for smooth animation\n    const deltaTime = timestamp - lastTimestampRef.current;\n\n    // Limit FPS for consistent animation and performance\n    const frameInterval = 1000 / config.maxFPS;\n    if (deltaTime < frameInterval) {\n      animationFrameRef.current = requestAnimationFrame(animate);\n      return;\n    }\n\n    // Update timing\n    lastTimestampRef.current = timestamp - deltaTime % frameInterval;\n\n    // Get canvas context\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      animationFrameRef.current = requestAnimationFrame(animate);\n      return;\n    }\n\n    // Clear canvas\n    ctx.clearRect(0, 0, dimensions.width, dimensions.height);\n\n    // Update and draw stars\n    starsRef.current.forEach(star => {\n      drawStar(ctx, star, timestamp);\n    });\n\n    // Handle constellations if enabled\n    if (adaptedSettings.renderConstellations) {\n      // Update constellation connections\n      constellationsRef.current = updateConstellations(verticesRef.current, config.constellationLineThreshold, timestamp);\n\n      // Draw constellation lines\n      drawConstellations(ctx, constellationsRef.current);\n\n      // Draw vertex highlights\n      drawVertices(ctx, verticesRef.current, timestamp);\n    }\n\n    // Schedule next frame\n    animationFrameRef.current = requestAnimationFrame(animate);\n  }, [isVisible, prefersReducedMotion, dimensions, config.maxFPS, config.respectReducedMotion, config.constellationLineThreshold, drawStar, updateConstellations, drawConstellations, drawVertices, adaptedSettings.renderConstellations]);\n\n  // Start animation\n  useEffect(() => {\n    // Begin animation loop\n    animationFrameRef.current = requestAnimationFrame(animate);\n\n    // Cleanup on unmount\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [animate]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      zIndex: -1,\n      backgroundColor: 'rgba(5, 5, 5, 1)',\n      opacity: prefersReducedMotion ? 0.7 : 1,\n      transition: 'opacity 0.5s ease',\n      // Hardware acceleration\n      transform: 'translateZ(0)',\n      willChange: 'transform',\n      pointerEvents: 'none'\n    },\n    \"aria-hidden\": \"true\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 574,\n    columnNumber: 5\n  }, this);\n};\n_s(Background, \"OUYa+xzRY1zF3yd8qo2QWHH8aa0=\", false, function () {\n  return [useReducedMotion];\n});\n_c = Background;\nexport default Background;\nvar _c;\n$RefreshReg$(_c, \"Background\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","useMemo","useReducedMotion","jsxDEV","_jsxDEV","Background","_s","canvasRef","animationFrameRef","lastTimestampRef","starsRef","verticesRef","constellationsRef","resizeObserverRef","visibilityObserverRef","dimensions","setDimensions","width","height","pixelRatio","prefersReducedMotion","isVisible","setIsVisible","deviceCapabilities","setDeviceCapabilities","isMobile","memory","cores","config","starCount","minStarSize","maxStarSize","starColor","pulseFactor","pulseSpeed","velocityFactor","starMovementSpeed","baseMovementRange","vertexCount","constellationRenderProbability","constellationLineThreshold","constellationLineColor","constellationPulseColor","maxHighlightedConstellations","maxFPS","adaptiveQuality","respectReducedMotion","qualityFactor","setQualityFactor","adaptedSettings","renderConstellations","highQualityEffects","Math","max","floor","detectCapabilities","_navigator","_navigator2","navigator","deviceMemory","hardwareConcurrency","test","userAgent","performanceScore","quality","generateStars","count","stars","i","x","random","y","size","opacity","pulsePhase","PI","velocityX","velocityY","movementRange","initialX","initialY","push","generateVertices","vertices","originalX","originalY","isHighlighted","highlightStrength","setupCanvas","current","canvas","container","document","documentElement","window","devicePixelRatio","innerWidth","innerHeight","style","ctx","getContext","alpha","desynchronized","willReadFrequently","scale","resizeObserver","ResizeObserver","entries","_resizeObserverRef$cu","timeout","clearTimeout","setTimeout","observe","observer","_resizeObserverRef$cu2","_resizeObserverRef$cu3","disconnect","IntersectionObserver","isIntersecting","threshold","rootMargin","handleVisibilityChange","hidden","cancelAnimationFrame","requestAnimationFrame","animate","addEventListener","removeEventListener","drawStar","star","timestamp","pulseEffect","sin","movementOffset","currentSize","currentOpacity","color","replace","save","beginPath","arc","fillStyle","fill","restore","updateConstellations","constellations","maxHighlighted","length","currentHighlighted","filter","v","vertexIndex","j","v1","v2","dx","dy","distance","sqrt","baseOpacity","highlightFactor","x1","y1","x2","y2","drawConstellations","forEach","line","gradient","createLinearGradient","addColorStop","moveTo","lineTo","strokeStyle","lineWidth","stroke","drawVertices","vertex","strength","createRadialGradient","deltaTime","frameInterval","clearRect","ref","position","top","left","zIndex","backgroundColor","transition","transform","willChange","pointerEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/core/Background.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect, useCallback, useMemo } from 'react';\nimport { useReducedMotion } from 'framer-motion';\n\n/**\n * Enhanced Background Component\n * \n * Creates a beautiful, subtle stellar background with gently animated stars\n * and constellation formations. High-performance, responsive, and optimized for all devices.\n * \n * @returns {JSX.Element} The background component\n */\nconst Background = () => {\n  // Refs for animation and canvas\n  const canvasRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  const lastTimestampRef = useRef(0);\n  const starsRef = useRef([]);\n  const verticesRef = useRef([]);\n  const constellationsRef = useRef([]);\n  const resizeObserverRef = useRef(null);\n  const visibilityObserverRef = useRef(null);\n  \n  // Motion state\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0, pixelRatio: 1 });\n  const prefersReducedMotion = useReducedMotion();\n  const [isVisible, setIsVisible] = useState(true);\n  const [deviceCapabilities, setDeviceCapabilities] = useState({\n    isMobile: false,\n    memory: 4,\n    cores: 4\n  });\n  \n  // Animation parameters (customizable)\n  const config = useMemo(() => ({\n    // Star parameters\n    starCount: 200,\n    minStarSize: 0.5,\n    maxStarSize: 1.8,\n    starColor: 'rgba(191, 173, 127, 0.7)',\n    pulseFactor: 0.2,\n    pulseSpeed: 0.5,\n    \n    // Movement parameters\n    velocityFactor: 0.005,\n    starMovementSpeed: 0.02,\n    baseMovementRange: 3,\n    \n    // Vertices and constellations\n    vertexCount: 12,\n    constellationRenderProbability: 0.3,\n    constellationLineThreshold: 170,\n    constellationLineColor: 'rgba(191, 173, 127, 0.2)',\n    constellationPulseColor: 'rgba(191, 173, 127, 0.15)',\n    maxHighlightedConstellations: 2,\n    \n    // Performance and optimization\n    maxFPS: 60,\n    adaptiveQuality: true,\n    respectReducedMotion: true,\n  }), []);\n  \n  // Adaptive quality settings\n  const [qualityFactor, setQualityFactor] = useState(1);\n  \n  // Adaptive settings based on device capabilities\n  const adaptedSettings = useMemo(() => {\n    if (!config.adaptiveQuality || qualityFactor === 1) {\n      return {\n        starCount: config.starCount,\n        vertexCount: config.vertexCount,\n        renderConstellations: true,\n        highQualityEffects: true\n      };\n    }\n    \n    return {\n      starCount: Math.max(80, Math.floor(config.starCount * qualityFactor)),\n      vertexCount: Math.max(5, Math.floor(config.vertexCount * qualityFactor)),\n      renderConstellations: qualityFactor > 0.4,\n      highQualityEffects: qualityFactor > 0.7\n    };\n  }, [config, qualityFactor]);\n  \n  // Detect device capabilities for adaptive quality\n  const detectCapabilities = useCallback(() => {\n    const memory = navigator?.deviceMemory || 4;\n    const cores = navigator?.hardwareConcurrency || 4;\n    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    \n    setDeviceCapabilities({\n      memory,\n      cores,\n      isMobile\n    });\n    \n    if (config.adaptiveQuality) {\n      // Calculate performance score and set quality\n      const performanceScore = (memory * cores) / (isMobile ? 2 : 1);\n      let quality = 1;\n      \n      if (performanceScore > 16) {\n        quality = 1; // High-end devices\n      } else if (performanceScore > 8) {\n        quality = 0.8; // Mid-range devices\n      } else if (performanceScore > 4) {\n        quality = 0.6; // Low-end devices\n      } else {\n        quality = 0.4; // Very low-end devices\n      }\n      \n      setQualityFactor(quality);\n    }\n  }, [config.adaptiveQuality]);\n  \n  // Star and vertex generation\n  const generateStars = useCallback((width, height, count) => {\n    const stars = [];\n    for (let i = 0; i < count; i++) {\n      const x = Math.random() * width;\n      const y = Math.random() * height;\n      const size = Math.random() * (config.maxStarSize - config.minStarSize) + config.minStarSize;\n      const opacity = Math.random() * 0.5 + 0.25;\n      const pulsePhase = Math.random() * Math.PI * 2;\n      const pulseSpeed = config.pulseSpeed * (0.5 + Math.random() * 0.5);\n      \n      // Add subtle movement vectors\n      const velocityX = (Math.random() * 2 - 1) * config.velocityFactor;\n      const velocityY = (Math.random() * 2 - 1) * config.velocityFactor;\n      \n      // Define movement range for this star\n      const movementRange = config.baseMovementRange * (0.5 + Math.random() * 0.5);\n      const initialX = x;\n      const initialY = y;\n      \n      stars.push({\n        x, y,\n        initialX, initialY,\n        size,\n        opacity,\n        pulsePhase,\n        pulseSpeed,\n        velocityX,\n        velocityY,\n        movementRange\n      });\n    }\n    return stars;\n  }, [config]);\n  \n  const generateVertices = useCallback((width, height, count) => {\n    const vertices = [];\n    for (let i = 0; i < count; i++) {\n      const x = Math.random() * width;\n      const y = Math.random() * height;\n      const pulsePhase = Math.random() * Math.PI * 2;\n      \n      vertices.push({\n        x, y,\n        originalX: x,\n        originalY: y,\n        pulsePhase,\n        isHighlighted: false,\n        highlightStrength: 0\n      });\n    }\n    return vertices;\n  }, []);\n  \n  // Set up canvas and initialize elements\n  const setupCanvas = useCallback(() => {\n    if (!canvasRef.current) return false;\n    \n    const canvas = canvasRef.current;\n    const container = document.documentElement;\n    const pixelRatio = window.devicePixelRatio || 1;\n    \n    // Calculate dimensions\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    \n    // Set canvas size with pixel ratio consideration\n    canvas.width = width * pixelRatio;\n    canvas.height = height * pixelRatio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n    \n    // Get 2D context\n    const ctx = canvas.getContext('2d', {\n      alpha: true,\n      desynchronized: true,\n      willReadFrequently: false,\n    });\n    \n    if (!ctx) return false;\n    \n    // Scale context for high-DPI displays\n    ctx.scale(pixelRatio, pixelRatio);\n    \n    // Store dimensions\n    setDimensions({\n      width,\n      height,\n      pixelRatio\n    });\n    \n    // Generate stars and vertices\n    starsRef.current = generateStars(width, height, adaptedSettings.starCount);\n    verticesRef.current = generateVertices(width, height, adaptedSettings.vertexCount);\n    \n    return true;\n  }, [generateStars, generateVertices, adaptedSettings.starCount, adaptedSettings.vertexCount]);\n  \n  // Setup resize observer\n  useEffect(() => {\n    // Create ResizeObserver to handle window resizing\n    const resizeObserver = new ResizeObserver(entries => {\n      // Debounce resize operations\n      if (resizeObserverRef.current?.timeout) {\n        clearTimeout(resizeObserverRef.current.timeout);\n      }\n      \n      resizeObserverRef.current = {\n        ...resizeObserverRef.current,\n        timeout: setTimeout(() => {\n          setupCanvas();\n        }, 200) // 200ms debounce\n      };\n    });\n    \n    // Observe the whole document\n    resizeObserver.observe(document.documentElement);\n    resizeObserverRef.current = { observer: resizeObserver };\n    \n    // Initial setup\n    detectCapabilities();\n    setupCanvas();\n    \n    return () => {\n      if (resizeObserverRef.current?.observer) {\n        resizeObserverRef.current.observer.disconnect();\n      }\n      if (resizeObserverRef.current?.timeout) {\n        clearTimeout(resizeObserverRef.current.timeout);\n      }\n    };\n  }, [setupCanvas, detectCapabilities]);\n  \n  // Setup intersection observer\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    \n    const observer = new IntersectionObserver(\n      entries => {\n        const isIntersecting = entries[0].isIntersecting;\n        if (isIntersecting !== isVisible) {\n          setIsVisible(isIntersecting);\n          \n          // Reset timing references when visible again\n          if (isIntersecting) {\n            lastTimestampRef.current = 0;\n          }\n        }\n      },\n      {\n        threshold: 0.01,\n        rootMargin: '200px'\n      }\n    );\n    \n    observer.observe(canvasRef.current);\n    visibilityObserverRef.current = observer;\n    \n    return () => {\n      if (visibilityObserverRef.current) {\n        visibilityObserverRef.current.disconnect();\n      }\n    };\n  }, [isVisible]);\n  \n  // Handle visibility change\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.hidden) {\n        // Pause when tab is hidden\n        if (animationFrameRef.current) {\n          cancelAnimationFrame(animationFrameRef.current);\n        }\n      } else {\n        // Reset timestamp on resume\n        lastTimestampRef.current = 0;\n        // Resume animation\n        requestAnimationFrame(animate);\n      }\n    };\n    \n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    \n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, []);\n  \n  // Draw a single star\n  const drawStar = useCallback((ctx, star, timestamp) => {\n    // Calculate pulse effect\n    const pulseEffect = 1 + Math.sin(timestamp * 0.001 * star.pulseSpeed + star.pulsePhase) * config.pulseFactor;\n    \n    // Calculate current position based on movement pattern\n    const movementOffset = Math.sin(timestamp * 0.001 * config.starMovementSpeed + star.pulsePhase);\n    const x = star.initialX + movementOffset * star.movementRange * star.velocityX;\n    const y = star.initialY + movementOffset * star.movementRange * star.velocityY;\n    \n    // Update star position\n    star.x = x;\n    star.y = y;\n    \n    // Apply pulse to size and opacity\n    const currentSize = star.size * pulseEffect;\n    const currentOpacity = star.opacity * (0.8 + pulseEffect * 0.2);\n    \n    // Determine star color with opacity\n    const color = config.starColor.replace(')', `, ${currentOpacity})`).replace('rgba', 'rgba');\n    \n    // Draw star with soft glow effect\n    if (adaptedSettings.highQualityEffects) {\n      // High quality star with glow\n      ctx.save();\n      \n      // Draw outer glow\n      ctx.beginPath();\n      ctx.arc(x, y, currentSize * 2, 0, Math.PI * 2);\n      ctx.fillStyle = color.replace(', 0.7)', ', 0.1)');\n      ctx.fill();\n      \n      // Draw inner glow\n      ctx.beginPath();\n      ctx.arc(x, y, currentSize * 1.2, 0, Math.PI * 2);\n      ctx.fillStyle = color.replace(', 0.7)', ', 0.3)');\n      ctx.fill();\n      \n      // Draw star core\n      ctx.beginPath();\n      ctx.arc(x, y, currentSize, 0, Math.PI * 2);\n      ctx.fillStyle = color;\n      ctx.fill();\n      \n      ctx.restore();\n    } else {\n      // Simplified star for performance\n      ctx.beginPath();\n      ctx.arc(x, y, currentSize, 0, Math.PI * 2);\n      ctx.fillStyle = color;\n      ctx.fill();\n    }\n  }, [config, adaptedSettings.highQualityEffects]);\n  \n  // Update constellation connections\n  const updateConstellations = useCallback((vertices, threshold, timestamp) => {\n    // Clear current constellations\n    const constellations = [];\n    \n    // Select a few random vertices to highlight\n    const maxHighlighted = config.maxHighlightedConstellations;\n    if (Math.random() < config.constellationRenderProbability) {\n      for (let i = 0; i < vertices.length; i++) {\n        // Reset highlight state\n        vertices[i].isHighlighted = false;\n        \n        // Decay existing highlight strength\n        if (vertices[i].highlightStrength > 0) {\n          vertices[i].highlightStrength -= 0.01;\n          if (vertices[i].highlightStrength < 0) vertices[i].highlightStrength = 0;\n        }\n      }\n      \n      // Count current highlights\n      const currentHighlighted = vertices.filter(v => v.highlightStrength > 0.2).length;\n      \n      // Add new highlights if below max\n      if (currentHighlighted < maxHighlighted) {\n        const vertexIndex = Math.floor(Math.random() * vertices.length);\n        vertices[vertexIndex].isHighlighted = true;\n        vertices[vertexIndex].highlightStrength = 1.0; // Start full strength\n      }\n    }\n    \n    // Find connections between vertices\n    for (let i = 0; i < vertices.length; i++) {\n      for (let j = i + 1; j < vertices.length; j++) {\n        const v1 = vertices[i];\n        const v2 = vertices[j];\n        \n        // Calculate distance between vertices\n        const dx = v2.x - v1.x;\n        const dy = v2.y - v1.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        \n        // Connect if within threshold\n        if (distance < threshold) {\n          // Adjust opacity based on distance and highlight state\n          const baseOpacity = 1 - (distance / threshold);\n          let opacity = baseOpacity * 0.2; // Default low opacity\n          \n          // Boost opacity if either vertex is highlighted\n          if (v1.highlightStrength > 0 || v2.highlightStrength > 0) {\n            const highlightFactor = Math.max(v1.highlightStrength, v2.highlightStrength);\n            opacity = baseOpacity * (0.2 + highlightFactor * 0.6);\n          }\n          \n          constellations.push({\n            x1: v1.x,\n            y1: v1.y,\n            x2: v2.x,\n            y2: v2.y,\n            opacity\n          });\n        }\n      }\n    }\n    \n    return constellations;\n  }, [config.maxHighlightedConstellations, config.constellationRenderProbability]);\n  \n  // Draw constellations\n  const drawConstellations = useCallback((ctx, constellations) => {\n    constellations.forEach(line => {\n      // Extract line properties\n      const { x1, y1, x2, y2, opacity } = line;\n      \n      // Draw line with gradient for more elegant effect\n      if (adaptedSettings.highQualityEffects) {\n        // Create gradient\n        const gradient = ctx.createLinearGradient(x1, y1, x2, y2);\n        const color = config.constellationLineColor.replace('0.2)', `${opacity})`);\n        \n        gradient.addColorStop(0, color);\n        gradient.addColorStop(0.5, color.replace('0.2', '0.35')); // Slightly brighter in middle\n        gradient.addColorStop(1, color);\n        \n        // Draw main line\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.strokeStyle = gradient;\n        ctx.lineWidth = 0.5;\n        ctx.stroke();\n      } else {\n        // Simplified line for performance\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        const color = config.constellationLineColor.replace('0.2)', `${opacity})`);\n        ctx.strokeStyle = color;\n        ctx.lineWidth = 0.5;\n        ctx.stroke();\n      }\n    });\n  }, [config.constellationLineColor, adaptedSettings.highQualityEffects]);\n  \n  // Draw highlighted vertices\n  const drawVertices = useCallback((ctx, vertices, timestamp) => {\n    vertices.forEach(vertex => {\n      // Only draw vertices with highlight\n      if (vertex.highlightStrength <= 0) return;\n      \n      // Calculate pulse effect for highlighted vertices\n      const pulseEffect = 1 + Math.sin(timestamp * 0.001 + vertex.pulsePhase) * 0.3;\n      const strength = vertex.highlightStrength * pulseEffect;\n      \n      // Draw vertex glow\n      ctx.beginPath();\n      ctx.arc(vertex.x, vertex.y, 2 + strength * 8, 0, Math.PI * 2);\n      \n      // Create radial gradient for glow effect\n      const gradient = ctx.createRadialGradient(\n        vertex.x, vertex.y, 0,\n        vertex.x, vertex.y, 2 + strength * 8\n      );\n      \n      gradient.addColorStop(0, config.constellationPulseColor.replace('0.15)', `${0.7 * strength})`));\n      gradient.addColorStop(0.5, config.constellationPulseColor.replace('0.15)', `${0.3 * strength})`));\n      gradient.addColorStop(1, config.constellationPulseColor.replace('0.15)', '0)'));\n      \n      ctx.fillStyle = gradient;\n      ctx.fill();\n    });\n  }, [config.constellationPulseColor]);\n  \n  // Main animation loop with optimized FPS limiting\n  const animate = useCallback((timestamp) => {\n    // Skip if not visible, not initialized, or user prefers reduced motion\n    if (!isVisible || !canvasRef.current || \n        (config.respectReducedMotion && prefersReducedMotion)) {\n      animationFrameRef.current = requestAnimationFrame(animate);\n      return;\n    }\n    \n    // Initialize timestamp on first frame\n    if (lastTimestampRef.current === 0) {\n      lastTimestampRef.current = timestamp;\n      animationFrameRef.current = requestAnimationFrame(animate);\n      return;\n    }\n    \n    // Calculate delta time for smooth animation\n    const deltaTime = timestamp - lastTimestampRef.current;\n    \n    // Limit FPS for consistent animation and performance\n    const frameInterval = 1000 / config.maxFPS;\n    if (deltaTime < frameInterval) {\n      animationFrameRef.current = requestAnimationFrame(animate);\n      return;\n    }\n    \n    // Update timing\n    lastTimestampRef.current = timestamp - (deltaTime % frameInterval);\n    \n    // Get canvas context\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    if (!ctx) {\n      animationFrameRef.current = requestAnimationFrame(animate);\n      return;\n    }\n    \n    // Clear canvas\n    ctx.clearRect(0, 0, dimensions.width, dimensions.height);\n    \n    // Update and draw stars\n    starsRef.current.forEach(star => {\n      drawStar(ctx, star, timestamp);\n    });\n    \n    // Handle constellations if enabled\n    if (adaptedSettings.renderConstellations) {\n      // Update constellation connections\n      constellationsRef.current = updateConstellations(\n        verticesRef.current,\n        config.constellationLineThreshold,\n        timestamp\n      );\n      \n      // Draw constellation lines\n      drawConstellations(ctx, constellationsRef.current);\n      \n      // Draw vertex highlights\n      drawVertices(ctx, verticesRef.current, timestamp);\n    }\n    \n    // Schedule next frame\n    animationFrameRef.current = requestAnimationFrame(animate);\n  }, [\n    isVisible, prefersReducedMotion, dimensions,\n    config.maxFPS, config.respectReducedMotion, config.constellationLineThreshold,\n    drawStar, updateConstellations, drawConstellations, drawVertices,\n    adaptedSettings.renderConstellations\n  ]);\n  \n  // Start animation\n  useEffect(() => {\n    // Begin animation loop\n    animationFrameRef.current = requestAnimationFrame(animate);\n    \n    // Cleanup on unmount\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [animate]);\n  \n  return (\n    <canvas\n      ref={canvasRef}\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: -1,\n        backgroundColor: 'rgba(5, 5, 5, 1)',\n        opacity: prefersReducedMotion ? 0.7 : 1,\n        transition: 'opacity 0.5s ease',\n        // Hardware acceleration\n        transform: 'translateZ(0)',\n        willChange: 'transform',\n        pointerEvents: 'none'\n      }}\n      aria-hidden=\"true\"\n    />\n  );\n};\n\nexport default Background;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}