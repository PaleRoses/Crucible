{"ast":null,"code":"var _jsxFileName = \"/home/valeria/Documents/Crucible/frontend/src/components/core/effects/ScrollingTextAnimation.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useRef, useMemo, useState } from 'react';\nimport { motion, useScroll, useTransform } from 'framer-motion';\nimport { createUseStyles } from 'react-jss';\n\n// Optimized device capability detection hook\n// Only runs once on component mount to prevent performance issues\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useDeviceCapabilities = () => {\n  _s();\n  const [capabilities] = useState(() => {\n    if (typeof window === 'undefined') {\n      return {\n        isMobile: false,\n        prefersReducedMotion: false\n      };\n    }\n    const isMobile = window.innerWidth <= 768 || /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || 'maxTouchPoints' in navigator && navigator.maxTouchPoints > 0;\n    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n    return {\n      isMobile,\n      prefersReducedMotion\n    };\n  });\n  return capabilities;\n};\n\n// Performance-optimized intersection observer hook\n_s(useDeviceCapabilities, \"SPp3NuuQ0tChE5FTh/nVMabQplI=\");\nconst useElementVisibility = (elementRef, options = {}) => {\n  _s2();\n  const [isVisible, setIsVisible] = useState(false);\n  const observerRef = useRef(null);\n  const {\n    threshold = 0.1,\n    rootMargin = '100px 0px',\n    once = true\n  } = options;\n  React.useEffect(() => {\n    const currentRef = elementRef.current;\n    if (!currentRef || typeof IntersectionObserver === 'undefined') {\n      setIsVisible(true); // Fallback\n      return;\n    }\n\n    // Cleanup previous observer\n    if (observerRef.current) {\n      observerRef.current.disconnect();\n    }\n\n    // Create new observer with optimized performance settings\n    observerRef.current = new IntersectionObserver(entries => {\n      const [entry] = entries;\n      setIsVisible(entry.isIntersecting);\n\n      // If once is true and element is visible, disconnect observer for better performance\n      if (once && entry.isIntersecting && observerRef.current) {\n        observerRef.current.unobserve(currentRef);\n      }\n    }, {\n      threshold,\n      rootMargin\n    });\n    observerRef.current.observe(currentRef);\n    return () => {\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n    };\n  }, [elementRef, threshold, rootMargin, once]);\n  return isVisible;\n};\n\n// Static styles that don't change with props\n_s2(useElementVisibility, \"CInr1yM9jgOEycPIF6uA9NcHgfE=\");\nconst useStaticStyles = createUseStyles({\n  '@global': {\n    '@keyframes fadeInUp': {\n      from: {\n        opacity: 0,\n        transform: 'translateY(20px)'\n      },\n      to: {\n        opacity: 1,\n        transform: 'translateY(0)'\n      }\n    }\n  },\n  root: {\n    position: 'relative',\n    width: '100%',\n    zIndex: 2,\n    // Critical GPU acceleration properties\n    willChange: 'transform',\n    // Higher quality text rendering\n    '-webkit-font-smoothing': 'antialiased',\n    '-moz-osx-font-smoothing': 'grayscale',\n    // Ensure consistent GPU rendering for smoother transitions\n    transform: 'translateZ(0)'\n  },\n  content: {\n    width: '100%'\n  },\n  simplifiedAnimation: {\n    animation: '$fadeInUp 0.65s cubic-bezier(0.21, 0.6, 0.35, 1) forwards'\n  }\n});\n\n// Dynamic styles that depend on props\nconst useDynamicStyles = createUseStyles({\n  container: props => ({\n    textAlign: props.textAlign,\n    margin: props.margin\n  }),\n  divider: props => ({\n    width: props.dividerWidth,\n    height: props.dividerHeight,\n    background: props.dividerBackground,\n    margin: props.dividerMargin,\n    display: props.showDivider ? 'block' : 'none'\n  })\n});\n\n/**\n * UltraSmoothScrollAnimation\n * \n * A high-performance scroll animation component with buttery-smooth\n * transitions on all devices.\n */\nconst UltraSmoothScrollAnimation = ({\n  children,\n  scrollConfig = {},\n  textAlign = 'center',\n  margin = '0 0 3rem 0',\n  showDivider = true,\n  dividerWidth = '150px',\n  dividerHeight = '1px',\n  dividerBackground = 'linear-gradient(to right, rgba(160, 142, 97, 0), rgba(160, 142, 97, 0.6), rgba(160, 142, 97, 0))',\n  dividerMargin = '1rem auto',\n  style = {},\n  className = ''\n}) => {\n  _s3();\n  // Configuration with performance-optimized defaults\n  const {\n    initialY = 25,\n    // Smaller movement range for smoother transitions\n    finalY = 0,\n    initialOpacity = 0,\n    finalOpacity = 1,\n    enableReducedMotion = true,\n    disableOnMobile = false,\n    scrollOffset = [\"start end\", \"end start\"],\n    animationMode = 'auto' // 'auto', 'scroll', 'inView', or 'none'\n  } = scrollConfig;\n\n  // Element reference and visibility tracking\n  const elementRef = useRef(null);\n  const isVisible = useElementVisibility(elementRef, {\n    once: true\n  });\n\n  // Device capability detection\n  const {\n    isMobile,\n    prefersReducedMotion\n  } = useDeviceCapabilities();\n\n  // Determine the most appropriate animation strategy for current device\n  const animationStrategy = useMemo(() => {\n    // Honor explicit setting if provided\n    if (animationMode !== 'auto') return animationMode;\n\n    // Use simplified animations for reduced motion preferences or mobile if configured\n    if (enableReducedMotion && prefersReducedMotion || disableOnMobile && isMobile) {\n      return 'none';\n    }\n\n    // On mobile, prefer simpler in-view animations over scroll-based ones\n    if (isMobile) {\n      return 'inView';\n    }\n\n    // Default to scroll-based animations for desktop\n    return 'scroll';\n  }, [animationMode, enableReducedMotion, prefersReducedMotion, disableOnMobile, isMobile]);\n\n  // Optimized scroll configuration\n  const {\n    scrollYProgress\n  } = useScroll({\n    target: elementRef,\n    offset: scrollOffset,\n    // Only enable when using scroll animations to avoid unnecessary calculations\n    layoutEffect: animationStrategy === 'scroll',\n    // Apply appropriate smoothing based on device\n    smooth: isMobile ? 5 : 15\n  });\n\n  // Create transforms with optimized ranges - focuses animation in a narrower scroll window\n  const y = useTransform(scrollYProgress, [0, 0.6],\n  // Animation completes by 60% of scroll\n  [initialY, finalY]);\n  const opacity = useTransform(scrollYProgress, [0, 0.5],\n  // Opacity reaches full by 50% of scroll\n  [initialOpacity, finalOpacity]);\n\n  // Apply styles\n  const staticClasses = useStaticStyles();\n  const styleProps = useMemo(() => ({\n    textAlign,\n    margin,\n    showDivider,\n    dividerWidth,\n    dividerHeight,\n    dividerBackground,\n    dividerMargin\n  }), [textAlign, margin, showDivider, dividerWidth, dividerHeight, dividerBackground, dividerMargin]);\n  const dynamicClasses = useDynamicStyles(styleProps);\n\n  // Strategy 1: No animations (static render with CSS animation)\n  if (animationStrategy === 'none') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: elementRef,\n      className: `${staticClasses.root} ${dynamicClasses.container} ${staticClasses.simplifiedAnimation} ${className}`,\n      style: style,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: staticClasses.content,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), showDivider && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: dynamicClasses.divider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Strategy 2: In-view animations (appear when in viewport)\n  if (animationStrategy === 'inView') {\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      ref: elementRef,\n      className: `${staticClasses.root} ${dynamicClasses.container} ${className}`,\n      style: style,\n      initial: {\n        opacity: initialOpacity,\n        y: initialY\n      },\n      animate: isVisible ? {\n        opacity: finalOpacity,\n        y: finalY\n      } : {\n        opacity: initialOpacity,\n        y: initialY\n      },\n      transition: {\n        duration: 0.7,\n        ease: [0.25, 0.1, 0.25, 1.0] // Optimized cubic bezier curve for smooth motion\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: staticClasses.content,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), showDivider && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: dynamicClasses.divider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Strategy 3: Scroll-based animations (default for desktop)\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    ref: elementRef,\n    className: `${staticClasses.root} ${dynamicClasses.container} ${className}`,\n    style: {\n      ...style,\n      y,\n      opacity,\n      // Force GPU acceleration for smoother animations\n      translateZ: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: staticClasses.content,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), showDivider && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: dynamicClasses.divider\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n};\n\n// Prevent unnecessary re-renders\n_s3(UltraSmoothScrollAnimation, \"ygBh68dsbKcB10Rxn08ZREsCCVA=\", false, function () {\n  return [useElementVisibility, useDeviceCapabilities, useScroll, useTransform, useTransform, useStaticStyles, useDynamicStyles];\n});\n_c = UltraSmoothScrollAnimation;\nexport default _c2 = /*#__PURE__*/React.memo(UltraSmoothScrollAnimation);\nvar _c, _c2;\n$RefreshReg$(_c, \"UltraSmoothScrollAnimation\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useRef","useMemo","useState","motion","useScroll","useTransform","createUseStyles","jsxDEV","_jsxDEV","useDeviceCapabilities","_s","capabilities","window","isMobile","prefersReducedMotion","innerWidth","test","navigator","userAgent","maxTouchPoints","matchMedia","matches","useElementVisibility","elementRef","options","_s2","isVisible","setIsVisible","observerRef","threshold","rootMargin","once","useEffect","currentRef","current","IntersectionObserver","disconnect","entries","entry","isIntersecting","unobserve","observe","useStaticStyles","from","opacity","transform","to","root","position","width","zIndex","willChange","content","simplifiedAnimation","animation","useDynamicStyles","container","props","textAlign","margin","divider","dividerWidth","height","dividerHeight","background","dividerBackground","dividerMargin","display","showDivider","UltraSmoothScrollAnimation","children","scrollConfig","style","className","_s3","initialY","finalY","initialOpacity","finalOpacity","enableReducedMotion","disableOnMobile","scrollOffset","animationMode","animationStrategy","scrollYProgress","target","offset","layoutEffect","smooth","y","staticClasses","styleProps","dynamicClasses","ref","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","animate","transition","duration","ease","translateZ","_c","_c2","memo","$RefreshReg$"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/core/effects/ScrollingTextAnimation.jsx"],"sourcesContent":["import React, { useRef, useMemo, useState } from 'react';\nimport { motion, useScroll, useTransform } from 'framer-motion';\nimport { createUseStyles } from 'react-jss';\n\n// Optimized device capability detection hook\n// Only runs once on component mount to prevent performance issues\nconst useDeviceCapabilities = () => {\n  const [capabilities] = useState(() => {\n    if (typeof window === 'undefined') {\n      return { isMobile: false, prefersReducedMotion: false };\n    }\n    \n    const isMobile = \n      window.innerWidth <= 768 || \n      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ||\n      (('maxTouchPoints' in navigator) && navigator.maxTouchPoints > 0);\n    \n    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n    \n    return { isMobile, prefersReducedMotion };\n  });\n  \n  return capabilities;\n};\n\n// Performance-optimized intersection observer hook\nconst useElementVisibility = (elementRef, options = {}) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const observerRef = useRef(null);\n  \n  const { \n    threshold = 0.1, \n    rootMargin = '100px 0px',\n    once = true \n  } = options;\n  \n  React.useEffect(() => {\n    const currentRef = elementRef.current;\n    if (!currentRef || typeof IntersectionObserver === 'undefined') {\n      setIsVisible(true); // Fallback\n      return;\n    }\n    \n    // Cleanup previous observer\n    if (observerRef.current) {\n      observerRef.current.disconnect();\n    }\n    \n    // Create new observer with optimized performance settings\n    observerRef.current = new IntersectionObserver(\n      (entries) => {\n        const [entry] = entries;\n        setIsVisible(entry.isIntersecting);\n        \n        // If once is true and element is visible, disconnect observer for better performance\n        if (once && entry.isIntersecting && observerRef.current) {\n          observerRef.current.unobserve(currentRef);\n        }\n      },\n      { threshold, rootMargin }\n    );\n    \n    observerRef.current.observe(currentRef);\n    \n    return () => {\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n    };\n  }, [elementRef, threshold, rootMargin, once]);\n  \n  return isVisible;\n};\n\n// Static styles that don't change with props\nconst useStaticStyles = createUseStyles({\n  '@global': {\n    '@keyframes fadeInUp': {\n      from: { opacity: 0, transform: 'translateY(20px)' },\n      to: { opacity: 1, transform: 'translateY(0)' }\n    }\n  },\n  root: {\n    position: 'relative',\n    width: '100%',\n    zIndex: 2,\n    // Critical GPU acceleration properties\n    willChange: 'transform',\n    // Higher quality text rendering\n    '-webkit-font-smoothing': 'antialiased',\n    '-moz-osx-font-smoothing': 'grayscale',\n    // Ensure consistent GPU rendering for smoother transitions\n    transform: 'translateZ(0)'\n  },\n  content: {\n    width: '100%'\n  },\n  simplifiedAnimation: {\n    animation: '$fadeInUp 0.65s cubic-bezier(0.21, 0.6, 0.35, 1) forwards'\n  }\n});\n\n// Dynamic styles that depend on props\nconst useDynamicStyles = createUseStyles({\n  container: props => ({\n    textAlign: props.textAlign,\n    margin: props.margin\n  }),\n  divider: props => ({\n    width: props.dividerWidth,\n    height: props.dividerHeight,\n    background: props.dividerBackground,\n    margin: props.dividerMargin,\n    display: props.showDivider ? 'block' : 'none'\n  })\n});\n\n/**\n * UltraSmoothScrollAnimation\n * \n * A high-performance scroll animation component with buttery-smooth\n * transitions on all devices.\n */\nconst UltraSmoothScrollAnimation = ({\n  children,\n  scrollConfig = {},\n  textAlign = 'center',\n  margin = '0 0 3rem 0',\n  showDivider = true,\n  dividerWidth = '150px',\n  dividerHeight = '1px',\n  dividerBackground = 'linear-gradient(to right, rgba(160, 142, 97, 0), rgba(160, 142, 97, 0.6), rgba(160, 142, 97, 0))',\n  dividerMargin = '1rem auto',\n  style = {},\n  className = ''\n}) => {\n  // Configuration with performance-optimized defaults\n  const {\n    initialY = 25,        // Smaller movement range for smoother transitions\n    finalY = 0,\n    initialOpacity = 0,\n    finalOpacity = 1,\n    enableReducedMotion = true,\n    disableOnMobile = false,\n    scrollOffset = [\"start end\", \"end start\"],\n    animationMode = 'auto' // 'auto', 'scroll', 'inView', or 'none'\n  } = scrollConfig;\n  \n  // Element reference and visibility tracking\n  const elementRef = useRef(null);\n  const isVisible = useElementVisibility(elementRef, { once: true });\n  \n  // Device capability detection\n  const { isMobile, prefersReducedMotion } = useDeviceCapabilities();\n  \n  // Determine the most appropriate animation strategy for current device\n  const animationStrategy = useMemo(() => {\n    // Honor explicit setting if provided\n    if (animationMode !== 'auto') return animationMode;\n    \n    // Use simplified animations for reduced motion preferences or mobile if configured\n    if ((enableReducedMotion && prefersReducedMotion) || (disableOnMobile && isMobile)) {\n      return 'none';\n    }\n    \n    // On mobile, prefer simpler in-view animations over scroll-based ones\n    if (isMobile) {\n      return 'inView';\n    }\n    \n    // Default to scroll-based animations for desktop\n    return 'scroll';\n  }, [animationMode, enableReducedMotion, prefersReducedMotion, disableOnMobile, isMobile]);\n  \n  // Optimized scroll configuration\n  const { scrollYProgress } = useScroll({\n    target: elementRef,\n    offset: scrollOffset,\n    // Only enable when using scroll animations to avoid unnecessary calculations\n    layoutEffect: animationStrategy === 'scroll',\n    // Apply appropriate smoothing based on device\n    smooth: isMobile ? 5 : 15\n  });\n  \n  // Create transforms with optimized ranges - focuses animation in a narrower scroll window\n  const y = useTransform(\n    scrollYProgress,\n    [0, 0.6], // Animation completes by 60% of scroll\n    [initialY, finalY]\n  );\n  \n  const opacity = useTransform(\n    scrollYProgress,\n    [0, 0.5], // Opacity reaches full by 50% of scroll\n    [initialOpacity, finalOpacity]\n  );\n  \n  // Apply styles\n  const staticClasses = useStaticStyles();\n  \n  const styleProps = useMemo(() => ({\n    textAlign,\n    margin,\n    showDivider,\n    dividerWidth,\n    dividerHeight,\n    dividerBackground,\n    dividerMargin\n  }), [textAlign, margin, showDivider, dividerWidth, dividerHeight, dividerBackground, dividerMargin]);\n  \n  const dynamicClasses = useDynamicStyles(styleProps);\n  \n  // Strategy 1: No animations (static render with CSS animation)\n  if (animationStrategy === 'none') {\n    return (\n      <div \n        ref={elementRef}\n        className={`${staticClasses.root} ${dynamicClasses.container} ${staticClasses.simplifiedAnimation} ${className}`}\n        style={style}\n      >\n        <div className={staticClasses.content}>{children}</div>\n        {showDivider && <div className={dynamicClasses.divider} />}\n      </div>\n    );\n  }\n  \n  // Strategy 2: In-view animations (appear when in viewport)\n  if (animationStrategy === 'inView') {\n    return (\n      <motion.div \n        ref={elementRef}\n        className={`${staticClasses.root} ${dynamicClasses.container} ${className}`}\n        style={style}\n        initial={{ opacity: initialOpacity, y: initialY }}\n        animate={isVisible ? { opacity: finalOpacity, y: finalY } : { opacity: initialOpacity, y: initialY }}\n        transition={{\n          duration: 0.7,\n          ease: [0.25, 0.1, 0.25, 1.0], // Optimized cubic bezier curve for smooth motion\n        }}\n      >\n        <div className={staticClasses.content}>{children}</div>\n        {showDivider && <div className={dynamicClasses.divider} />}\n      </motion.div>\n    );\n  }\n  \n  // Strategy 3: Scroll-based animations (default for desktop)\n  return (\n    <motion.div \n      ref={elementRef}\n      className={`${staticClasses.root} ${dynamicClasses.container} ${className}`}\n      style={{ \n        ...style,\n        y,\n        opacity,\n        // Force GPU acceleration for smoother animations\n        translateZ: 0\n      }}\n    >\n      <div className={staticClasses.content}>{children}</div>\n      {showDivider && <div className={dynamicClasses.divider} />}\n    </motion.div>\n  );\n};\n\n// Prevent unnecessary re-renders\nexport default React.memo(UltraSmoothScrollAnimation);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}