{"ast":null,"code":"var _jsxFileName = \"/home/valeria/Documents/Crucible/frontend/src/components/core/effects/ScrollingTextAnimation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { motion, useScroll, useTransform } from 'framer-motion';\nimport { createUseStyles } from 'react-jss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  animatedContainer: {\n    position: 'relative',\n    width: '100%',\n    textAlign: props => props.textAlign || 'center',\n    margin: props => props.margin || '0 0 3rem 0',\n    zIndex: 2,\n    willChange: 'transform, opacity',\n    backfaceVisibility: 'hidden',\n    // Prevents flickering in some browsers\n    perspective: 1000,\n    // Improves GPU acceleration\n    transform: 'translate3d(0,0,0)' // Force GPU rendering\n  },\n  content: {\n    width: '100%'\n  },\n  divider: props => ({\n    width: props.dividerWidth || '150px',\n    height: props.dividerHeight || '1px',\n    background: props.dividerBackground || 'linear-gradient(to right, rgba(160, 142, 97, 0), rgba(160, 142, 97, 0.6), rgba(160, 142, 97, 0))',\n    margin: props.dividerMargin || '1rem auto',\n    display: props.showDivider ? 'block' : 'none'\n  })\n});\n\n/**\n * ScrollingTextAnimation Component\n * \n * A highly optimized, butter-smooth scroll-based animation component\n * for text elements with exceptional performance on both mobile and desktop.\n */\nconst ScrollingTextAnimation = ({\n  children,\n  scrollConfig = {},\n  textAlign = 'center',\n  margin = '0 0 3rem 0',\n  showDivider = true,\n  dividerWidth = '150px',\n  dividerHeight = '1px',\n  dividerBackground,\n  dividerMargin = '1rem auto',\n  style = {},\n  className = ''\n}) => {\n  _s();\n  // Set default scroll configuration with performance-optimized defaults\n  const {\n    startPosition = 0,\n    endPosition = 300,\n    initialY = -100,\n    finalY = 0,\n    clampValues = true,\n    opacityValues = [1, 0.95, 0.9],\n    opacityScrollPositions = [startPosition, endPosition, endPosition + 100],\n    reverseDirection = false,\n    throttleAmount = 16,\n    // Match 60fps refresh rate (1000ms/60 â‰ˆ 16.7ms)\n    enableReducedMotion = true,\n    // Respect user's reduced motion preferences\n    disableOnMobile = false // Option to disable complex animations on mobile\n  } = scrollConfig;\n  const containerRef = useRef(null);\n  const [isInView, setIsInView] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n  const [prefersReducedMotion, setPrefersReducedMotion] = useState(false);\n\n  // Calculate the actual Y values considering direction\n  const yInputRange = [startPosition, endPosition];\n  const yOutputRange = reverseDirection ? [finalY, initialY] : [initialY, finalY];\n\n  // Detect mobile devices and motion preferences\n  useEffect(() => {\n    // Check for mobile devices\n    const checkMobile = () => {\n      setIsMobile(typeof window !== 'undefined' && (window.innerWidth <= 768 || /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)));\n    };\n\n    // Check for reduced motion preference\n    const checkReducedMotion = () => {\n      setPrefersReducedMotion(typeof window !== 'undefined' && window.matchMedia('(prefers-reduced-motion: reduce)').matches);\n    };\n    checkMobile();\n    checkReducedMotion();\n\n    // Update on resize\n    const handleResize = () => {\n      checkMobile();\n    };\n    if (typeof window !== 'undefined') {\n      window.addEventListener('resize', handleResize);\n\n      // Clean up\n      return () => {\n        window.removeEventListener('resize', handleResize);\n      };\n    }\n  }, []);\n\n  // Use custom scroll with throttling\n  const {\n    scrollY\n  } = useScroll({\n    container: typeof window !== 'undefined' ? window : undefined,\n    layoutEffect: false,\n    offset: ['start', 'end'],\n    throttleDelay: throttleAmount\n  });\n\n  // Create transform values based on scroll position with memoization\n  const translateY = useTransform(scrollY, yInputRange, yOutputRange, {\n    clamp: clampValues\n  });\n\n  // Create opacity transform\n  const opacity = useTransform(scrollY, opacityScrollPositions, opacityValues, {\n    clamp: clampValues\n  });\n\n  // Highly optimized intersection observer setup\n  useEffect(() => {\n    if (!containerRef.current || typeof IntersectionObserver === 'undefined') return;\n\n    // Store the current ref value to avoid closure issues\n    const currentRef = containerRef.current;\n\n    // Create observer with optimized settings\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        // Use requestAnimationFrame to sync with browser render cycle\n        requestAnimationFrame(() => {\n          setIsInView(entry.isIntersecting);\n        });\n      });\n    }, {\n      root: null,\n      // Larger rootMargin to start animations before element comes into view\n      rootMargin: '100px 0px',\n      threshold: 0.1\n    });\n    observer.observe(currentRef);\n\n    // Cleanup using captured ref value\n    return () => {\n      observer.unobserve(currentRef);\n    };\n  }, []);\n\n  // Determine if we should use simplified animations\n  const shouldUseSimplifiedAnimations = enableReducedMotion && prefersReducedMotion || disableOnMobile && isMobile;\n\n  // Create styles for component\n  const styleProps = {\n    textAlign,\n    margin,\n    showDivider,\n    dividerWidth,\n    dividerHeight,\n    dividerBackground,\n    dividerMargin\n  };\n  const classes = useStyles(styleProps);\n\n  // Memoize style calculations to prevent recalculations on every render\n  const getAnimationStyle = useCallback(() => {\n    if (!isInView) {\n      // Initial static position when not in view\n      return {\n        y: reverseDirection ? finalY : initialY,\n        opacity: opacityValues[0]\n      };\n    }\n    if (shouldUseSimplifiedAnimations) {\n      // Simplified animation for reduced motion or mobile\n      return {\n        y: finalY,\n        opacity: 1,\n        transition: {\n          duration: 0.5,\n          ease: [0.25, 0.1, 0.25, 1.0] // Cubic bezier for smooth easing\n        }\n      };\n    }\n\n    // Full animation with GPU acceleration\n    return {\n      y: translateY,\n      opacity: opacity,\n      transition: {\n        y: {\n          duration: 0.08,\n          ease: \"linear\"\n        },\n        opacity: {\n          duration: 0.08,\n          ease: \"linear\"\n        }\n      }\n    };\n  }, [isInView, shouldUseSimplifiedAnimations, translateY, opacity, reverseDirection, finalY, initialY, opacityValues]);\n  const animationStyle = getAnimationStyle();\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    ref: containerRef,\n    className: `${classes.animatedContainer} ${className}`,\n    style: {\n      ...style,\n      ...animationStyle\n    }\n    // Additional Framer Motion optimizations\n    ,\n    transformTemplate: (_, transform) => `${transform} translateZ(0)`,\n    layoutId: undefined // Prevent layout animations\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), showDivider && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.divider\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrollingTextAnimation, \"nQlrSwDrWTQhaxZ+Lvqwwo/1hm0=\", false, function () {\n  return [useScroll, useTransform, useTransform, useStyles];\n});\n_c = ScrollingTextAnimation;\nexport default ScrollingTextAnimation;\nvar _c;\n$RefreshReg$(_c, \"ScrollingTextAnimation\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","motion","useScroll","useTransform","createUseStyles","jsxDEV","_jsxDEV","useStyles","animatedContainer","position","width","textAlign","props","margin","zIndex","willChange","backfaceVisibility","perspective","transform","content","divider","dividerWidth","height","dividerHeight","background","dividerBackground","dividerMargin","display","showDivider","ScrollingTextAnimation","children","scrollConfig","style","className","_s","startPosition","endPosition","initialY","finalY","clampValues","opacityValues","opacityScrollPositions","reverseDirection","throttleAmount","enableReducedMotion","disableOnMobile","containerRef","isInView","setIsInView","isMobile","setIsMobile","prefersReducedMotion","setPrefersReducedMotion","yInputRange","yOutputRange","checkMobile","window","innerWidth","test","navigator","userAgent","checkReducedMotion","matchMedia","matches","handleResize","addEventListener","removeEventListener","scrollY","container","undefined","layoutEffect","offset","throttleDelay","translateY","clamp","opacity","current","IntersectionObserver","currentRef","observer","entries","forEach","entry","requestAnimationFrame","isIntersecting","root","rootMargin","threshold","observe","unobserve","shouldUseSimplifiedAnimations","styleProps","classes","getAnimationStyle","y","transition","duration","ease","animationStyle","div","ref","transformTemplate","_","layoutId","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/core/effects/ScrollingTextAnimation.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { motion, useScroll, useTransform } from 'framer-motion';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  animatedContainer: {\n    position: 'relative',\n    width: '100%',\n    textAlign: props => props.textAlign || 'center',\n    margin: props => props.margin || '0 0 3rem 0',\n    zIndex: 2,\n    willChange: 'transform, opacity',\n    backfaceVisibility: 'hidden', // Prevents flickering in some browsers\n    perspective: 1000, // Improves GPU acceleration\n    transform: 'translate3d(0,0,0)', // Force GPU rendering\n  },\n  content: {\n    width: '100%',\n  },\n  divider: props => ({\n    width: props.dividerWidth || '150px',\n    height: props.dividerHeight || '1px',\n    background: props.dividerBackground || 'linear-gradient(to right, rgba(160, 142, 97, 0), rgba(160, 142, 97, 0.6), rgba(160, 142, 97, 0))',\n    margin: props.dividerMargin || '1rem auto',\n    display: props.showDivider ? 'block' : 'none'\n  })\n});\n\n/**\n * ScrollingTextAnimation Component\n * \n * A highly optimized, butter-smooth scroll-based animation component\n * for text elements with exceptional performance on both mobile and desktop.\n */\nconst ScrollingTextAnimation = ({\n  children,\n  scrollConfig = {},\n  textAlign = 'center',\n  margin = '0 0 3rem 0',\n  showDivider = true,\n  dividerWidth = '150px',\n  dividerHeight = '1px',\n  dividerBackground,\n  dividerMargin = '1rem auto',\n  style = {},\n  className = ''\n}) => {\n  // Set default scroll configuration with performance-optimized defaults\n  const {\n    startPosition = 0,\n    endPosition = 300,\n    initialY = -100,\n    finalY = 0,\n    clampValues = true,\n    opacityValues = [1, 0.95, 0.9],\n    opacityScrollPositions = [startPosition, endPosition, endPosition + 100],\n    reverseDirection = false,\n    throttleAmount = 16, // Match 60fps refresh rate (1000ms/60 â‰ˆ 16.7ms)\n    enableReducedMotion = true, // Respect user's reduced motion preferences\n    disableOnMobile = false // Option to disable complex animations on mobile\n  } = scrollConfig;\n\n  const containerRef = useRef(null);\n  const [isInView, setIsInView] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n  const [prefersReducedMotion, setPrefersReducedMotion] = useState(false);\n  \n  // Calculate the actual Y values considering direction\n  const yInputRange = [startPosition, endPosition];\n  const yOutputRange = reverseDirection ? [finalY, initialY] : [initialY, finalY];\n  \n  // Detect mobile devices and motion preferences\n  useEffect(() => {\n    // Check for mobile devices\n    const checkMobile = () => {\n      setIsMobile(\n        typeof window !== 'undefined' && \n        (window.innerWidth <= 768 || \n         /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent))\n      );\n    };\n    \n    // Check for reduced motion preference\n    const checkReducedMotion = () => {\n      setPrefersReducedMotion(\n        typeof window !== 'undefined' && \n        window.matchMedia('(prefers-reduced-motion: reduce)').matches\n      );\n    };\n    \n    checkMobile();\n    checkReducedMotion();\n    \n    // Update on resize\n    const handleResize = () => {\n      checkMobile();\n    };\n    \n    if (typeof window !== 'undefined') {\n      window.addEventListener('resize', handleResize);\n      \n      // Clean up\n      return () => {\n        window.removeEventListener('resize', handleResize);\n      };\n    }\n  }, []);\n  \n  // Use custom scroll with throttling\n  const { scrollY } = useScroll({\n    container: typeof window !== 'undefined' ? window : undefined,\n    layoutEffect: false,\n    offset: ['start', 'end'],\n    throttleDelay: throttleAmount\n  });\n  \n  // Create transform values based on scroll position with memoization\n  const translateY = useTransform(\n    scrollY,\n    yInputRange,\n    yOutputRange,\n    { clamp: clampValues }\n  );\n  \n  // Create opacity transform\n  const opacity = useTransform(\n    scrollY,\n    opacityScrollPositions,\n    opacityValues,\n    { clamp: clampValues }\n  );\n  \n  // Highly optimized intersection observer setup\n  useEffect(() => {\n    if (!containerRef.current || typeof IntersectionObserver === 'undefined') return;\n    \n    // Store the current ref value to avoid closure issues\n    const currentRef = containerRef.current;\n    \n    // Create observer with optimized settings\n    const observer = new IntersectionObserver(\n      entries => {\n        entries.forEach(entry => {\n          // Use requestAnimationFrame to sync with browser render cycle\n          requestAnimationFrame(() => {\n            setIsInView(entry.isIntersecting);\n          });\n        });\n      },\n      {\n        root: null,\n        // Larger rootMargin to start animations before element comes into view\n        rootMargin: '100px 0px',\n        threshold: 0.1\n      }\n    );\n    \n    observer.observe(currentRef);\n    \n    // Cleanup using captured ref value\n    return () => {\n      observer.unobserve(currentRef);\n    };\n  }, []);\n  \n  // Determine if we should use simplified animations\n  const shouldUseSimplifiedAnimations = \n    (enableReducedMotion && prefersReducedMotion) || \n    (disableOnMobile && isMobile);\n  \n  // Create styles for component\n  const styleProps = {\n    textAlign,\n    margin,\n    showDivider,\n    dividerWidth,\n    dividerHeight,\n    dividerBackground,\n    dividerMargin\n  };\n  \n  const classes = useStyles(styleProps);\n  \n  // Memoize style calculations to prevent recalculations on every render\n  const getAnimationStyle = useCallback(() => {\n    if (!isInView) {\n      // Initial static position when not in view\n      return {\n        y: reverseDirection ? finalY : initialY,\n        opacity: opacityValues[0],\n      };\n    }\n    \n    if (shouldUseSimplifiedAnimations) {\n      // Simplified animation for reduced motion or mobile\n      return {\n        y: finalY,\n        opacity: 1,\n        transition: {\n          duration: 0.5,\n          ease: [0.25, 0.1, 0.25, 1.0], // Cubic bezier for smooth easing\n        }\n      };\n    }\n    \n    // Full animation with GPU acceleration\n    return {\n      y: translateY,\n      opacity: opacity,\n      transition: {\n        y: { \n          duration: 0.08, \n          ease: \"linear\"\n        },\n        opacity: { \n          duration: 0.08, \n          ease: \"linear\"\n        }\n      }\n    };\n  }, [isInView, shouldUseSimplifiedAnimations, translateY, opacity, reverseDirection, finalY, initialY, opacityValues]);\n  \n  const animationStyle = getAnimationStyle();\n  \n  return (\n    <motion.div \n      ref={containerRef}\n      className={`${classes.animatedContainer} ${className}`}\n      style={{ \n        ...style,\n        ...animationStyle,\n      }}\n      // Additional Framer Motion optimizations\n      transformTemplate={(_, transform) => `${transform} translateZ(0)`}\n      layoutId={undefined} // Prevent layout animations\n    >\n      <div className={classes.content}>\n        {children}\n      </div>\n      {showDivider && <div className={classes.divider} />}\n    </motion.div>\n  );\n};\n\nexport default ScrollingTextAnimation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}