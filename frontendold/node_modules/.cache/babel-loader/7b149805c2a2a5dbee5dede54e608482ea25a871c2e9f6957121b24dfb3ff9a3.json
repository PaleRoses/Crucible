{"ast":null,"code":"var _jsxFileName = \"/home/valeria/Documents/Crucible/frontend/src/components/core/effects/cosmiceffects/MeteorShower.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\n\n/**\n * Enhanced MeteorShower Component\n * \n * A highly optimized meteor shower background effect with smooth animations,\n * performance optimizations, and battery-saving features.\n * \n * @param {Object} props\n * @param {string|number} [props.height='100vh'] - Height of the container\n * @param {number} [props.zIndex=5] - Z-index for the container\n * @param {boolean} [props.active=true] - Whether the animation is active\n * @param {number} [props.meteorCount=15] - Number of meteors to render\n * @param {number} [props.meteorSize=2] - Base size of meteors (will vary slightly)\n * @param {number} [props.meteorSpeed=0.08] - Base speed of meteors\n * @param {number} [props.trailLength=180] - Length of meteor trails\n * @param {string} [props.coreColor='rgba(255, 255, 255, 1)'] - Core color for meteors\n * @param {string} [props.glowColor='rgba(255, 245, 158, 0.9)'] - Glow color for meteors\n * @param {string} [props.trailColor='rgba(207, 181, 59, 0.8)'] - Trail color for meteors\n * @param {boolean} [props.enableBursts=true] - Enable meteor burst effects\n * @param {boolean} [props.adaptiveQuality=true] - Enable adaptive quality based on device\n * @param {boolean} [props.respectReducedMotion=true] - Respect reduced motion preferences\n * @param {boolean} [props.enableScrollParallax=false] - Enable parallax effect on scroll\n * @param {string} [props.direction='top'] - Direction: 'left', 'right', 'both', or 'top'\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MeteorShower = ({\n  height = '100vh',\n  zIndex = 5,\n  active = true,\n  meteorCount = 15,\n  meteorSize = 2,\n  meteorSpeed = 0.08,\n  trailLength = 180,\n  coreColor = 'rgba(255, 255, 255, 1)',\n  glowColor = 'rgba(255, 245, 158, 0.9)',\n  trailColor = 'rgba(207, 181, 59, 0.8)',\n  enableBursts = true,\n  adaptiveQuality = true,\n  respectReducedMotion = true,\n  enableScrollParallax = false,\n  direction = 'top'\n}) => {\n  _s();\n  // Refs for canvas and animation\n  const containerRef = useRef(null);\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const meteorsRef = useRef([]);\n  const burstsRef = useRef([]);\n  const animationFrameRef = useRef(null);\n  const lastTimestampRef = useRef(0);\n  const visibilityChangeTimeRef = useRef(0);\n\n  // Component state\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0,\n    pixelRatio: 1\n  });\n  const [isVisible, setIsVisible] = useState(false);\n  const [prefersReducedMotion, setPrefersReducedMotion] = useState(false);\n  const [qualityFactor, setQualityFactor] = useState(1);\n  const [isMobile, setIsMobile] = useState(false);\n  const [scrollY, setScrollY] = useState(0);\n\n  // Memoized adaptive settings based on device capability and quality factor\n  const adaptedSettings = useMemo(() => {\n    if (!adaptiveQuality) {\n      return {\n        meteorCount,\n        trailSegments: 20,\n        burstParticleCount: 12,\n        useShadow: true,\n        useGlow: true\n      };\n    }\n\n    // Scale quality based on device capabilities and quality factor\n    return {\n      meteorCount: Math.max(5, Math.floor(meteorCount * qualityFactor)),\n      trailSegments: Math.max(8, Math.floor(20 * qualityFactor)),\n      burstParticleCount: Math.max(4, Math.floor(12 * qualityFactor)),\n      useShadow: qualityFactor > 0.5,\n      useGlow: qualityFactor > 0.3\n    };\n  }, [adaptiveQuality, meteorCount, qualityFactor]);\n\n  // Check device capabilities and preferences\n  useEffect(() => {\n    // Check for reduced motion preference\n    const reducedMotionQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\n    setPrefersReducedMotion(reducedMotionQuery.matches);\n    const handleReducedMotionChange = e => {\n      setPrefersReducedMotion(e.matches);\n    };\n    reducedMotionQuery.addEventListener('change', handleReducedMotionChange);\n\n    // Detect mobile devices\n    const checkMobile = () => {\n      const isMobileDevice = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || window.innerWidth <= 768;\n      setIsMobile(isMobileDevice);\n\n      // Set lower quality for mobile devices\n      if (adaptiveQuality && isMobileDevice) {\n        setQualityFactor(0.6);\n      }\n    };\n    checkMobile();\n\n    // Handle visibility change to pause when tab is inactive\n    const handleVisibilityChange = () => {\n      if (document.hidden) {\n        visibilityChangeTimeRef.current = performance.now();\n      } else {\n        // Adjust timing references after visibility changes\n        const timeDelta = performance.now() - visibilityChangeTimeRef.current;\n        lastTimestampRef.current += timeDelta;\n      }\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    window.addEventListener('resize', checkMobile);\n    return () => {\n      reducedMotionQuery.removeEventListener('change', handleReducedMotionChange);\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n      window.removeEventListener('resize', checkMobile);\n    };\n  }, [adaptiveQuality]);\n\n  // Initialize canvas with proper dimensions\n  const setupCanvas = useCallback(() => {\n    if (!canvasRef.current || !containerRef.current) return false;\n    const canvas = canvasRef.current;\n    const container = containerRef.current;\n    const rect = container.getBoundingClientRect();\n\n    // Get device pixel ratio for high-DPI displays, capped for performance\n    const pixelRatio = Math.min(window.devicePixelRatio || 1, isMobile ? 1.5 : 2);\n\n    // Set canvas size with pixel ratio\n    const displayWidth = Math.floor(rect.width);\n    const displayHeight = typeof height === 'string' && height.endsWith('vh') ? Math.floor(parseInt(height, 10) / 100 * window.innerHeight) : Math.floor(parseInt(height, 10) || window.innerHeight);\n    canvas.width = displayWidth * pixelRatio;\n    canvas.height = displayHeight * pixelRatio;\n    canvas.style.width = `${displayWidth}px`;\n    canvas.style.height = `${displayHeight}px`;\n\n    // Get and configure 2D context\n    const ctx = canvas.getContext('2d', {\n      alpha: true,\n      desynchronized: true // Potential performance improvement\n    });\n    if (!ctx) return false;\n\n    // Scale for high-DPI displays\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.imageSmoothingEnabled = true;\n    ctx.imageSmoothingQuality = 'high';\n    ctxRef.current = ctx;\n    setDimensions({\n      width: displayWidth,\n      height: displayHeight,\n      pixelRatio\n    });\n    return true;\n  }, [height, isMobile]);\n\n  // Setup canvas and resize handler\n  useEffect(() => {\n    if (!containerRef.current) return;\n\n    // Initialize canvas\n    setupCanvas();\n\n    // Handle resize with debounce\n    let resizeTimeout;\n    const handleResize = () => {\n      clearTimeout(resizeTimeout);\n      resizeTimeout = setTimeout(() => {\n        setupCanvas();\n      }, 200);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (resizeTimeout) clearTimeout(resizeTimeout);\n    };\n  }, [setupCanvas]);\n\n  // Setup intersection observer to only animate when visible\n  useEffect(() => {\n    if (!containerRef.current) return;\n    const observer = new IntersectionObserver(entries => {\n      setIsVisible(entries[0].isIntersecting);\n    }, {\n      threshold: 0.01,\n      rootMargin: '100px'\n    });\n    observer.observe(containerRef.current);\n    return () => observer.disconnect();\n  }, []);\n\n  // Handle scroll for parallax effect\n  useEffect(() => {\n    if (!enableScrollParallax) return;\n    const handleScroll = () => {\n      setScrollY(window.scrollY);\n    };\n    window.addEventListener('scroll', handleScroll, {\n      passive: true\n    });\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [enableScrollParallax]);\n\n  // Create a new meteor\n  const createMeteor = useCallback(() => {\n    if (!dimensions.width || !dimensions.height) return null;\n    const {\n      width,\n      height\n    } = dimensions;\n\n    // Determine start position based on direction\n    let startX, startY, endX, endY;\n    let angle;\n    if (direction === 'top') {\n      // Start from top with angle for top-to-bottom meteors\n      startX = Math.random() * width;\n      startY = -50;\n      angle = (Math.random() * 20 + 70) * Math.PI / 180; // 70-90 degrees\n      endX = startX + Math.cos(angle) * height * 1.5;\n      endY = startY + Math.sin(angle) * height * 1.5;\n    } else if (direction === 'left') {\n      // Start from left\n      startX = -50;\n      startY = Math.random() * height * 0.5;\n      angle = (Math.random() * 30 + 30) * Math.PI / 180; // 30-60 degrees\n      endX = startX + Math.cos(angle) * width * 1.5;\n      endY = startY + Math.sin(angle) * width * 1.5;\n    } else if (direction === 'right') {\n      // Start from right\n      startX = width + 50;\n      startY = Math.random() * height * 0.5;\n      angle = (Math.random() * 30 + 120) * Math.PI / 180; // 120-150 degrees\n      endX = startX + Math.cos(angle) * width * 1.5;\n      endY = startY + Math.sin(angle) * width * 1.5;\n    } else if (direction === 'both') {\n      // Randomly pick left or right\n      if (Math.random() > 0.5) {\n        // Left\n        startX = -50;\n        startY = Math.random() * height * 0.5;\n        angle = (Math.random() * 30 + 30) * Math.PI / 180;\n        endX = startX + Math.cos(angle) * width * 1.5;\n        endY = startY + Math.sin(angle) * width * 1.5;\n      } else {\n        // Right\n        startX = width + 50;\n        startY = Math.random() * height * 0.5;\n        angle = (Math.random() * 30 + 120) * Math.PI / 180;\n        endX = startX + Math.cos(angle) * width * 1.5;\n        endY = startY + Math.sin(angle) * width * 1.5;\n      }\n    }\n\n    // Meteor properties\n    const size = (Math.random() * 0.5 + 0.75) * meteorSize;\n    const speed = (Math.random() * 0.5 + 0.75) * meteorSpeed;\n\n    // Create positions array for trail\n    const positions = [];\n    for (let i = 0; i < adaptedSettings.trailSegments; i++) {\n      positions.push({\n        x: startX,\n        y: startY\n      });\n    }\n\n    // Meteor object\n    return {\n      startX,\n      startY,\n      endX,\n      endY,\n      angle,\n      size,\n      speed,\n      progress: 0,\n      opacity: Math.random() * 0.3 + 0.7,\n      fadeThreshold: 0.7 + Math.random() * 0.2,\n      positions,\n      hasBurst: enableBursts && Math.random() < 0.3,\n      burstThreshold: 0.7 + Math.random() * 0.25,\n      burstTriggered: false\n    };\n  }, [dimensions, meteorSize, meteorSpeed, direction, enableBursts, adaptedSettings.trailSegments]);\n\n  // Create a burst effect when meteors terminate\n  const createBurst = useCallback((x, y, size, angle) => {\n    if (!enableBursts) return;\n    const particleCount = adaptedSettings.burstParticleCount;\n\n    // Create burst particles\n    for (let i = 0; i < particleCount; i++) {\n      // Random angle within a cone in the direction of travel\n      const particleAngle = angle + (Math.random() * 0.8 - 0.4);\n\n      // Random speed\n      const speed = 0.5 + Math.random() * 1.5;\n\n      // Get velocity components\n      const vx = Math.cos(particleAngle) * speed;\n      const vy = Math.sin(particleAngle) * speed;\n\n      // Random size variation\n      const particleSize = size * (0.2 + Math.random() * 0.6);\n\n      // Create particle\n      burstsRef.current.push({\n        x,\n        y,\n        vx,\n        vy,\n        size: particleSize,\n        opacity: 0.7 + Math.random() * 0.3,\n        decay: 0.01 + Math.random() * 0.02,\n        life: 1.0\n      });\n    }\n  }, [enableBursts, adaptedSettings.burstParticleCount]);\n\n  // Update meteor positions\n  const updateMeteors = useCallback(deltaTime => {\n    const {\n      width,\n      height\n    } = dimensions;\n\n    // Update existing meteors\n    meteorsRef.current = meteorsRef.current.filter(meteor => {\n      // Update progress based on speed and delta time\n      meteor.progress += meteor.speed * (deltaTime / 1000);\n\n      // Check if completed or should trigger burst\n      if (meteor.progress >= 1) {\n        return false;\n      }\n\n      // Check for burst trigger\n      if (meteor.hasBurst && !meteor.burstTriggered && meteor.progress >= meteor.burstThreshold) {\n        meteor.burstTriggered = true;\n\n        // Get current position\n        const currentX = meteor.startX + (meteor.endX - meteor.startX) * meteor.progress;\n        const currentY = meteor.startY + (meteor.endY - meteor.startY) * meteor.progress;\n\n        // Create burst\n        createBurst(currentX, currentY, meteor.size, meteor.angle);\n      }\n\n      // Calculate current position\n      const currentX = meteor.startX + (meteor.endX - meteor.startX) * meteor.progress;\n      const currentY = meteor.startY + (meteor.endY - meteor.startY) * meteor.progress;\n\n      // Update position history for trail effect\n      meteor.positions.pop(); // Remove last position\n      meteor.positions.unshift({\n        x: currentX,\n        y: currentY\n      }); // Add current position at start\n\n      return true;\n    });\n\n    // Add new meteors if needed\n    while (meteorsRef.current.length < adaptedSettings.meteorCount) {\n      const meteor = createMeteor();\n      if (meteor) {\n        meteorsRef.current.push(meteor);\n      }\n    }\n  }, [dimensions, createMeteor, createBurst, adaptedSettings.meteorCount]);\n\n  // Update burst particles\n  const updateBursts = useCallback(deltaTime => {\n    if (!enableBursts) return;\n\n    // Update existing bursts\n    burstsRef.current = burstsRef.current.filter(burst => {\n      // Update position\n      burst.x += burst.vx * (deltaTime / 16);\n      burst.y += burst.vy * (deltaTime / 16);\n\n      // Apply gravity\n      burst.vy += 0.05 * (deltaTime / 16);\n\n      // Reduce life\n      burst.life -= burst.decay * (deltaTime / 16);\n\n      // Keep only if still alive\n      return burst.life > 0;\n    });\n  }, [enableBursts]);\n\n  // Render meteors\n  const renderMeteors = useCallback((ctx, scrollOffset) => {\n    meteorsRef.current.forEach(meteor => {\n      // Calculate opacity based on progress\n      let opacity = meteor.opacity;\n      if (meteor.progress > meteor.fadeThreshold) {\n        const fadeProgress = (meteor.progress - meteor.fadeThreshold) / (1 - meteor.fadeThreshold);\n        opacity = meteor.opacity * (1 - fadeProgress);\n      }\n\n      // Parallax effect based on scroll position\n      const parallaxOffset = enableScrollParallax ? scrollOffset * meteor.size * 0.05 : 0;\n\n      // Render trail\n      for (let i = 0; i < meteor.positions.length - 1; i++) {\n        const pos1 = meteor.positions[i];\n        const pos2 = meteor.positions[i + 1];\n\n        // Calculate segment opacity and width\n        const segmentOpacity = opacity * (1 - i / meteor.positions.length);\n        const segmentWidth = meteor.size * (1 - i / meteor.positions.length * 0.7);\n\n        // Skip if nearly invisible\n        if (segmentOpacity < 0.02) continue;\n\n        // Draw line segment\n        ctx.beginPath();\n        ctx.moveTo(pos1.x, pos1.y + parallaxOffset);\n        ctx.lineTo(pos2.x, pos2.y + parallaxOffset);\n\n        // Set line style\n        ctx.lineWidth = segmentWidth;\n        ctx.strokeStyle = trailColor.replace('rgba(', '').replace(')', `,${segmentOpacity})`);\n        ctx.lineCap = 'round';\n        ctx.stroke();\n      }\n\n      // Render meteor head\n      if (meteor.positions[0]) {\n        const headPos = meteor.positions[0];\n\n        // Add glow effect if enabled\n        if (adaptedSettings.useGlow) {\n          ctx.shadowColor = glowColor;\n          ctx.shadowBlur = meteor.size * 5;\n        }\n\n        // Draw outer glow\n        ctx.beginPath();\n        ctx.arc(headPos.x, headPos.y + parallaxOffset, meteor.size * 1.5, 0, Math.PI * 2);\n        ctx.fillStyle = glowColor.replace('rgba(', '').replace(')', `,${opacity * 0.7})`);\n        ctx.fill();\n\n        // Draw inner core\n        ctx.beginPath();\n        ctx.arc(headPos.x, headPos.y + parallaxOffset, meteor.size * 0.7, 0, Math.PI * 2);\n        ctx.fillStyle = coreColor.replace('rgba(', '').replace(')', `,${opacity})`);\n        ctx.fill();\n\n        // Reset shadow\n        ctx.shadowBlur = 0;\n      }\n    });\n  }, [enableScrollParallax, trailColor, glowColor, coreColor, adaptedSettings.useGlow]);\n\n  // Render burst particles\n  const renderBursts = useCallback(ctx => {\n    if (!enableBursts) return;\n    burstsRef.current.forEach(burst => {\n      ctx.beginPath();\n      ctx.arc(burst.x, burst.y, burst.size * burst.life, 0, Math.PI * 2);\n      ctx.fillStyle = glowColor.replace('rgba(', '').replace(')', `,${burst.opacity * burst.life})`);\n      if (adaptedSettings.useGlow) {\n        ctx.shadowColor = glowColor;\n        ctx.shadowBlur = burst.size * 3 * burst.life;\n      }\n      ctx.fill();\n    });\n\n    // Reset shadow\n    ctx.shadowBlur = 0;\n  }, [enableBursts, glowColor, adaptedSettings.useGlow]);\n\n  // Main animation loop\n  useEffect(() => {\n    // Skip if inactive, hidden, or user prefers reduced motion\n    if (!active || !isVisible || !ctxRef.current || !dimensions.width || respectReducedMotion && prefersReducedMotion) {\n      return;\n    }\n\n    // Animation function\n    const animate = timestamp => {\n      if (!ctxRef.current) return;\n\n      // Calculate delta time\n      if (!lastTimestampRef.current) lastTimestampRef.current = timestamp;\n      const deltaTime = timestamp - lastTimestampRef.current;\n      lastTimestampRef.current = timestamp;\n\n      // Clear canvas\n      ctxRef.current.clearRect(0, 0, dimensions.width, dimensions.height);\n\n      // Update animations\n      updateMeteors(deltaTime);\n      updateBursts(deltaTime);\n\n      // Render elements\n      renderMeteors(ctxRef.current, scrollY);\n      renderBursts(ctxRef.current);\n\n      // Request next frame\n      animationFrameRef.current = requestAnimationFrame(animate);\n    };\n\n    // Start animation\n    animationFrameRef.current = requestAnimationFrame(animate);\n\n    // Cleanup\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [active, isVisible, dimensions, prefersReducedMotion, respectReducedMotion, updateMeteors, updateBursts, renderMeteors, renderBursts, scrollY]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: height,\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      zIndex: zIndex,\n      transform: 'translateZ(0)',\n      willChange: 'transform'\n    },\n    \"aria-hidden\": \"true\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        opacity: respectReducedMotion && prefersReducedMotion ? 0.3 : 1,\n        transition: 'opacity 0.5s ease',\n        transform: 'translateZ(0)',\n        willChange: 'transform'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 554,\n    columnNumber: 5\n  }, this);\n};\n\n/**\n * GoldenMeteorShower - A preset version with golden/amber colors\n */\n_s(MeteorShower, \"yVzr6nOnPd1hPm1EuwC31jR+Bgc=\");\n_c = MeteorShower;\nexport const GoldenMeteorShower = props => {\n  return /*#__PURE__*/_jsxDEV(MeteorShower, {\n    coreColor: \"rgba(255, 255, 255, 1)\",\n    glowColor: \"rgba(255, 245, 158, 0.9)\",\n    trailColor: \"rgba(207, 181, 59, 0.8)\",\n    meteorSize: 2,\n    meteorSpeed: 0.08,\n    trailLength: 180,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 592,\n    columnNumber: 10\n  }, this);\n};\n_c2 = GoldenMeteorShower;\nexport default MeteorShower;\nvar _c, _c2;\n$RefreshReg$(_c, \"MeteorShower\");\n$RefreshReg$(_c2, \"GoldenMeteorShower\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","jsxDEV","_jsxDEV","MeteorShower","height","zIndex","active","meteorCount","meteorSize","meteorSpeed","trailLength","coreColor","glowColor","trailColor","enableBursts","adaptiveQuality","respectReducedMotion","enableScrollParallax","direction","_s","containerRef","canvasRef","ctxRef","meteorsRef","burstsRef","animationFrameRef","lastTimestampRef","visibilityChangeTimeRef","dimensions","setDimensions","width","pixelRatio","isVisible","setIsVisible","prefersReducedMotion","setPrefersReducedMotion","qualityFactor","setQualityFactor","isMobile","setIsMobile","scrollY","setScrollY","adaptedSettings","trailSegments","burstParticleCount","useShadow","useGlow","Math","max","floor","reducedMotionQuery","window","matchMedia","matches","handleReducedMotionChange","e","addEventListener","checkMobile","isMobileDevice","test","navigator","userAgent","innerWidth","handleVisibilityChange","document","hidden","current","performance","now","timeDelta","removeEventListener","setupCanvas","canvas","container","rect","getBoundingClientRect","min","devicePixelRatio","displayWidth","displayHeight","endsWith","parseInt","innerHeight","style","ctx","getContext","alpha","desynchronized","scale","imageSmoothingEnabled","imageSmoothingQuality","resizeTimeout","handleResize","clearTimeout","setTimeout","observer","IntersectionObserver","entries","isIntersecting","threshold","rootMargin","observe","disconnect","handleScroll","passive","createMeteor","startX","startY","endX","endY","angle","random","PI","cos","sin","size","speed","positions","i","push","x","y","progress","opacity","fadeThreshold","hasBurst","burstThreshold","burstTriggered","createBurst","particleCount","particleAngle","vx","vy","particleSize","decay","life","updateMeteors","deltaTime","filter","meteor","currentX","currentY","pop","unshift","length","updateBursts","burst","renderMeteors","scrollOffset","forEach","fadeProgress","parallaxOffset","pos1","pos2","segmentOpacity","segmentWidth","beginPath","moveTo","lineTo","lineWidth","strokeStyle","replace","lineCap","stroke","headPos","shadowColor","shadowBlur","arc","fillStyle","fill","renderBursts","animate","timestamp","clearRect","requestAnimationFrame","cancelAnimationFrame","ref","position","top","left","overflow","pointerEvents","transform","willChange","children","transition","fileName","_jsxFileName","lineNumber","columnNumber","_c","GoldenMeteorShower","props","_c2","$RefreshReg$"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/core/effects/cosmiceffects/MeteorShower.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\n\n/**\n * Enhanced MeteorShower Component\n * \n * A highly optimized meteor shower background effect with smooth animations,\n * performance optimizations, and battery-saving features.\n * \n * @param {Object} props\n * @param {string|number} [props.height='100vh'] - Height of the container\n * @param {number} [props.zIndex=5] - Z-index for the container\n * @param {boolean} [props.active=true] - Whether the animation is active\n * @param {number} [props.meteorCount=15] - Number of meteors to render\n * @param {number} [props.meteorSize=2] - Base size of meteors (will vary slightly)\n * @param {number} [props.meteorSpeed=0.08] - Base speed of meteors\n * @param {number} [props.trailLength=180] - Length of meteor trails\n * @param {string} [props.coreColor='rgba(255, 255, 255, 1)'] - Core color for meteors\n * @param {string} [props.glowColor='rgba(255, 245, 158, 0.9)'] - Glow color for meteors\n * @param {string} [props.trailColor='rgba(207, 181, 59, 0.8)'] - Trail color for meteors\n * @param {boolean} [props.enableBursts=true] - Enable meteor burst effects\n * @param {boolean} [props.adaptiveQuality=true] - Enable adaptive quality based on device\n * @param {boolean} [props.respectReducedMotion=true] - Respect reduced motion preferences\n * @param {boolean} [props.enableScrollParallax=false] - Enable parallax effect on scroll\n * @param {string} [props.direction='top'] - Direction: 'left', 'right', 'both', or 'top'\n */\nconst MeteorShower = ({\n  height = '100vh',\n  zIndex = 5,\n  active = true,\n  meteorCount = 15,\n  meteorSize = 2,\n  meteorSpeed = 0.08,\n  trailLength = 180,\n  coreColor = 'rgba(255, 255, 255, 1)',\n  glowColor = 'rgba(255, 245, 158, 0.9)',\n  trailColor = 'rgba(207, 181, 59, 0.8)',\n  enableBursts = true,\n  adaptiveQuality = true,\n  respectReducedMotion = true,\n  enableScrollParallax = false,\n  direction = 'top'\n}) => {\n  // Refs for canvas and animation\n  const containerRef = useRef(null);\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const meteorsRef = useRef([]);\n  const burstsRef = useRef([]);\n  const animationFrameRef = useRef(null);\n  const lastTimestampRef = useRef(0);\n  const visibilityChangeTimeRef = useRef(0);\n  \n  // Component state\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0, pixelRatio: 1 });\n  const [isVisible, setIsVisible] = useState(false);\n  const [prefersReducedMotion, setPrefersReducedMotion] = useState(false);\n  const [qualityFactor, setQualityFactor] = useState(1);\n  const [isMobile, setIsMobile] = useState(false);\n  const [scrollY, setScrollY] = useState(0);\n  \n  // Memoized adaptive settings based on device capability and quality factor\n  const adaptedSettings = useMemo(() => {\n    if (!adaptiveQuality) {\n      return {\n        meteorCount,\n        trailSegments: 20,\n        burstParticleCount: 12,\n        useShadow: true,\n        useGlow: true\n      };\n    }\n    \n    // Scale quality based on device capabilities and quality factor\n    return {\n      meteorCount: Math.max(5, Math.floor(meteorCount * qualityFactor)),\n      trailSegments: Math.max(8, Math.floor(20 * qualityFactor)),\n      burstParticleCount: Math.max(4, Math.floor(12 * qualityFactor)),\n      useShadow: qualityFactor > 0.5,\n      useGlow: qualityFactor > 0.3\n    };\n  }, [adaptiveQuality, meteorCount, qualityFactor]);\n  \n  // Check device capabilities and preferences\n  useEffect(() => {\n    // Check for reduced motion preference\n    const reducedMotionQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\n    setPrefersReducedMotion(reducedMotionQuery.matches);\n    \n    const handleReducedMotionChange = (e) => {\n      setPrefersReducedMotion(e.matches);\n    };\n    \n    reducedMotionQuery.addEventListener('change', handleReducedMotionChange);\n    \n    // Detect mobile devices\n    const checkMobile = () => {\n      const isMobileDevice = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || window.innerWidth <= 768;\n      setIsMobile(isMobileDevice);\n      \n      // Set lower quality for mobile devices\n      if (adaptiveQuality && isMobileDevice) {\n        setQualityFactor(0.6);\n      }\n    };\n    \n    checkMobile();\n    \n    // Handle visibility change to pause when tab is inactive\n    const handleVisibilityChange = () => {\n      if (document.hidden) {\n        visibilityChangeTimeRef.current = performance.now();\n      } else {\n        // Adjust timing references after visibility changes\n        const timeDelta = performance.now() - visibilityChangeTimeRef.current;\n        lastTimestampRef.current += timeDelta;\n      }\n    };\n    \n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    window.addEventListener('resize', checkMobile);\n    \n    return () => {\n      reducedMotionQuery.removeEventListener('change', handleReducedMotionChange);\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n      window.removeEventListener('resize', checkMobile);\n    };\n  }, [adaptiveQuality]);\n  \n  // Initialize canvas with proper dimensions\n  const setupCanvas = useCallback(() => {\n    if (!canvasRef.current || !containerRef.current) return false;\n    \n    const canvas = canvasRef.current;\n    const container = containerRef.current;\n    const rect = container.getBoundingClientRect();\n    \n    // Get device pixel ratio for high-DPI displays, capped for performance\n    const pixelRatio = Math.min(window.devicePixelRatio || 1, isMobile ? 1.5 : 2);\n    \n    // Set canvas size with pixel ratio\n    const displayWidth = Math.floor(rect.width);\n    const displayHeight = typeof height === 'string' && height.endsWith('vh') \n      ? Math.floor((parseInt(height, 10) / 100) * window.innerHeight)\n      : Math.floor(parseInt(height, 10) || window.innerHeight);\n    \n    canvas.width = displayWidth * pixelRatio;\n    canvas.height = displayHeight * pixelRatio;\n    canvas.style.width = `${displayWidth}px`;\n    canvas.style.height = `${displayHeight}px`;\n    \n    // Get and configure 2D context\n    const ctx = canvas.getContext('2d', {\n      alpha: true,\n      desynchronized: true, // Potential performance improvement\n    });\n    \n    if (!ctx) return false;\n    \n    // Scale for high-DPI displays\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.imageSmoothingEnabled = true;\n    ctx.imageSmoothingQuality = 'high';\n    \n    ctxRef.current = ctx;\n    setDimensions({\n      width: displayWidth,\n      height: displayHeight,\n      pixelRatio\n    });\n    \n    return true;\n  }, [height, isMobile]);\n  \n  // Setup canvas and resize handler\n  useEffect(() => {\n    if (!containerRef.current) return;\n    \n    // Initialize canvas\n    setupCanvas();\n    \n    // Handle resize with debounce\n    let resizeTimeout;\n    const handleResize = () => {\n      clearTimeout(resizeTimeout);\n      resizeTimeout = setTimeout(() => {\n        setupCanvas();\n      }, 200);\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (resizeTimeout) clearTimeout(resizeTimeout);\n    };\n  }, [setupCanvas]);\n  \n  // Setup intersection observer to only animate when visible\n  useEffect(() => {\n    if (!containerRef.current) return;\n    \n    const observer = new IntersectionObserver(\n      entries => {\n        setIsVisible(entries[0].isIntersecting);\n      },\n      {\n        threshold: 0.01,\n        rootMargin: '100px'\n      }\n    );\n    \n    observer.observe(containerRef.current);\n    \n    return () => observer.disconnect();\n  }, []);\n  \n  // Handle scroll for parallax effect\n  useEffect(() => {\n    if (!enableScrollParallax) return;\n    \n    const handleScroll = () => {\n      setScrollY(window.scrollY);\n    };\n    \n    window.addEventListener('scroll', handleScroll, { passive: true });\n    \n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [enableScrollParallax]);\n  \n  // Create a new meteor\n  const createMeteor = useCallback(() => {\n    if (!dimensions.width || !dimensions.height) return null;\n    \n    const { width, height } = dimensions;\n    \n    // Determine start position based on direction\n    let startX, startY, endX, endY;\n    let angle;\n    \n    if (direction === 'top') {\n      // Start from top with angle for top-to-bottom meteors\n      startX = Math.random() * width;\n      startY = -50;\n      angle = (Math.random() * 20 + 70) * Math.PI / 180; // 70-90 degrees\n      endX = startX + Math.cos(angle) * height * 1.5;\n      endY = startY + Math.sin(angle) * height * 1.5;\n    } else if (direction === 'left') {\n      // Start from left\n      startX = -50;\n      startY = Math.random() * height * 0.5;\n      angle = (Math.random() * 30 + 30) * Math.PI / 180; // 30-60 degrees\n      endX = startX + Math.cos(angle) * width * 1.5;\n      endY = startY + Math.sin(angle) * width * 1.5;\n    } else if (direction === 'right') {\n      // Start from right\n      startX = width + 50;\n      startY = Math.random() * height * 0.5;\n      angle = (Math.random() * 30 + 120) * Math.PI / 180; // 120-150 degrees\n      endX = startX + Math.cos(angle) * width * 1.5;\n      endY = startY + Math.sin(angle) * width * 1.5;\n    } else if (direction === 'both') {\n      // Randomly pick left or right\n      if (Math.random() > 0.5) {\n        // Left\n        startX = -50;\n        startY = Math.random() * height * 0.5;\n        angle = (Math.random() * 30 + 30) * Math.PI / 180;\n        endX = startX + Math.cos(angle) * width * 1.5;\n        endY = startY + Math.sin(angle) * width * 1.5;\n      } else {\n        // Right\n        startX = width + 50;\n        startY = Math.random() * height * 0.5;\n        angle = (Math.random() * 30 + 120) * Math.PI / 180;\n        endX = startX + Math.cos(angle) * width * 1.5;\n        endY = startY + Math.sin(angle) * width * 1.5;\n      }\n    }\n    \n    // Meteor properties\n    const size = (Math.random() * 0.5 + 0.75) * meteorSize;\n    const speed = (Math.random() * 0.5 + 0.75) * meteorSpeed;\n    \n    // Create positions array for trail\n    const positions = [];\n    for (let i = 0; i < adaptedSettings.trailSegments; i++) {\n      positions.push({ x: startX, y: startY });\n    }\n    \n    // Meteor object\n    return {\n      startX,\n      startY,\n      endX,\n      endY,\n      angle,\n      size,\n      speed,\n      progress: 0,\n      opacity: Math.random() * 0.3 + 0.7,\n      fadeThreshold: 0.7 + Math.random() * 0.2,\n      positions,\n      hasBurst: enableBursts && Math.random() < 0.3,\n      burstThreshold: 0.7 + Math.random() * 0.25,\n      burstTriggered: false\n    };\n  }, [dimensions, meteorSize, meteorSpeed, direction, enableBursts, adaptedSettings.trailSegments]);\n  \n  // Create a burst effect when meteors terminate\n  const createBurst = useCallback((x, y, size, angle) => {\n    if (!enableBursts) return;\n    \n    const particleCount = adaptedSettings.burstParticleCount;\n    \n    // Create burst particles\n    for (let i = 0; i < particleCount; i++) {\n      // Random angle within a cone in the direction of travel\n      const particleAngle = angle + (Math.random() * 0.8 - 0.4);\n      \n      // Random speed\n      const speed = 0.5 + Math.random() * 1.5;\n      \n      // Get velocity components\n      const vx = Math.cos(particleAngle) * speed;\n      const vy = Math.sin(particleAngle) * speed;\n      \n      // Random size variation\n      const particleSize = size * (0.2 + Math.random() * 0.6);\n      \n      // Create particle\n      burstsRef.current.push({\n        x,\n        y,\n        vx,\n        vy,\n        size: particleSize,\n        opacity: 0.7 + Math.random() * 0.3,\n        decay: 0.01 + Math.random() * 0.02,\n        life: 1.0\n      });\n    }\n  }, [enableBursts, adaptedSettings.burstParticleCount]);\n  \n  // Update meteor positions\n  const updateMeteors = useCallback((deltaTime) => {\n    const { width, height } = dimensions;\n    \n    // Update existing meteors\n    meteorsRef.current = meteorsRef.current.filter(meteor => {\n      // Update progress based on speed and delta time\n      meteor.progress += meteor.speed * (deltaTime / 1000);\n      \n      // Check if completed or should trigger burst\n      if (meteor.progress >= 1) {\n        return false;\n      }\n      \n      // Check for burst trigger\n      if (meteor.hasBurst && !meteor.burstTriggered && meteor.progress >= meteor.burstThreshold) {\n        meteor.burstTriggered = true;\n        \n        // Get current position\n        const currentX = meteor.startX + (meteor.endX - meteor.startX) * meteor.progress;\n        const currentY = meteor.startY + (meteor.endY - meteor.startY) * meteor.progress;\n        \n        // Create burst\n        createBurst(currentX, currentY, meteor.size, meteor.angle);\n      }\n      \n      // Calculate current position\n      const currentX = meteor.startX + (meteor.endX - meteor.startX) * meteor.progress;\n      const currentY = meteor.startY + (meteor.endY - meteor.startY) * meteor.progress;\n      \n      // Update position history for trail effect\n      meteor.positions.pop(); // Remove last position\n      meteor.positions.unshift({ x: currentX, y: currentY }); // Add current position at start\n      \n      return true;\n    });\n    \n    // Add new meteors if needed\n    while (meteorsRef.current.length < adaptedSettings.meteorCount) {\n      const meteor = createMeteor();\n      if (meteor) {\n        meteorsRef.current.push(meteor);\n      }\n    }\n  }, [dimensions, createMeteor, createBurst, adaptedSettings.meteorCount]);\n  \n  // Update burst particles\n  const updateBursts = useCallback((deltaTime) => {\n    if (!enableBursts) return;\n    \n    // Update existing bursts\n    burstsRef.current = burstsRef.current.filter(burst => {\n      // Update position\n      burst.x += burst.vx * (deltaTime / 16);\n      burst.y += burst.vy * (deltaTime / 16);\n      \n      // Apply gravity\n      burst.vy += 0.05 * (deltaTime / 16);\n      \n      // Reduce life\n      burst.life -= burst.decay * (deltaTime / 16);\n      \n      // Keep only if still alive\n      return burst.life > 0;\n    });\n  }, [enableBursts]);\n  \n  // Render meteors\n  const renderMeteors = useCallback((ctx, scrollOffset) => {\n    meteorsRef.current.forEach(meteor => {\n      // Calculate opacity based on progress\n      let opacity = meteor.opacity;\n      if (meteor.progress > meteor.fadeThreshold) {\n        const fadeProgress = (meteor.progress - meteor.fadeThreshold) / (1 - meteor.fadeThreshold);\n        opacity = meteor.opacity * (1 - fadeProgress);\n      }\n      \n      // Parallax effect based on scroll position\n      const parallaxOffset = enableScrollParallax ? scrollOffset * meteor.size * 0.05 : 0;\n      \n      // Render trail\n      for (let i = 0; i < meteor.positions.length - 1; i++) {\n        const pos1 = meteor.positions[i];\n        const pos2 = meteor.positions[i + 1];\n        \n        // Calculate segment opacity and width\n        const segmentOpacity = opacity * (1 - i / meteor.positions.length);\n        const segmentWidth = meteor.size * (1 - i / meteor.positions.length * 0.7);\n        \n        // Skip if nearly invisible\n        if (segmentOpacity < 0.02) continue;\n        \n        // Draw line segment\n        ctx.beginPath();\n        ctx.moveTo(pos1.x, pos1.y + parallaxOffset);\n        ctx.lineTo(pos2.x, pos2.y + parallaxOffset);\n        \n        // Set line style\n        ctx.lineWidth = segmentWidth;\n        ctx.strokeStyle = trailColor.replace('rgba(', '').replace(')', `,${segmentOpacity})`);\n        ctx.lineCap = 'round';\n        ctx.stroke();\n      }\n      \n      // Render meteor head\n      if (meteor.positions[0]) {\n        const headPos = meteor.positions[0];\n        \n        // Add glow effect if enabled\n        if (adaptedSettings.useGlow) {\n          ctx.shadowColor = glowColor;\n          ctx.shadowBlur = meteor.size * 5;\n        }\n        \n        // Draw outer glow\n        ctx.beginPath();\n        ctx.arc(headPos.x, headPos.y + parallaxOffset, meteor.size * 1.5, 0, Math.PI * 2);\n        ctx.fillStyle = glowColor.replace('rgba(', '').replace(')', `,${opacity * 0.7})`);\n        ctx.fill();\n        \n        // Draw inner core\n        ctx.beginPath();\n        ctx.arc(headPos.x, headPos.y + parallaxOffset, meteor.size * 0.7, 0, Math.PI * 2);\n        ctx.fillStyle = coreColor.replace('rgba(', '').replace(')', `,${opacity})`);\n        ctx.fill();\n        \n        // Reset shadow\n        ctx.shadowBlur = 0;\n      }\n    });\n  }, [enableScrollParallax, trailColor, glowColor, coreColor, adaptedSettings.useGlow]);\n  \n  // Render burst particles\n  const renderBursts = useCallback((ctx) => {\n    if (!enableBursts) return;\n    \n    burstsRef.current.forEach(burst => {\n      ctx.beginPath();\n      ctx.arc(burst.x, burst.y, burst.size * burst.life, 0, Math.PI * 2);\n      ctx.fillStyle = glowColor.replace('rgba(', '').replace(')', `,${burst.opacity * burst.life})`);\n      \n      if (adaptedSettings.useGlow) {\n        ctx.shadowColor = glowColor;\n        ctx.shadowBlur = burst.size * 3 * burst.life;\n      }\n      \n      ctx.fill();\n    });\n    \n    // Reset shadow\n    ctx.shadowBlur = 0;\n  }, [enableBursts, glowColor, adaptedSettings.useGlow]);\n  \n  // Main animation loop\n  useEffect(() => {\n    // Skip if inactive, hidden, or user prefers reduced motion\n    if (!active || !isVisible || !ctxRef.current || !dimensions.width || \n        (respectReducedMotion && prefersReducedMotion)) {\n      return;\n    }\n    \n    // Animation function\n    const animate = (timestamp) => {\n      if (!ctxRef.current) return;\n      \n      // Calculate delta time\n      if (!lastTimestampRef.current) lastTimestampRef.current = timestamp;\n      const deltaTime = timestamp - lastTimestampRef.current;\n      lastTimestampRef.current = timestamp;\n      \n      // Clear canvas\n      ctxRef.current.clearRect(0, 0, dimensions.width, dimensions.height);\n      \n      // Update animations\n      updateMeteors(deltaTime);\n      updateBursts(deltaTime);\n      \n      // Render elements\n      renderMeteors(ctxRef.current, scrollY);\n      renderBursts(ctxRef.current);\n      \n      // Request next frame\n      animationFrameRef.current = requestAnimationFrame(animate);\n    };\n    \n    // Start animation\n    animationFrameRef.current = requestAnimationFrame(animate);\n    \n    // Cleanup\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [\n    active,\n    isVisible,\n    dimensions,\n    prefersReducedMotion,\n    respectReducedMotion,\n    updateMeteors,\n    updateBursts,\n    renderMeteors,\n    renderBursts,\n    scrollY\n  ]);\n  \n  return (\n    <div \n      ref={containerRef}\n      style={{ \n        position: 'absolute',\n        top: 0, \n        left: 0, \n        width: '100%', \n        height: height,\n        overflow: 'hidden', \n        pointerEvents: 'none', \n        zIndex: zIndex,\n        transform: 'translateZ(0)',\n        willChange: 'transform'\n      }}\n      aria-hidden=\"true\"\n    >\n      <canvas \n        ref={canvasRef} \n        style={{ \n          position: 'absolute', \n          top: 0, \n          left: 0, \n          width: '100%', \n          height: '100%',\n          opacity: (respectReducedMotion && prefersReducedMotion) ? 0.3 : 1,\n          transition: 'opacity 0.5s ease',\n          transform: 'translateZ(0)',\n          willChange: 'transform'\n        }} \n      />\n    </div>\n  );\n};\n\n/**\n * GoldenMeteorShower - A preset version with golden/amber colors\n */\nexport const GoldenMeteorShower = (props) => {\n  return <MeteorShower \n    coreColor=\"rgba(255, 255, 255, 1)\"\n    glowColor=\"rgba(255, 245, 158, 0.9)\"\n    trailColor=\"rgba(207, 181, 59, 0.8)\"\n    meteorSize={2}\n    meteorSpeed={0.08}\n    trailLength={180}\n    {...props} \n  />;\n};\n\nexport default MeteorShower;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO;;AAEhF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA,SAAAC,MAAA,IAAAC,OAAA;AAuBA,MAAMC,YAAY,GAAGA,CAAC;EACpBC,MAAM,GAAG,OAAO;EAChBC,MAAM,GAAG,CAAC;EACVC,MAAM,GAAG,IAAI;EACbC,WAAW,GAAG,EAAE;EAChBC,UAAU,GAAG,CAAC;EACdC,WAAW,GAAG,IAAI;EAClBC,WAAW,GAAG,GAAG;EACjBC,SAAS,GAAG,wBAAwB;EACpCC,SAAS,GAAG,0BAA0B;EACtCC,UAAU,GAAG,yBAAyB;EACtCC,YAAY,GAAG,IAAI;EACnBC,eAAe,GAAG,IAAI;EACtBC,oBAAoB,GAAG,IAAI;EAC3BC,oBAAoB,GAAG,KAAK;EAC5BC,SAAS,GAAG;AACd,CAAC,KAAK;EAAAC,EAAA;EACJ;EACA,MAAMC,YAAY,GAAGtB,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMuB,SAAS,GAAGvB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMwB,MAAM,GAAGxB,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMyB,UAAU,GAAGzB,MAAM,CAAC,EAAE,CAAC;EAC7B,MAAM0B,SAAS,GAAG1B,MAAM,CAAC,EAAE,CAAC;EAC5B,MAAM2B,iBAAiB,GAAG3B,MAAM,CAAC,IAAI,CAAC;EACtC,MAAM4B,gBAAgB,GAAG5B,MAAM,CAAC,CAAC,CAAC;EAClC,MAAM6B,uBAAuB,GAAG7B,MAAM,CAAC,CAAC,CAAC;;EAEzC;EACA,MAAM,CAAC8B,UAAU,EAAEC,aAAa,CAAC,GAAGjC,QAAQ,CAAC;IAAEkC,KAAK,EAAE,CAAC;IAAE1B,MAAM,EAAE,CAAC;IAAE2B,UAAU,EAAE;EAAE,CAAC,CAAC;EACpF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGrC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACsC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGvC,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAACwC,aAAa,EAAEC,gBAAgB,CAAC,GAAGzC,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAAC0C,QAAQ,EAAEC,WAAW,CAAC,GAAG3C,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC4C,OAAO,EAAEC,UAAU,CAAC,GAAG7C,QAAQ,CAAC,CAAC,CAAC;;EAEzC;EACA,MAAM8C,eAAe,GAAG1C,OAAO,CAAC,MAAM;IACpC,IAAI,CAACe,eAAe,EAAE;MACpB,OAAO;QACLR,WAAW;QACXoC,aAAa,EAAE,EAAE;QACjBC,kBAAkB,EAAE,EAAE;QACtBC,SAAS,EAAE,IAAI;QACfC,OAAO,EAAE;MACX,CAAC;IACH;;IAEA;IACA,OAAO;MACLvC,WAAW,EAAEwC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,KAAK,CAAC1C,WAAW,GAAG6B,aAAa,CAAC,CAAC;MACjEO,aAAa,EAAEI,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,KAAK,CAAC,EAAE,GAAGb,aAAa,CAAC,CAAC;MAC1DQ,kBAAkB,EAAEG,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,KAAK,CAAC,EAAE,GAAGb,aAAa,CAAC,CAAC;MAC/DS,SAAS,EAAET,aAAa,GAAG,GAAG;MAC9BU,OAAO,EAAEV,aAAa,GAAG;IAC3B,CAAC;EACH,CAAC,EAAE,CAACrB,eAAe,EAAER,WAAW,EAAE6B,aAAa,CAAC,CAAC;;EAEjD;EACAvC,SAAS,CAAC,MAAM;IACd;IACA,MAAMqD,kBAAkB,GAAGC,MAAM,CAACC,UAAU,CAAC,kCAAkC,CAAC;IAChFjB,uBAAuB,CAACe,kBAAkB,CAACG,OAAO,CAAC;IAEnD,MAAMC,yBAAyB,GAAIC,CAAC,IAAK;MACvCpB,uBAAuB,CAACoB,CAAC,CAACF,OAAO,CAAC;IACpC,CAAC;IAEDH,kBAAkB,CAACM,gBAAgB,CAAC,QAAQ,EAAEF,yBAAyB,CAAC;;IAExE;IACA,MAAMG,WAAW,GAAGA,CAAA,KAAM;MACxB,MAAMC,cAAc,GAAG,gEAAgE,CAACC,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,IAAIV,MAAM,CAACW,UAAU,IAAI,GAAG;MAC7IvB,WAAW,CAACmB,cAAc,CAAC;;MAE3B;MACA,IAAI3C,eAAe,IAAI2C,cAAc,EAAE;QACrCrB,gBAAgB,CAAC,GAAG,CAAC;MACvB;IACF,CAAC;IAEDoB,WAAW,CAAC,CAAC;;IAEb;IACA,MAAMM,sBAAsB,GAAGA,CAAA,KAAM;MACnC,IAAIC,QAAQ,CAACC,MAAM,EAAE;QACnBtC,uBAAuB,CAACuC,OAAO,GAAGC,WAAW,CAACC,GAAG,CAAC,CAAC;MACrD,CAAC,MAAM;QACL;QACA,MAAMC,SAAS,GAAGF,WAAW,CAACC,GAAG,CAAC,CAAC,GAAGzC,uBAAuB,CAACuC,OAAO;QACrExC,gBAAgB,CAACwC,OAAO,IAAIG,SAAS;MACvC;IACF,CAAC;IAEDL,QAAQ,CAACR,gBAAgB,CAAC,kBAAkB,EAAEO,sBAAsB,CAAC;IACrEZ,MAAM,CAACK,gBAAgB,CAAC,QAAQ,EAAEC,WAAW,CAAC;IAE9C,OAAO,MAAM;MACXP,kBAAkB,CAACoB,mBAAmB,CAAC,QAAQ,EAAEhB,yBAAyB,CAAC;MAC3EU,QAAQ,CAACM,mBAAmB,CAAC,kBAAkB,EAAEP,sBAAsB,CAAC;MACxEZ,MAAM,CAACmB,mBAAmB,CAAC,QAAQ,EAAEb,WAAW,CAAC;IACnD,CAAC;EACH,CAAC,EAAE,CAAC1C,eAAe,CAAC,CAAC;;EAErB;EACA,MAAMwD,WAAW,GAAGxE,WAAW,CAAC,MAAM;IACpC,IAAI,CAACsB,SAAS,CAAC6C,OAAO,IAAI,CAAC9C,YAAY,CAAC8C,OAAO,EAAE,OAAO,KAAK;IAE7D,MAAMM,MAAM,GAAGnD,SAAS,CAAC6C,OAAO;IAChC,MAAMO,SAAS,GAAGrD,YAAY,CAAC8C,OAAO;IACtC,MAAMQ,IAAI,GAAGD,SAAS,CAACE,qBAAqB,CAAC,CAAC;;IAE9C;IACA,MAAM5C,UAAU,GAAGgB,IAAI,CAAC6B,GAAG,CAACzB,MAAM,CAAC0B,gBAAgB,IAAI,CAAC,EAAEvC,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC;;IAE7E;IACA,MAAMwC,YAAY,GAAG/B,IAAI,CAACE,KAAK,CAACyB,IAAI,CAAC5C,KAAK,CAAC;IAC3C,MAAMiD,aAAa,GAAG,OAAO3E,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAAC4E,QAAQ,CAAC,IAAI,CAAC,GACrEjC,IAAI,CAACE,KAAK,CAAEgC,QAAQ,CAAC7E,MAAM,EAAE,EAAE,CAAC,GAAG,GAAG,GAAI+C,MAAM,CAAC+B,WAAW,CAAC,GAC7DnC,IAAI,CAACE,KAAK,CAACgC,QAAQ,CAAC7E,MAAM,EAAE,EAAE,CAAC,IAAI+C,MAAM,CAAC+B,WAAW,CAAC;IAE1DV,MAAM,CAAC1C,KAAK,GAAGgD,YAAY,GAAG/C,UAAU;IACxCyC,MAAM,CAACpE,MAAM,GAAG2E,aAAa,GAAGhD,UAAU;IAC1CyC,MAAM,CAACW,KAAK,CAACrD,KAAK,GAAG,GAAGgD,YAAY,IAAI;IACxCN,MAAM,CAACW,KAAK,CAAC/E,MAAM,GAAG,GAAG2E,aAAa,IAAI;;IAE1C;IACA,MAAMK,GAAG,GAAGZ,MAAM,CAACa,UAAU,CAAC,IAAI,EAAE;MAClCC,KAAK,EAAE,IAAI;MACXC,cAAc,EAAE,IAAI,CAAE;IACxB,CAAC,CAAC;IAEF,IAAI,CAACH,GAAG,EAAE,OAAO,KAAK;;IAEtB;IACAA,GAAG,CAACI,KAAK,CAACzD,UAAU,EAAEA,UAAU,CAAC;IACjCqD,GAAG,CAACK,qBAAqB,GAAG,IAAI;IAChCL,GAAG,CAACM,qBAAqB,GAAG,MAAM;IAElCpE,MAAM,CAAC4C,OAAO,GAAGkB,GAAG;IACpBvD,aAAa,CAAC;MACZC,KAAK,EAAEgD,YAAY;MACnB1E,MAAM,EAAE2E,aAAa;MACrBhD;IACF,CAAC,CAAC;IAEF,OAAO,IAAI;EACb,CAAC,EAAE,CAAC3B,MAAM,EAAEkC,QAAQ,CAAC,CAAC;;EAEtB;EACAzC,SAAS,CAAC,MAAM;IACd,IAAI,CAACuB,YAAY,CAAC8C,OAAO,EAAE;;IAE3B;IACAK,WAAW,CAAC,CAAC;;IAEb;IACA,IAAIoB,aAAa;IACjB,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzBC,YAAY,CAACF,aAAa,CAAC;MAC3BA,aAAa,GAAGG,UAAU,CAAC,MAAM;QAC/BvB,WAAW,CAAC,CAAC;MACf,CAAC,EAAE,GAAG,CAAC;IACT,CAAC;IAEDpB,MAAM,CAACK,gBAAgB,CAAC,QAAQ,EAAEoC,YAAY,CAAC;IAE/C,OAAO,MAAM;MACXzC,MAAM,CAACmB,mBAAmB,CAAC,QAAQ,EAAEsB,YAAY,CAAC;MAClD,IAAID,aAAa,EAAEE,YAAY,CAACF,aAAa,CAAC;IAChD,CAAC;EACH,CAAC,EAAE,CAACpB,WAAW,CAAC,CAAC;;EAEjB;EACA1E,SAAS,CAAC,MAAM;IACd,IAAI,CAACuB,YAAY,CAAC8C,OAAO,EAAE;IAE3B,MAAM6B,QAAQ,GAAG,IAAIC,oBAAoB,CACvCC,OAAO,IAAI;MACThE,YAAY,CAACgE,OAAO,CAAC,CAAC,CAAC,CAACC,cAAc,CAAC;IACzC,CAAC,EACD;MACEC,SAAS,EAAE,IAAI;MACfC,UAAU,EAAE;IACd,CACF,CAAC;IAEDL,QAAQ,CAACM,OAAO,CAACjF,YAAY,CAAC8C,OAAO,CAAC;IAEtC,OAAO,MAAM6B,QAAQ,CAACO,UAAU,CAAC,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAzG,SAAS,CAAC,MAAM;IACd,IAAI,CAACoB,oBAAoB,EAAE;IAE3B,MAAMsF,YAAY,GAAGA,CAAA,KAAM;MACzB9D,UAAU,CAACU,MAAM,CAACX,OAAO,CAAC;IAC5B,CAAC;IAEDW,MAAM,CAACK,gBAAgB,CAAC,QAAQ,EAAE+C,YAAY,EAAE;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC;IAElE,OAAO,MAAM;MACXrD,MAAM,CAACmB,mBAAmB,CAAC,QAAQ,EAAEiC,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,CAACtF,oBAAoB,CAAC,CAAC;;EAE1B;EACA,MAAMwF,YAAY,GAAG1G,WAAW,CAAC,MAAM;IACrC,IAAI,CAAC6B,UAAU,CAACE,KAAK,IAAI,CAACF,UAAU,CAACxB,MAAM,EAAE,OAAO,IAAI;IAExD,MAAM;MAAE0B,KAAK;MAAE1B;IAAO,CAAC,GAAGwB,UAAU;;IAEpC;IACA,IAAI8E,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAEC,IAAI;IAC9B,IAAIC,KAAK;IAET,IAAI5F,SAAS,KAAK,KAAK,EAAE;MACvB;MACAwF,MAAM,GAAG3D,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAGjF,KAAK;MAC9B6E,MAAM,GAAG,CAAC,EAAE;MACZG,KAAK,GAAG,CAAC/D,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIhE,IAAI,CAACiE,EAAE,GAAG,GAAG,CAAC,CAAC;MACnDJ,IAAI,GAAGF,MAAM,GAAG3D,IAAI,CAACkE,GAAG,CAACH,KAAK,CAAC,GAAG1G,MAAM,GAAG,GAAG;MAC9CyG,IAAI,GAAGF,MAAM,GAAG5D,IAAI,CAACmE,GAAG,CAACJ,KAAK,CAAC,GAAG1G,MAAM,GAAG,GAAG;IAChD,CAAC,MAAM,IAAIc,SAAS,KAAK,MAAM,EAAE;MAC/B;MACAwF,MAAM,GAAG,CAAC,EAAE;MACZC,MAAM,GAAG5D,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG3G,MAAM,GAAG,GAAG;MACrC0G,KAAK,GAAG,CAAC/D,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIhE,IAAI,CAACiE,EAAE,GAAG,GAAG,CAAC,CAAC;MACnDJ,IAAI,GAAGF,MAAM,GAAG3D,IAAI,CAACkE,GAAG,CAACH,KAAK,CAAC,GAAGhF,KAAK,GAAG,GAAG;MAC7C+E,IAAI,GAAGF,MAAM,GAAG5D,IAAI,CAACmE,GAAG,CAACJ,KAAK,CAAC,GAAGhF,KAAK,GAAG,GAAG;IAC/C,CAAC,MAAM,IAAIZ,SAAS,KAAK,OAAO,EAAE;MAChC;MACAwF,MAAM,GAAG5E,KAAK,GAAG,EAAE;MACnB6E,MAAM,GAAG5D,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG3G,MAAM,GAAG,GAAG;MACrC0G,KAAK,GAAG,CAAC/D,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,IAAIhE,IAAI,CAACiE,EAAE,GAAG,GAAG,CAAC,CAAC;MACpDJ,IAAI,GAAGF,MAAM,GAAG3D,IAAI,CAACkE,GAAG,CAACH,KAAK,CAAC,GAAGhF,KAAK,GAAG,GAAG;MAC7C+E,IAAI,GAAGF,MAAM,GAAG5D,IAAI,CAACmE,GAAG,CAACJ,KAAK,CAAC,GAAGhF,KAAK,GAAG,GAAG;IAC/C,CAAC,MAAM,IAAIZ,SAAS,KAAK,MAAM,EAAE;MAC/B;MACA,IAAI6B,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE;QACvB;QACAL,MAAM,GAAG,CAAC,EAAE;QACZC,MAAM,GAAG5D,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG3G,MAAM,GAAG,GAAG;QACrC0G,KAAK,GAAG,CAAC/D,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,IAAIhE,IAAI,CAACiE,EAAE,GAAG,GAAG;QACjDJ,IAAI,GAAGF,MAAM,GAAG3D,IAAI,CAACkE,GAAG,CAACH,KAAK,CAAC,GAAGhF,KAAK,GAAG,GAAG;QAC7C+E,IAAI,GAAGF,MAAM,GAAG5D,IAAI,CAACmE,GAAG,CAACJ,KAAK,CAAC,GAAGhF,KAAK,GAAG,GAAG;MAC/C,CAAC,MAAM;QACL;QACA4E,MAAM,GAAG5E,KAAK,GAAG,EAAE;QACnB6E,MAAM,GAAG5D,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG3G,MAAM,GAAG,GAAG;QACrC0G,KAAK,GAAG,CAAC/D,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,IAAIhE,IAAI,CAACiE,EAAE,GAAG,GAAG;QAClDJ,IAAI,GAAGF,MAAM,GAAG3D,IAAI,CAACkE,GAAG,CAACH,KAAK,CAAC,GAAGhF,KAAK,GAAG,GAAG;QAC7C+E,IAAI,GAAGF,MAAM,GAAG5D,IAAI,CAACmE,GAAG,CAACJ,KAAK,CAAC,GAAGhF,KAAK,GAAG,GAAG;MAC/C;IACF;;IAEA;IACA,MAAMqF,IAAI,GAAG,CAACpE,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,IAAIvG,UAAU;IACtD,MAAM4G,KAAK,GAAG,CAACrE,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,IAAItG,WAAW;;IAExD;IACA,MAAM4G,SAAS,GAAG,EAAE;IACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG5E,eAAe,CAACC,aAAa,EAAE2E,CAAC,EAAE,EAAE;MACtDD,SAAS,CAACE,IAAI,CAAC;QAAEC,CAAC,EAAEd,MAAM;QAAEe,CAAC,EAAEd;MAAO,CAAC,CAAC;IAC1C;;IAEA;IACA,OAAO;MACLD,MAAM;MACNC,MAAM;MACNC,IAAI;MACJC,IAAI;MACJC,KAAK;MACLK,IAAI;MACJC,KAAK;MACLM,QAAQ,EAAE,CAAC;MACXC,OAAO,EAAE5E,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;MAClCa,aAAa,EAAE,GAAG,GAAG7E,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG,GAAG;MACxCM,SAAS;MACTQ,QAAQ,EAAE/G,YAAY,IAAIiC,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG,GAAG;MAC7Ce,cAAc,EAAE,GAAG,GAAG/E,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG,IAAI;MAC1CgB,cAAc,EAAE;IAClB,CAAC;EACH,CAAC,EAAE,CAACnG,UAAU,EAAEpB,UAAU,EAAEC,WAAW,EAAES,SAAS,EAAEJ,YAAY,EAAE4B,eAAe,CAACC,aAAa,CAAC,CAAC;;EAEjG;EACA,MAAMqF,WAAW,GAAGjI,WAAW,CAAC,CAACyH,CAAC,EAAEC,CAAC,EAAEN,IAAI,EAAEL,KAAK,KAAK;IACrD,IAAI,CAAChG,YAAY,EAAE;IAEnB,MAAMmH,aAAa,GAAGvF,eAAe,CAACE,kBAAkB;;IAExD;IACA,KAAK,IAAI0E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGW,aAAa,EAAEX,CAAC,EAAE,EAAE;MACtC;MACA,MAAMY,aAAa,GAAGpB,KAAK,IAAI/D,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;;MAEzD;MACA,MAAMK,KAAK,GAAG,GAAG,GAAGrE,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG,GAAG;;MAEvC;MACA,MAAMoB,EAAE,GAAGpF,IAAI,CAACkE,GAAG,CAACiB,aAAa,CAAC,GAAGd,KAAK;MAC1C,MAAMgB,EAAE,GAAGrF,IAAI,CAACmE,GAAG,CAACgB,aAAa,CAAC,GAAGd,KAAK;;MAE1C;MACA,MAAMiB,YAAY,GAAGlB,IAAI,IAAI,GAAG,GAAGpE,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;;MAEvD;MACAvF,SAAS,CAAC0C,OAAO,CAACqD,IAAI,CAAC;QACrBC,CAAC;QACDC,CAAC;QACDU,EAAE;QACFC,EAAE;QACFjB,IAAI,EAAEkB,YAAY;QAClBV,OAAO,EAAE,GAAG,GAAG5E,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG,GAAG;QAClCuB,KAAK,EAAE,IAAI,GAAGvF,IAAI,CAACgE,MAAM,CAAC,CAAC,GAAG,IAAI;QAClCwB,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACzH,YAAY,EAAE4B,eAAe,CAACE,kBAAkB,CAAC,CAAC;;EAEtD;EACA,MAAM4F,aAAa,GAAGzI,WAAW,CAAE0I,SAAS,IAAK;IAC/C,MAAM;MAAE3G,KAAK;MAAE1B;IAAO,CAAC,GAAGwB,UAAU;;IAEpC;IACAL,UAAU,CAAC2C,OAAO,GAAG3C,UAAU,CAAC2C,OAAO,CAACwE,MAAM,CAACC,MAAM,IAAI;MACvD;MACAA,MAAM,CAACjB,QAAQ,IAAIiB,MAAM,CAACvB,KAAK,IAAIqB,SAAS,GAAG,IAAI,CAAC;;MAEpD;MACA,IAAIE,MAAM,CAACjB,QAAQ,IAAI,CAAC,EAAE;QACxB,OAAO,KAAK;MACd;;MAEA;MACA,IAAIiB,MAAM,CAACd,QAAQ,IAAI,CAACc,MAAM,CAACZ,cAAc,IAAIY,MAAM,CAACjB,QAAQ,IAAIiB,MAAM,CAACb,cAAc,EAAE;QACzFa,MAAM,CAACZ,cAAc,GAAG,IAAI;;QAE5B;QACA,MAAMa,QAAQ,GAAGD,MAAM,CAACjC,MAAM,GAAG,CAACiC,MAAM,CAAC/B,IAAI,GAAG+B,MAAM,CAACjC,MAAM,IAAIiC,MAAM,CAACjB,QAAQ;QAChF,MAAMmB,QAAQ,GAAGF,MAAM,CAAChC,MAAM,GAAG,CAACgC,MAAM,CAAC9B,IAAI,GAAG8B,MAAM,CAAChC,MAAM,IAAIgC,MAAM,CAACjB,QAAQ;;QAEhF;QACAM,WAAW,CAACY,QAAQ,EAAEC,QAAQ,EAAEF,MAAM,CAACxB,IAAI,EAAEwB,MAAM,CAAC7B,KAAK,CAAC;MAC5D;;MAEA;MACA,MAAM8B,QAAQ,GAAGD,MAAM,CAACjC,MAAM,GAAG,CAACiC,MAAM,CAAC/B,IAAI,GAAG+B,MAAM,CAACjC,MAAM,IAAIiC,MAAM,CAACjB,QAAQ;MAChF,MAAMmB,QAAQ,GAAGF,MAAM,CAAChC,MAAM,GAAG,CAACgC,MAAM,CAAC9B,IAAI,GAAG8B,MAAM,CAAChC,MAAM,IAAIgC,MAAM,CAACjB,QAAQ;;MAEhF;MACAiB,MAAM,CAACtB,SAAS,CAACyB,GAAG,CAAC,CAAC,CAAC,CAAC;MACxBH,MAAM,CAACtB,SAAS,CAAC0B,OAAO,CAAC;QAAEvB,CAAC,EAAEoB,QAAQ;QAAEnB,CAAC,EAAEoB;MAAS,CAAC,CAAC,CAAC,CAAC;;MAExD,OAAO,IAAI;IACb,CAAC,CAAC;;IAEF;IACA,OAAOtH,UAAU,CAAC2C,OAAO,CAAC8E,MAAM,GAAGtG,eAAe,CAACnC,WAAW,EAAE;MAC9D,MAAMoI,MAAM,GAAGlC,YAAY,CAAC,CAAC;MAC7B,IAAIkC,MAAM,EAAE;QACVpH,UAAU,CAAC2C,OAAO,CAACqD,IAAI,CAACoB,MAAM,CAAC;MACjC;IACF;EACF,CAAC,EAAE,CAAC/G,UAAU,EAAE6E,YAAY,EAAEuB,WAAW,EAAEtF,eAAe,CAACnC,WAAW,CAAC,CAAC;;EAExE;EACA,MAAM0I,YAAY,GAAGlJ,WAAW,CAAE0I,SAAS,IAAK;IAC9C,IAAI,CAAC3H,YAAY,EAAE;;IAEnB;IACAU,SAAS,CAAC0C,OAAO,GAAG1C,SAAS,CAAC0C,OAAO,CAACwE,MAAM,CAACQ,KAAK,IAAI;MACpD;MACAA,KAAK,CAAC1B,CAAC,IAAI0B,KAAK,CAACf,EAAE,IAAIM,SAAS,GAAG,EAAE,CAAC;MACtCS,KAAK,CAACzB,CAAC,IAAIyB,KAAK,CAACd,EAAE,IAAIK,SAAS,GAAG,EAAE,CAAC;;MAEtC;MACAS,KAAK,CAACd,EAAE,IAAI,IAAI,IAAIK,SAAS,GAAG,EAAE,CAAC;;MAEnC;MACAS,KAAK,CAACX,IAAI,IAAIW,KAAK,CAACZ,KAAK,IAAIG,SAAS,GAAG,EAAE,CAAC;;MAE5C;MACA,OAAOS,KAAK,CAACX,IAAI,GAAG,CAAC;IACvB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACzH,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMqI,aAAa,GAAGpJ,WAAW,CAAC,CAACqF,GAAG,EAAEgE,YAAY,KAAK;IACvD7H,UAAU,CAAC2C,OAAO,CAACmF,OAAO,CAACV,MAAM,IAAI;MACnC;MACA,IAAIhB,OAAO,GAAGgB,MAAM,CAAChB,OAAO;MAC5B,IAAIgB,MAAM,CAACjB,QAAQ,GAAGiB,MAAM,CAACf,aAAa,EAAE;QAC1C,MAAM0B,YAAY,GAAG,CAACX,MAAM,CAACjB,QAAQ,GAAGiB,MAAM,CAACf,aAAa,KAAK,CAAC,GAAGe,MAAM,CAACf,aAAa,CAAC;QAC1FD,OAAO,GAAGgB,MAAM,CAAChB,OAAO,IAAI,CAAC,GAAG2B,YAAY,CAAC;MAC/C;;MAEA;MACA,MAAMC,cAAc,GAAGtI,oBAAoB,GAAGmI,YAAY,GAAGT,MAAM,CAACxB,IAAI,GAAG,IAAI,GAAG,CAAC;;MAEnF;MACA,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqB,MAAM,CAACtB,SAAS,CAAC2B,MAAM,GAAG,CAAC,EAAE1B,CAAC,EAAE,EAAE;QACpD,MAAMkC,IAAI,GAAGb,MAAM,CAACtB,SAAS,CAACC,CAAC,CAAC;QAChC,MAAMmC,IAAI,GAAGd,MAAM,CAACtB,SAAS,CAACC,CAAC,GAAG,CAAC,CAAC;;QAEpC;QACA,MAAMoC,cAAc,GAAG/B,OAAO,IAAI,CAAC,GAAGL,CAAC,GAAGqB,MAAM,CAACtB,SAAS,CAAC2B,MAAM,CAAC;QAClE,MAAMW,YAAY,GAAGhB,MAAM,CAACxB,IAAI,IAAI,CAAC,GAAGG,CAAC,GAAGqB,MAAM,CAACtB,SAAS,CAAC2B,MAAM,GAAG,GAAG,CAAC;;QAE1E;QACA,IAAIU,cAAc,GAAG,IAAI,EAAE;;QAE3B;QACAtE,GAAG,CAACwE,SAAS,CAAC,CAAC;QACfxE,GAAG,CAACyE,MAAM,CAACL,IAAI,CAAChC,CAAC,EAAEgC,IAAI,CAAC/B,CAAC,GAAG8B,cAAc,CAAC;QAC3CnE,GAAG,CAAC0E,MAAM,CAACL,IAAI,CAACjC,CAAC,EAAEiC,IAAI,CAAChC,CAAC,GAAG8B,cAAc,CAAC;;QAE3C;QACAnE,GAAG,CAAC2E,SAAS,GAAGJ,YAAY;QAC5BvE,GAAG,CAAC4E,WAAW,GAAGnJ,UAAU,CAACoJ,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,GAAG,EAAE,IAAIP,cAAc,GAAG,CAAC;QACrFtE,GAAG,CAAC8E,OAAO,GAAG,OAAO;QACrB9E,GAAG,CAAC+E,MAAM,CAAC,CAAC;MACd;;MAEA;MACA,IAAIxB,MAAM,CAACtB,SAAS,CAAC,CAAC,CAAC,EAAE;QACvB,MAAM+C,OAAO,GAAGzB,MAAM,CAACtB,SAAS,CAAC,CAAC,CAAC;;QAEnC;QACA,IAAI3E,eAAe,CAACI,OAAO,EAAE;UAC3BsC,GAAG,CAACiF,WAAW,GAAGzJ,SAAS;UAC3BwE,GAAG,CAACkF,UAAU,GAAG3B,MAAM,CAACxB,IAAI,GAAG,CAAC;QAClC;;QAEA;QACA/B,GAAG,CAACwE,SAAS,CAAC,CAAC;QACfxE,GAAG,CAACmF,GAAG,CAACH,OAAO,CAAC5C,CAAC,EAAE4C,OAAO,CAAC3C,CAAC,GAAG8B,cAAc,EAAEZ,MAAM,CAACxB,IAAI,GAAG,GAAG,EAAE,CAAC,EAAEpE,IAAI,CAACiE,EAAE,GAAG,CAAC,CAAC;QACjF5B,GAAG,CAACoF,SAAS,GAAG5J,SAAS,CAACqJ,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,GAAG,EAAE,IAAItC,OAAO,GAAG,GAAG,GAAG,CAAC;QACjFvC,GAAG,CAACqF,IAAI,CAAC,CAAC;;QAEV;QACArF,GAAG,CAACwE,SAAS,CAAC,CAAC;QACfxE,GAAG,CAACmF,GAAG,CAACH,OAAO,CAAC5C,CAAC,EAAE4C,OAAO,CAAC3C,CAAC,GAAG8B,cAAc,EAAEZ,MAAM,CAACxB,IAAI,GAAG,GAAG,EAAE,CAAC,EAAEpE,IAAI,CAACiE,EAAE,GAAG,CAAC,CAAC;QACjF5B,GAAG,CAACoF,SAAS,GAAG7J,SAAS,CAACsJ,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,GAAG,EAAE,IAAItC,OAAO,GAAG,CAAC;QAC3EvC,GAAG,CAACqF,IAAI,CAAC,CAAC;;QAEV;QACArF,GAAG,CAACkF,UAAU,GAAG,CAAC;MACpB;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACrJ,oBAAoB,EAAEJ,UAAU,EAAED,SAAS,EAAED,SAAS,EAAE+B,eAAe,CAACI,OAAO,CAAC,CAAC;;EAErF;EACA,MAAM4H,YAAY,GAAG3K,WAAW,CAAEqF,GAAG,IAAK;IACxC,IAAI,CAACtE,YAAY,EAAE;IAEnBU,SAAS,CAAC0C,OAAO,CAACmF,OAAO,CAACH,KAAK,IAAI;MACjC9D,GAAG,CAACwE,SAAS,CAAC,CAAC;MACfxE,GAAG,CAACmF,GAAG,CAACrB,KAAK,CAAC1B,CAAC,EAAE0B,KAAK,CAACzB,CAAC,EAAEyB,KAAK,CAAC/B,IAAI,GAAG+B,KAAK,CAACX,IAAI,EAAE,CAAC,EAAExF,IAAI,CAACiE,EAAE,GAAG,CAAC,CAAC;MAClE5B,GAAG,CAACoF,SAAS,GAAG5J,SAAS,CAACqJ,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,GAAG,EAAE,IAAIf,KAAK,CAACvB,OAAO,GAAGuB,KAAK,CAACX,IAAI,GAAG,CAAC;MAE9F,IAAI7F,eAAe,CAACI,OAAO,EAAE;QAC3BsC,GAAG,CAACiF,WAAW,GAAGzJ,SAAS;QAC3BwE,GAAG,CAACkF,UAAU,GAAGpB,KAAK,CAAC/B,IAAI,GAAG,CAAC,GAAG+B,KAAK,CAACX,IAAI;MAC9C;MAEAnD,GAAG,CAACqF,IAAI,CAAC,CAAC;IACZ,CAAC,CAAC;;IAEF;IACArF,GAAG,CAACkF,UAAU,GAAG,CAAC;EACpB,CAAC,EAAE,CAACxJ,YAAY,EAAEF,SAAS,EAAE8B,eAAe,CAACI,OAAO,CAAC,CAAC;;EAEtD;EACAjD,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACS,MAAM,IAAI,CAAC0B,SAAS,IAAI,CAACV,MAAM,CAAC4C,OAAO,IAAI,CAACtC,UAAU,CAACE,KAAK,IAC5Dd,oBAAoB,IAAIkB,oBAAqB,EAAE;MAClD;IACF;;IAEA;IACA,MAAMyI,OAAO,GAAIC,SAAS,IAAK;MAC7B,IAAI,CAACtJ,MAAM,CAAC4C,OAAO,EAAE;;MAErB;MACA,IAAI,CAACxC,gBAAgB,CAACwC,OAAO,EAAExC,gBAAgB,CAACwC,OAAO,GAAG0G,SAAS;MACnE,MAAMnC,SAAS,GAAGmC,SAAS,GAAGlJ,gBAAgB,CAACwC,OAAO;MACtDxC,gBAAgB,CAACwC,OAAO,GAAG0G,SAAS;;MAEpC;MACAtJ,MAAM,CAAC4C,OAAO,CAAC2G,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEjJ,UAAU,CAACE,KAAK,EAAEF,UAAU,CAACxB,MAAM,CAAC;;MAEnE;MACAoI,aAAa,CAACC,SAAS,CAAC;MACxBQ,YAAY,CAACR,SAAS,CAAC;;MAEvB;MACAU,aAAa,CAAC7H,MAAM,CAAC4C,OAAO,EAAE1B,OAAO,CAAC;MACtCkI,YAAY,CAACpJ,MAAM,CAAC4C,OAAO,CAAC;;MAE5B;MACAzC,iBAAiB,CAACyC,OAAO,GAAG4G,qBAAqB,CAACH,OAAO,CAAC;IAC5D,CAAC;;IAED;IACAlJ,iBAAiB,CAACyC,OAAO,GAAG4G,qBAAqB,CAACH,OAAO,CAAC;;IAE1D;IACA,OAAO,MAAM;MACX,IAAIlJ,iBAAiB,CAACyC,OAAO,EAAE;QAC7B6G,oBAAoB,CAACtJ,iBAAiB,CAACyC,OAAO,CAAC;MACjD;IACF,CAAC;EACH,CAAC,EAAE,CACD5D,MAAM,EACN0B,SAAS,EACTJ,UAAU,EACVM,oBAAoB,EACpBlB,oBAAoB,EACpBwH,aAAa,EACbS,YAAY,EACZE,aAAa,EACbuB,YAAY,EACZlI,OAAO,CACR,CAAC;EAEF,oBACEtC,OAAA;IACE8K,GAAG,EAAE5J,YAAa;IAClB+D,KAAK,EAAE;MACL8F,QAAQ,EAAE,UAAU;MACpBC,GAAG,EAAE,CAAC;MACNC,IAAI,EAAE,CAAC;MACPrJ,KAAK,EAAE,MAAM;MACb1B,MAAM,EAAEA,MAAM;MACdgL,QAAQ,EAAE,QAAQ;MAClBC,aAAa,EAAE,MAAM;MACrBhL,MAAM,EAAEA,MAAM;MACdiL,SAAS,EAAE,eAAe;MAC1BC,UAAU,EAAE;IACd,CAAE;IACF,eAAY,MAAM;IAAAC,QAAA,eAElBtL,OAAA;MACE8K,GAAG,EAAE3J,SAAU;MACf8D,KAAK,EAAE;QACL8F,QAAQ,EAAE,UAAU;QACpBC,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPrJ,KAAK,EAAE,MAAM;QACb1B,MAAM,EAAE,MAAM;QACduH,OAAO,EAAG3G,oBAAoB,IAAIkB,oBAAoB,GAAI,GAAG,GAAG,CAAC;QACjEuJ,UAAU,EAAE,mBAAmB;QAC/BH,SAAS,EAAE,eAAe;QAC1BC,UAAU,EAAE;MACd;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;;AAED;AACA;AACA;AAFA1K,EAAA,CAljBMhB,YAAY;AAAA2L,EAAA,GAAZ3L,YAAY;AAqjBlB,OAAO,MAAM4L,kBAAkB,GAAIC,KAAK,IAAK;EAC3C,oBAAO9L,OAAA,CAACC,YAAY;IAClBQ,SAAS,EAAC,wBAAwB;IAClCC,SAAS,EAAC,0BAA0B;IACpCC,UAAU,EAAC,yBAAyB;IACpCL,UAAU,EAAE,CAAE;IACdC,WAAW,EAAE,IAAK;IAClBC,WAAW,EAAE,GAAI;IAAA,GACbsL;EAAK;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AACJ,CAAC;AAACI,GAAA,GAVWF,kBAAkB;AAY/B,eAAe5L,YAAY;AAAC,IAAA2L,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}