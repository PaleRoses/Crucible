{"ast":null,"code":"var _jsxFileName = \"/home/valeria/Documents/Crucible/frontend/src/components/core/effects/holdereffects/PersonProfileCard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useCallback, useMemo } from 'react';\nimport { motion, useInView, useAnimation } from 'framer-motion';\nimport styled from 'styled-components';\n\n// Note: This implementation assumes you have the 'styled-components' package installed\n\n// Styled Components\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled(motion.div)`\n  display: flex;\n  flex-direction: ${props => props.isMobile ? 'column' : 'row'};\n  width: 100%;\n  max-width: 1300px;\n  margin: 0 auto;\n  min-height: ${props => props.isMobile ? 'auto' : '70vh'};\n  position: relative;\n  padding-top: ${props => props.isMobile ? '80px' : '0'};\n`;\n_c = Container;\nconst SidebarWrapper = styled.div`\n  width: ${props => `${props.width}%`};\n  position: relative;\n`;\n_c2 = SidebarWrapper;\nconst Sidebar = styled.div`\n  padding: 3rem 2rem 2rem 0;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  position: relative;\n  top: 0;\n`;\n_c3 = Sidebar;\nconst ContentSection = styled.div`\n  width: ${props => props.isMobile ? '100%' : `${props.width}%`};\n  padding: ${props => props.isMobile ? '2rem 1.5rem' : `3rem 0 2rem ${props.contentPadding}rem`};\n  margin-left: ${props => props.isMobile ? '0' : 'auto'};\n`;\n_c4 = ContentSection;\nconst Section = styled.div`\n  margin-bottom: 3rem;\n  scroll-margin-top: ${props => props.isMobile ? '80px' : '2rem'};\n`;\n_c5 = Section;\nconst SectionTitle = styled.h3`\n  font-size: 1.4rem;\n  color: ${props => props.highlightColor};\n  margin-bottom: 1rem;\n  font-weight: 300;\n`;\n_c6 = SectionTitle;\nconst ProfileInfoContainer = styled.div`\n  margin-bottom: 2rem;\n  padding-left: 5px;\n  text-align: ${props => props.isMobile ? 'center' : 'left'};\n  width: 100%;\n`;\n_c7 = ProfileInfoContainer;\nconst ProfileName = styled.h1`\n  font-weight: 300;\n  letter-spacing: 0.05em;\n  margin-bottom: 0.5rem;\n  font-size: ${props => props.isMobile ? '2.2rem' : '2.8rem'};\n  color: ${props => props.highlightColor};\n`;\n_c8 = ProfileName;\nconst ProfileRole = styled.h2`\n  font-weight: 300;\n  margin-bottom: 2rem;\n  letter-spacing: 0.05em;\n  font-style: italic;\n  font-size: ${props => props.isMobile ? '1.1rem' : '1.2rem'};\n  color: ${props => props.color};\n  font-family: ${props => props.fontFamily};\n`;\n_c9 = ProfileRole;\nconst ProfileTagline = styled.p`\n  line-height: 1.6;\n  margin-bottom: 3rem;\n  font-weight: 300;\n  font-size: 1.1rem;\n  max-width: ${props => props.isMobile ? '100%' : '90%'};\n  color: ${props => props.color};\n  font-family: ${props => props.fontFamily};\n`;\n_c10 = ProfileTagline;\nconst NavLinks = styled.div`\n  margin-top: 3rem;\n`;\n_c11 = NavLinks;\nconst NavLinkContainer = styled.div`\n  position: relative;\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n`;\n_c12 = NavLinkContainer;\nconst NavLine = styled.div`\n  position: absolute;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  height: 0.75px;\n  width: ${props => props.expanded ? `${props.maxWidth}px` : `${props.minWidth}px`};\n  background-color: ${props => props.expanded ? props.activeColor : props.inactiveColor};\n  transition: width 0.3s ease, background-color 0.3s ease;\n`;\n_c13 = NavLine;\nconst NavButton = styled.button`\n  position: relative;\n  display: block;\n  padding: 0.5rem 0 0.5rem 40px;\n  font-size: 0.85rem;\n  letter-spacing: 0.1em;\n  background: transparent;\n  border: none;\n  text-align: left;\n  outline: none;\n  box-shadow: none;\n  transition: color 0.5s ease, transform 0.5s ease;\n  cursor: pointer;\n  width: fit-content;\n  color: ${props => props.active ? props.activeColor : props.inactiveColor};\n  transform: ${props => props.active ? 'translateX(10px)' : 'none'};\n`;\n_c14 = NavButton;\nconst MobileNav = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  z-index: 100;\n  backdrop-filter: blur(10px);\n  transition: all 0.3s ease;\n  padding: 0.75rem 1rem;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  transform: ${props => props.visible ? 'translateY(0)' : 'translateY(-100%)'};\n  opacity: ${props => props.visible ? 1 : 0};\n`;\n_c15 = MobileNav;\nconst MobileNavItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c16 = MobileNavItem;\nconst MobileNavButton = styled.button`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0.5rem;\n  outline: none;\n`;\n_c17 = MobileNavButton;\nconst MobileNavLine = styled.div`\n  width: ${props => props.active ? `${props.maxWidth}px` : `${props.minWidth}px`};\n  height: 2px;\n  background-color: ${props => props.active ? props.activeColor : props.inactiveColor};\n  transition: width 0.3s ease, background-color 0.3s ease;\n  margin-bottom: 0.5rem;\n`;\n_c18 = MobileNavLine;\nconst MobileNavLabel = styled.div`\n  font-size: 0.75rem;\n  color: ${props => props.active ? props.activeColor : props.inactiveColor};\n  letter-spacing: 0.1em;\n  transition: color 0.3s ease;\n`;\n_c19 = MobileNavLabel;\nconst StatsContainer = styled.div`\n  display: flex;\n  justify-content: ${props => props.isMobile ? 'center' : 'space-between'};\n  flex-wrap: wrap;\n  margin-top: 3rem;\n  width: 100%;\n  gap: ${props => props.isMobile ? '2rem' : '0'};\n`;\n_c20 = StatsContainer;\nconst StatItem = styled.div`\n  flex: ${props => props.isMobile ? '0 0 auto' : '1'};\n  text-align: center;\n  padding: 0 1rem;\n  min-width: ${props => props.isMobile ? '140px' : '100px'};\n  transition: transform 0.3s ease;\n  transform: ${props => props.isHovering ? 'translateY(-5px)' : 'none'};\n`;\n_c21 = StatItem;\nconst StatValue = styled.div`\n  font-size: ${props => props.isMobile ? '2.2rem' : '2.5rem'};\n  font-weight: 100;\n  color: ${props => props.color};\n  margin-bottom: 0.5rem;\n`;\n_c22 = StatValue;\nconst StatLabel = styled.div`\n  font-size: 0.85rem;\n  color: ${props => props.color};\n  text-transform: uppercase;\n  letter-spacing: 0.1em;\n`;\n_c23 = StatLabel;\nconst SectionContent = styled.p`\n  line-height: 1.8;\n  margin-bottom: 1.5rem;\n  font-weight: 300;\n  font-size: 1rem;\n  color: ${props => props.color};\n  font-family: ${props => props.fontFamily};\n`;\n\n// Component for ProfileInfo\n_c24 = SectionContent;\nconst ProfileInfo = /*#__PURE__*/React.memo(_c25 = ({\n  person,\n  isMobile,\n  highlightColor,\n  textColor,\n  fontFamily\n}) => {\n  return /*#__PURE__*/_jsxDEV(ProfileInfoContainer, {\n    isMobile: isMobile,\n    children: [/*#__PURE__*/_jsxDEV(ProfileName, {\n      isMobile: isMobile,\n      highlightColor: highlightColor,\n      children: person.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfileRole, {\n      isMobile: isMobile,\n      color: `${highlightColor}B3`,\n      fontFamily: fontFamily,\n      children: person.role\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), person.tagline && /*#__PURE__*/_jsxDEV(ProfileTagline, {\n      isMobile: isMobile,\n      color: textColor,\n      fontFamily: fontFamily,\n      children: person.tagline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n});\n\n// Component for MobileNavItem\n_c26 = ProfileInfo;\nconst MobileNavItemComponent = /*#__PURE__*/React.memo(_c27 = ({\n  navItem,\n  activeSection,\n  highlightColor,\n  textColor,\n  minLineWidth,\n  maxLineWidth\n}) => {\n  return /*#__PURE__*/_jsxDEV(MobileNavItem, {\n    children: /*#__PURE__*/_jsxDEV(MobileNavButton, {\n      \"data-section-id\": navItem.id,\n      children: [/*#__PURE__*/_jsxDEV(MobileNavLine, {\n        active: activeSection === navItem.id,\n        activeColor: highlightColor,\n        inactiveColor: `${highlightColor}80`,\n        minWidth: minLineWidth,\n        maxWidth: maxLineWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MobileNavLabel, {\n        active: activeSection === navItem.id,\n        activeColor: highlightColor,\n        inactiveColor: textColor,\n        children: navItem.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 5\n  }, this);\n});\n\n// Component for NavLink\n_c28 = MobileNavItemComponent;\nconst NavLinkComponent = /*#__PURE__*/React.memo(_c29 = ({\n  navItem,\n  activeSection,\n  expandedNavItem,\n  onMouseEnter,\n  onMouseLeave,\n  highlightColor,\n  textColor,\n  minLineWidth,\n  maxLineWidth\n}) => {\n  const isActive = activeSection === navItem.id || expandedNavItem === navItem.id;\n  return /*#__PURE__*/_jsxDEV(NavLinkContainer, {\n    \"data-section-id\": navItem.id,\n    onMouseEnter: () => onMouseEnter(navItem.id),\n    onMouseLeave: onMouseLeave,\n    children: [/*#__PURE__*/_jsxDEV(NavLine, {\n      expanded: isActive,\n      activeColor: `${highlightColor}E6`,\n      inactiveColor: `${highlightColor}80`,\n      minWidth: minLineWidth,\n      maxWidth: maxLineWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavButton, {\n      active: isActive,\n      activeColor: highlightColor,\n      inactiveColor: textColor,\n      children: navItem.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }, this);\n});\n\n// Component for StatItem\n_c30 = NavLinkComponent;\nconst StatItemComponent = /*#__PURE__*/_s(/*#__PURE__*/React.memo(_c31 = _s(({\n  stat,\n  isMobile,\n  highlightColor,\n  textColor\n}) => {\n  _s();\n  const [isHovering, setIsHovering] = useState(false);\n  const handleMouseEnter = () => {\n    if (!isMobile) {\n      setIsHovering(true);\n    }\n  };\n  const handleMouseLeave = () => {\n    if (!isMobile) {\n      setIsHovering(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(StatItem, {\n    isMobile: isMobile,\n    isHovering: isHovering,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    children: [/*#__PURE__*/_jsxDEV(StatValue, {\n      isMobile: isMobile,\n      color: highlightColor,\n      children: stat.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n      color: `${textColor}CC`,\n      children: stat.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 5\n  }, this);\n}, \"N3N70ybifgF8Rh1duhSAoiTR/LI=\")), \"N3N70ybifgF8Rh1duhSAoiTR/LI=\");\n\n// Component for SectionContent\n_c32 = StatItemComponent;\nconst SectionContentComponent = /*#__PURE__*/React.memo(_c33 = ({\n  content,\n  textColor,\n  fontFamily\n}) => {\n  if (!content) return null;\n  if (typeof content === 'string') {\n    return /*#__PURE__*/_jsxDEV(SectionContent, {\n      color: textColor,\n      fontFamily: fontFamily,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this);\n  }\n  return content;\n});\n\n/**\n * PersonProfileCard Component - Optimized Version with CSS-in-JS\n * \n * A profile card with a three-phase scroll behavior:\n * 1. Normal Flow: Initially scrolls with the page\n * 2. Fixed Position: Sticks to viewport when scrolling through content\n * 3. Release: Returns to normal flow after scrolling past component\n * \n * Mobile improvements:\n * - Navigation bar moves to top of screen\n * - Content spans full width for better readability\n * - Simplified navigation display\n * \n * Performance optimizations:\n * - Event delegation for navigation\n * - Extracted memoized child components\n * - Throttled scroll handlers\n * - ResizeObserver instead of window resize events\n * - Minimized style recalculations\n * - CSS-in-JS for better style organization\n */\n_c34 = SectionContentComponent;\nconst PersonProfileCard = ({\n  person,\n  animationConfig = {\n    threshold: 0.2,\n    once: true,\n    initialY: 30,\n    duration: 0.8\n  },\n  additionalSections = [],\n  onSectionChange = null,\n  topOffset = 100,\n  showStats = true,\n  highlightColor = '#bfad7f',\n  textColor = 'rgba(224, 224, 224, 0.7)',\n  minLineWidth = 10,\n  maxLineWidth = 40,\n  fontFamily = '\"Garamond\", \"Adobe Caslon Pro\", serif',\n  navigationItems = [{\n    id: 'about',\n    label: 'ABOUT',\n    content: null\n  }, {\n    id: 'experience',\n    label: 'EXPERIENCE',\n    content: null\n  }, {\n    id: 'projects',\n    label: 'PROJECTS',\n    content: null\n  }],\n  contentCompression = 0\n}) => {\n  _s2();\n  var _navigationItems$, _animationConfig$thre, _animationConfig$once, _animationConfig$init;\n  // State management\n  const [activeSection, setActiveSection] = useState(((_navigationItems$ = navigationItems[0]) === null || _navigationItems$ === void 0 ? void 0 : _navigationItems$.id) || 'about');\n  const [expandedNavItem, setExpandedNavItem] = useState(null);\n  const [sidebarMode, setSidebarMode] = useState('normal'); // 'normal', 'fixed', or 'end'\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n  const [mobileNavVisible, setMobileNavVisible] = useState(false);\n  const [lastScrollY, setLastScrollY] = useState(0);\n\n  // Create individual refs at the top level of the component\n  const containerRef = useRef(null);\n  const sidebarRef = useRef(null);\n  const contentRef = useRef(null);\n  const sidebarWrapperRef = useRef(null);\n  const mobileNavRef = useRef(null);\n  const navLinksRef = useRef(null);\n\n  // Create individual section refs\n  const section0Ref = useRef(null);\n  const section1Ref = useRef(null);\n  const section2Ref = useRef(null);\n  const section3Ref = useRef(null);\n  const section4Ref = useRef(null);\n  const section5Ref = useRef(null);\n  const section6Ref = useRef(null);\n  const section7Ref = useRef(null);\n\n  // Animation controls\n  const controls = useAnimation();\n\n  // Memoize the array of section refs so it's stable across renders\n  const sectionRefs = useMemo(() => [section0Ref, section1Ref, section2Ref, section3Ref, section4Ref, section5Ref, section6Ref, section7Ref], []);\n\n  // Memoize the section refs map to avoid recreating on every render\n  const sectionRefsMap = useMemo(() => {\n    const refsMap = {};\n    navigationItems.forEach((item, index) => {\n      if (index < sectionRefs.length) {\n        refsMap[item.id] = sectionRefs[index];\n      }\n    });\n    return refsMap;\n  }, [navigationItems, sectionRefs]);\n\n  // Memoize calculation of compression-based values\n  const layoutValues = useMemo(() => {\n    const compressionFactor = Math.min(Math.max(contentCompression, 0), 10) / 10;\n    return {\n      sidebarWidth: 45 - compressionFactor * 5,\n      // 35-40% range\n      contentWidth: 55 - compressionFactor * 5,\n      // 55-60% range\n      contentPadding: 2 + compressionFactor * 2 // 2-4rem range\n    };\n  }, [contentCompression]);\n\n  // Animation inView detection\n  const isInView = useInView(containerRef, {\n    threshold: (_animationConfig$thre = animationConfig === null || animationConfig === void 0 ? void 0 : animationConfig.threshold) !== null && _animationConfig$thre !== void 0 ? _animationConfig$thre : 0.2,\n    once: (_animationConfig$once = animationConfig === null || animationConfig === void 0 ? void 0 : animationConfig.once) !== null && _animationConfig$once !== void 0 ? _animationConfig$once : true\n  });\n\n  // Memoized function for checking if we're on mobile\n  const checkMobile = useCallback(() => {\n    setIsMobile(window.innerWidth <= 768);\n  }, []);\n\n  // Scroll to section handler - memoized with dependencies\n  const scrollToSection = useCallback(sectionId => {\n    setActiveSection(sectionId);\n    if (onSectionChange) {\n      onSectionChange(sectionId);\n    }\n    const sectionRef = sectionRefsMap[sectionId];\n    if (sectionRef !== null && sectionRef !== void 0 && sectionRef.current) {\n      // Use different scroll methods for mobile vs desktop\n      if (isMobile) {\n        // For mobile, calculate position and use window.scrollTo\n        const offsetTop = sectionRef.current.getBoundingClientRect().top + window.pageYOffset;\n        const mobileNavHeight = mobileNavRef.current ? mobileNavRef.current.offsetHeight : 0;\n        window.scrollTo({\n          top: offsetTop - mobileNavHeight - 20,\n          // Additional offset for spacing\n          behavior: 'smooth'\n        });\n      } else {\n        // For desktop, use the original scrollIntoView method\n        sectionRef.current.scrollIntoView({\n          behavior: 'smooth',\n          block: 'start'\n        });\n      }\n    }\n  }, [onSectionChange, sectionRefsMap, isMobile, mobileNavRef]);\n\n  // Event delegation for all navigation items\n  const handleNavEvent = useCallback(e => {\n    const target = e.target.closest('[data-section-id]');\n    if (target) {\n      const sectionId = target.getAttribute('data-section-id');\n      if (sectionId) {\n        e.preventDefault();\n        scrollToSection(sectionId);\n      }\n    }\n  }, [scrollToSection]);\n\n  // Navigation item hover handlers - memoized to prevent recreation on every render\n  const handleNavItemHover = useCallback(section => {\n    if (!isMobile) {\n      setExpandedNavItem(section);\n    }\n  }, [isMobile]);\n  const handleNavItemLeave = useCallback(() => {\n    if (!isMobile) {\n      setExpandedNavItem(null);\n    }\n  }, [isMobile]);\n\n  // Check mobile on mount and window resize\n  useEffect(() => {\n    // Initial check\n    checkMobile();\n\n    // Add resize event listener\n    window.addEventListener('resize', checkMobile);\n    return () => {\n      window.removeEventListener('resize', checkMobile);\n    };\n  }, [checkMobile]);\n\n  // Set up event delegation for navigation\n  useEffect(() => {\n    // Store current ref values at the time the effect runs\n    const mobileNavElement = mobileNavRef.current;\n    const navLinksElement = navLinksRef.current;\n\n    // Add click event listeners with event delegation\n    if (mobileNavElement) {\n      mobileNavElement.addEventListener('click', handleNavEvent);\n    }\n    if (navLinksElement) {\n      navLinksElement.addEventListener('click', handleNavEvent);\n    }\n    return () => {\n      if (mobileNavElement) {\n        mobileNavElement.removeEventListener('click', handleNavEvent);\n      }\n      if (navLinksElement) {\n        navLinksElement.removeEventListener('click', handleNavEvent);\n      }\n    };\n  }, [handleNavEvent]);\n\n  // Initial animation effect\n  useEffect(() => {\n    if (isInView) {\n      var _animationConfig$dura, _animationConfig$dura2;\n      controls.start({\n        opacity: 1,\n        y: 0,\n        transition: {\n          duration: (_animationConfig$dura = animationConfig === null || animationConfig === void 0 ? void 0 : animationConfig.duration) !== null && _animationConfig$dura !== void 0 ? _animationConfig$dura : 0.8,\n          ease: \"easeOut\",\n          delay: 0.1 // Small delay to ensure DOM is settled\n        }\n      });\n\n      // Mark as initialized after animation completes\n      const timeout = setTimeout(() => {\n        setIsInitialized(true);\n      }, ((_animationConfig$dura2 = animationConfig === null || animationConfig === void 0 ? void 0 : animationConfig.duration) !== null && _animationConfig$dura2 !== void 0 ? _animationConfig$dura2 : 0.8) * 1000 + 100);\n      return () => clearTimeout(timeout);\n    }\n  }, [isInView, controls, animationConfig === null || animationConfig === void 0 ? void 0 : animationConfig.duration]);\n\n  // Set up intersection observer for section detection - optimized with proper dependencies\n  useEffect(() => {\n    const sectionElements = Object.values(sectionRefsMap).map(ref => ref.current).filter(Boolean);\n    if (sectionElements.length === 0) return;\n\n    // Different margins for mobile and desktop to account for different layouts\n    const options = {\n      root: null,\n      rootMargin: isMobile ? '-80px 0px -70% 0px' // For mobile with fixed nav\n      : '-10% 0px -70% 0px',\n      // For desktop\n      threshold: [0, 0.25, 0.5, 0.75] // Multiple thresholds for smoother transitions\n    };\n    const callback = entries => {\n      // Find the most visible section\n      const visibleEntries = entries.filter(entry => entry.isIntersecting);\n      if (visibleEntries.length > 0) {\n        // Sort by visibility ratio, highest first\n        visibleEntries.sort((a, b) => b.intersectionRatio - a.intersectionRatio);\n        const topEntry = visibleEntries[0];\n        const sectionId = topEntry.target.getAttribute('data-section');\n        if (sectionId && sectionId !== activeSection) {\n          setActiveSection(sectionId);\n          if (onSectionChange) {\n            onSectionChange(sectionId);\n          }\n        }\n      }\n    };\n    const observer = new IntersectionObserver(callback, options);\n    sectionElements.forEach(element => observer.observe(element));\n    return () => observer.disconnect();\n  }, [activeSection, onSectionChange, sectionRefsMap, isMobile]);\n\n  // Implement scroll behavior for desktop - optimized by separating logic and reducing recalculations\n  useEffect(() => {\n    if (!isInitialized || !containerRef.current || !sidebarRef.current || !sidebarWrapperRef.current || isMobile) {\n      return;\n    }\n    const container = containerRef.current;\n    const sidebar = sidebarRef.current;\n    const sidebarWrapper = sidebarWrapperRef.current;\n\n    // Add will-change to hint browser about upcoming transforms\n    sidebar.style.willChange = 'position, top, left, width, bottom';\n    let measurements = {\n      containerRect: null,\n      wrapperRect: null,\n      sidebarHeight: null\n    };\n\n    // Update measurements - only called when needed\n    const updateMeasurements = () => {\n      measurements.containerRect = container.getBoundingClientRect();\n      measurements.wrapperRect = sidebarWrapper.getBoundingClientRect();\n      measurements.sidebarHeight = sidebar.offsetHeight;\n    };\n\n    // Get initial measurements\n    updateMeasurements();\n\n    // Optimized scroll handler with throttling\n    const handleScroll = () => {\n      // Update measurements\n      updateMeasurements();\n\n      // Calculate phase transition points\n      const {\n        containerRect,\n        sidebarHeight,\n        wrapperRect\n      } = measurements;\n      const startFixPoint = containerRect.top <= topOffset;\n      const endFixPoint = containerRect.bottom <= sidebarHeight + topOffset;\n\n      // Determine the current scroll phase\n      let newMode;\n      if (!startFixPoint) {\n        newMode = 'normal';\n      } else if (startFixPoint && !endFixPoint) {\n        newMode = 'fixed';\n      } else {\n        newMode = 'end';\n      }\n\n      // Only update DOM if the mode changes\n      if (sidebarMode !== newMode) {\n        setSidebarMode(newMode);\n\n        // Use requestAnimationFrame for style updates to optimize rendering\n        requestAnimationFrame(() => {\n          if (newMode === 'normal') {\n            // Phase 1: Normal flow\n            sidebar.style.position = 'relative';\n            sidebar.style.top = '0';\n            sidebar.style.left = '0';\n            sidebar.style.width = '';\n            sidebar.style.bottom = '';\n          } else if (newMode === 'fixed') {\n            // Phase 2: Fixed position\n            sidebar.style.position = 'fixed';\n            sidebar.style.top = `${topOffset}px`;\n            sidebar.style.width = `${wrapperRect.width}px`;\n            sidebar.style.left = `${wrapperRect.left}px`;\n            sidebar.style.bottom = '';\n          } else if (newMode === 'end') {\n            // Phase 3: End position\n            sidebar.style.position = 'absolute';\n            sidebar.style.top = 'auto';\n            sidebar.style.bottom = '0';\n            sidebar.style.left = '0';\n            sidebar.style.width = '';\n          }\n        });\n      }\n    };\n\n    // Throttled scroll event handling for better performance\n    let ticking = false;\n    let lastScrollTime = 0;\n    const THROTTLE_MS = 100; // Throttle to max 10 updates per second\n\n    const scrollListener = () => {\n      const now = Date.now();\n      if (!ticking && now - lastScrollTime > THROTTLE_MS) {\n        requestAnimationFrame(() => {\n          handleScroll();\n          ticking = false;\n          lastScrollTime = now;\n        });\n        ticking = true;\n      }\n    };\n    window.addEventListener('scroll', scrollListener, {\n      passive: true\n    });\n\n    // Optimized resize handler\n    const handleResize = () => {\n      // Skip for mobile\n      if (window.innerWidth <= 768) return;\n\n      // Update measurements and apply current mode\n      updateMeasurements();\n      handleScroll();\n    };\n\n    // Use ResizeObserver instead of window resize for better performance\n    const resizeObserver = new ResizeObserver(handleResize);\n    resizeObserver.observe(container);\n\n    // Initial setup\n    handleResize();\n    handleScroll();\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n      resizeObserver.disconnect();\n      // Remove will-change to free up resources\n      sidebar.style.willChange = 'auto';\n    };\n  }, [isInitialized, topOffset, sidebarMode, isMobile, containerRef, sidebarRef, sidebarWrapperRef]);\n\n  // Mobile nav scroll behavior with auto-hide - optimized with throttling\n  useEffect(() => {\n    if (!isInitialized || !isMobile || !mobileNavRef.current) {\n      return;\n    }\n    const mobileNav = mobileNavRef.current;\n\n    // Add will-change to hint browser about transforms\n    mobileNav.style.willChange = 'transform, opacity, background-color';\n\n    // Optimized scroll handler for mobile nav\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n\n      // Show navbar when scrolling up or at the top of the page\n      if (currentScrollY < lastScrollY || currentScrollY < 50) {\n        setMobileNavVisible(true);\n      } else {\n        // Hide navbar when scrolling down past the threshold\n        setMobileNavVisible(false);\n      }\n\n      // Update background opacity based on scroll position - one-time calculation\n      requestAnimationFrame(() => {\n        const bgOpacity = currentScrollY > 50 ? 0.95 : 0.7;\n        mobileNav.style.backgroundColor = `rgba(17, 17, 17, ${bgOpacity})`;\n        mobileNav.style.boxShadow = currentScrollY > 50 ? '0 2px 10px rgba(0, 0, 0, 0.1)' : 'none';\n      });\n\n      // Store current scroll position\n      setLastScrollY(currentScrollY);\n    };\n\n    // Throttled scroll event handling for better performance\n    let ticking = false;\n    let lastScrollTime = 0;\n    const THROTTLE_MS = 100; // Throttle to max 10 updates per second\n\n    const scrollListener = () => {\n      const now = Date.now();\n      if (!ticking && now - lastScrollTime > THROTTLE_MS) {\n        requestAnimationFrame(() => {\n          handleScroll();\n          ticking = false;\n          lastScrollTime = now;\n        });\n        ticking = true;\n      }\n    };\n    window.addEventListener('scroll', scrollListener, {\n      passive: true\n    });\n\n    // Initial state - initialize once\n    mobileNav.style.backgroundColor = 'rgba(17, 17, 17, 0.7)';\n    mobileNav.style.boxShadow = 'none';\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n      // Remove will-change to free up resources when not needed\n      mobileNav.style.willChange = 'auto';\n    };\n  }, [isInitialized, isMobile, lastScrollY, mobileNavRef]);\n\n  // Stats section - extracted and memoized\n  const renderStats = useMemo(() => {\n    if (!showStats || !person.stats || person.stats.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(StatsContainer, {\n      isMobile: isMobile,\n      children: person.stats.map((stat, statIdx) => /*#__PURE__*/_jsxDEV(StatItemComponent, {\n        stat: stat,\n        isMobile: isMobile,\n        highlightColor: highlightColor,\n        textColor: textColor\n      }, statIdx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 859,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 7\n    }, this);\n  }, [showStats, person.stats, isMobile, highlightColor, textColor]);\n\n  // Section renderers - separated for clarity and optimization\n  const renderAboutSection = useMemo(() => {\n    if (!person.bio) return null;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [person.bio.map((paragraph, idx) => /*#__PURE__*/_jsxDEV(SectionContentComponent, {\n        content: paragraph,\n        textColor: textColor,\n        fontFamily: fontFamily\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 11\n      }, this)), renderStats]\n    }, void 0, true);\n  }, [person.bio, renderStats, textColor, fontFamily]);\n  const renderExperienceSection = useMemo(() => {\n    if (!person.experience) {\n      return /*#__PURE__*/_jsxDEV(SectionContentComponent, {\n        content: \"Throughout my career, I've specialized in developing software systems that seamlessly integrate front-end experiences with robust back-end architectures. My experience spans various domains, from interactive media to data visualization systems.\",\n        textColor: textColor,\n        fontFamily: fontFamily\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 894,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: person.experience.map((item, expIdx) => /*#__PURE__*/_jsxDEV(SectionContentComponent, {\n        content: item.content,\n        textColor: textColor,\n        fontFamily: fontFamily\n      }, expIdx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  }, [person.experience, textColor, fontFamily]);\n  const renderProjectsSection = useMemo(() => {\n    if (!person.projects) return null;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: person.projects.map((item, projIdx) => /*#__PURE__*/_jsxDEV(SectionContentComponent, {\n        content: item.content,\n        textColor: textColor,\n        fontFamily: fontFamily\n      }, projIdx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 922,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  }, [person.projects, textColor, fontFamily]);\n\n  // Main section renderer - unified logic for any section type using memoization\n  const getRenderedSection = useCallback(sectionId => {\n    // Find section from navigationItems\n    const section = navigationItems.find(item => item.id === sectionId);\n    if (!section) return null;\n    if (section.content) {\n      return /*#__PURE__*/_jsxDEV(SectionContentComponent, {\n        content: section.content,\n        textColor: textColor,\n        fontFamily: fontFamily\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 941,\n        columnNumber: 9\n      }, this);\n    }\n    switch (sectionId) {\n      case 'about':\n        return renderAboutSection;\n      case 'experience':\n        return renderExperienceSection;\n      case 'projects':\n        return renderProjectsSection;\n      default:\n        return null;\n    }\n  }, [navigationItems, renderAboutSection, renderExperienceSection, renderProjectsSection, textColor, fontFamily]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isMobile && /*#__PURE__*/_jsxDEV(MobileNav, {\n      ref: mobileNavRef,\n      visible: mobileNavVisible,\n      children: navigationItems.map(navItem => /*#__PURE__*/_jsxDEV(MobileNavItemComponent, {\n        navItem: navItem,\n        activeSection: activeSection,\n        highlightColor: highlightColor,\n        textColor: textColor,\n        minLineWidth: minLineWidth,\n        maxLineWidth: maxLineWidth\n      }, navItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 977,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 972,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      ref: containerRef,\n      isMobile: isMobile,\n      initial: {\n        opacity: 0,\n        y: (_animationConfig$init = animationConfig === null || animationConfig === void 0 ? void 0 : animationConfig.initialY) !== null && _animationConfig$init !== void 0 ? _animationConfig$init : 30\n      },\n      animate: controls,\n      children: [!isMobile && /*#__PURE__*/_jsxDEV(SidebarWrapper, {\n        ref: sidebarWrapperRef,\n        width: layoutValues.sidebarWidth,\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {\n          ref: sidebarRef,\n          children: [/*#__PURE__*/_jsxDEV(ProfileInfo, {\n            person: person,\n            isMobile: isMobile,\n            highlightColor: highlightColor,\n            textColor: textColor,\n            fontFamily: fontFamily\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1004,\n            columnNumber: 15\n          }, this), !isMobile && /*#__PURE__*/_jsxDEV(NavLinks, {\n            ref: navLinksRef,\n            children: navigationItems.map(navItem => /*#__PURE__*/_jsxDEV(NavLinkComponent, {\n              navItem: navItem,\n              activeSection: activeSection,\n              expandedNavItem: expandedNavItem,\n              onMouseEnter: handleNavItemHover,\n              onMouseLeave: handleNavItemLeave,\n              highlightColor: highlightColor,\n              textColor: textColor,\n              minLineWidth: minLineWidth,\n              maxLineWidth: maxLineWidth\n            }, navItem.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1016,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1014,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1003,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 998,\n        columnNumber: 11\n      }, this), isMobile && /*#__PURE__*/_jsxDEV(ProfileInfo, {\n        person: person,\n        isMobile: isMobile,\n        highlightColor: highlightColor,\n        textColor: textColor,\n        fontFamily: fontFamily\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1037,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ContentSection, {\n        ref: contentRef,\n        isMobile: isMobile,\n        width: layoutValues.contentWidth,\n        contentPadding: layoutValues.contentPadding,\n        children: [navigationItems.map((section, index) => {\n          if (index >= sectionRefs.length) return null;\n          return /*#__PURE__*/_jsxDEV(Section, {\n            ref: sectionRefs[index],\n            \"data-section\": section.id,\n            id: section.id,\n            isMobile: isMobile,\n            children: getRenderedSection(section.id)\n          }, section.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1058,\n            columnNumber: 15\n          }, this);\n        }), additionalSections.map((section, index) => /*#__PURE__*/_jsxDEV(Section, {\n          isMobile: isMobile,\n          children: [section.title && /*#__PURE__*/_jsxDEV(SectionTitle, {\n            highlightColor: highlightColor,\n            children: section.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1077,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(SectionContentComponent, {\n            content: section.content,\n            textColor: textColor,\n            fontFamily: fontFamily\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1081,\n            columnNumber: 15\n          }, this)]\n        }, `additional-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1072,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1047,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 990,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n// Using memo to prevent unnecessary re-renders\n_s2(PersonProfileCard, \"tEe6Jq45Qq/Zn1qhBZzC3S5MRjs=\", false, function () {\n  return [useAnimation, useInView];\n});\n_c35 = PersonProfileCard;\nexport default _c36 = /*#__PURE__*/React.memo(PersonProfileCard);\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28, _c29, _c30, _c31, _c32, _c33, _c34, _c35, _c36;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SidebarWrapper\");\n$RefreshReg$(_c3, \"Sidebar\");\n$RefreshReg$(_c4, \"ContentSection\");\n$RefreshReg$(_c5, \"Section\");\n$RefreshReg$(_c6, \"SectionTitle\");\n$RefreshReg$(_c7, \"ProfileInfoContainer\");\n$RefreshReg$(_c8, \"ProfileName\");\n$RefreshReg$(_c9, \"ProfileRole\");\n$RefreshReg$(_c10, \"ProfileTagline\");\n$RefreshReg$(_c11, \"NavLinks\");\n$RefreshReg$(_c12, \"NavLinkContainer\");\n$RefreshReg$(_c13, \"NavLine\");\n$RefreshReg$(_c14, \"NavButton\");\n$RefreshReg$(_c15, \"MobileNav\");\n$RefreshReg$(_c16, \"MobileNavItem\");\n$RefreshReg$(_c17, \"MobileNavButton\");\n$RefreshReg$(_c18, \"MobileNavLine\");\n$RefreshReg$(_c19, \"MobileNavLabel\");\n$RefreshReg$(_c20, \"StatsContainer\");\n$RefreshReg$(_c21, \"StatItem\");\n$RefreshReg$(_c22, \"StatValue\");\n$RefreshReg$(_c23, \"StatLabel\");\n$RefreshReg$(_c24, \"SectionContent\");\n$RefreshReg$(_c25, \"ProfileInfo$React.memo\");\n$RefreshReg$(_c26, \"ProfileInfo\");\n$RefreshReg$(_c27, \"MobileNavItemComponent$React.memo\");\n$RefreshReg$(_c28, \"MobileNavItemComponent\");\n$RefreshReg$(_c29, \"NavLinkComponent$React.memo\");\n$RefreshReg$(_c30, \"NavLinkComponent\");\n$RefreshReg$(_c31, \"StatItemComponent$React.memo\");\n$RefreshReg$(_c32, \"StatItemComponent\");\n$RefreshReg$(_c33, \"SectionContentComponent$React.memo\");\n$RefreshReg$(_c34, \"SectionContentComponent\");\n$RefreshReg$(_c35, \"PersonProfileCard\");\n$RefreshReg$(_c36, \"%default%\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","useMemo","motion","useInView","useAnimation","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","props","isMobile","_c","SidebarWrapper","width","_c2","Sidebar","_c3","ContentSection","contentPadding","_c4","Section","_c5","SectionTitle","h3","highlightColor","_c6","ProfileInfoContainer","_c7","ProfileName","h1","_c8","ProfileRole","h2","color","fontFamily","_c9","ProfileTagline","p","_c10","NavLinks","_c11","NavLinkContainer","_c12","NavLine","expanded","maxWidth","minWidth","activeColor","inactiveColor","_c13","NavButton","button","active","_c14","MobileNav","visible","_c15","MobileNavItem","_c16","MobileNavButton","_c17","MobileNavLine","_c18","MobileNavLabel","_c19","StatsContainer","_c20","StatItem","isHovering","_c21","StatValue","_c22","StatLabel","_c23","SectionContent","_c24","ProfileInfo","memo","_c25","person","textColor","children","name","fileName","_jsxFileName","lineNumber","columnNumber","role","tagline","_c26","MobileNavItemComponent","_c27","navItem","activeSection","minLineWidth","maxLineWidth","id","label","_c28","NavLinkComponent","_c29","expandedNavItem","onMouseEnter","onMouseLeave","isActive","_c30","StatItemComponent","_s","_c31","stat","setIsHovering","handleMouseEnter","handleMouseLeave","value","_c32","SectionContentComponent","_c33","content","_c34","PersonProfileCard","animationConfig","threshold","once","initialY","duration","additionalSections","onSectionChange","topOffset","showStats","navigationItems","contentCompression","_s2","_navigationItems$","_animationConfig$thre","_animationConfig$once","_animationConfig$init","setActiveSection","setExpandedNavItem","sidebarMode","setSidebarMode","isInitialized","setIsInitialized","setIsMobile","mobileNavVisible","setMobileNavVisible","lastScrollY","setLastScrollY","containerRef","sidebarRef","contentRef","sidebarWrapperRef","mobileNavRef","navLinksRef","section0Ref","section1Ref","section2Ref","section3Ref","section4Ref","section5Ref","section6Ref","section7Ref","controls","sectionRefs","sectionRefsMap","refsMap","forEach","item","index","length","layoutValues","compressionFactor","Math","min","max","sidebarWidth","contentWidth","isInView","checkMobile","window","innerWidth","scrollToSection","sectionId","sectionRef","current","offsetTop","getBoundingClientRect","top","pageYOffset","mobileNavHeight","offsetHeight","scrollTo","behavior","scrollIntoView","block","handleNavEvent","e","target","closest","getAttribute","preventDefault","handleNavItemHover","section","handleNavItemLeave","addEventListener","removeEventListener","mobileNavElement","navLinksElement","_animationConfig$dura","_animationConfig$dura2","start","opacity","y","transition","ease","delay","timeout","setTimeout","clearTimeout","sectionElements","Object","values","map","ref","filter","Boolean","options","root","rootMargin","callback","entries","visibleEntries","entry","isIntersecting","sort","a","b","intersectionRatio","topEntry","observer","IntersectionObserver","element","observe","disconnect","container","sidebar","sidebarWrapper","style","willChange","measurements","containerRect","wrapperRect","sidebarHeight","updateMeasurements","handleScroll","startFixPoint","endFixPoint","bottom","newMode","requestAnimationFrame","position","left","ticking","lastScrollTime","THROTTLE_MS","scrollListener","now","Date","passive","handleResize","resizeObserver","ResizeObserver","mobileNav","currentScrollY","scrollY","bgOpacity","backgroundColor","boxShadow","renderStats","stats","statIdx","renderAboutSection","bio","paragraph","idx","renderExperienceSection","experience","expIdx","renderProjectsSection","projects","projIdx","getRenderedSection","find","initial","animate","title","_c35","_c36","$RefreshReg$"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/core/effects/holdereffects/PersonProfileCard.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect, useCallback, useMemo } from 'react';\nimport { motion, useInView, useAnimation } from 'framer-motion';\nimport styled from 'styled-components';\n\n// Note: This implementation assumes you have the 'styled-components' package installed\n\n// Styled Components\nconst Container = styled(motion.div)`\n  display: flex;\n  flex-direction: ${props => props.isMobile ? 'column' : 'row'};\n  width: 100%;\n  max-width: 1300px;\n  margin: 0 auto;\n  min-height: ${props => props.isMobile ? 'auto' : '70vh'};\n  position: relative;\n  padding-top: ${props => props.isMobile ? '80px' : '0'};\n`;\n\nconst SidebarWrapper = styled.div`\n  width: ${props => `${props.width}%`};\n  position: relative;\n`;\n\nconst Sidebar = styled.div`\n  padding: 3rem 2rem 2rem 0;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  position: relative;\n  top: 0;\n`;\n\nconst ContentSection = styled.div`\n  width: ${props => props.isMobile ? '100%' : `${props.width}%`};\n  padding: ${props => props.isMobile ? \n    '2rem 1.5rem' : \n    `3rem 0 2rem ${props.contentPadding}rem`};\n  margin-left: ${props => props.isMobile ? '0' : 'auto'};\n`;\n\nconst Section = styled.div`\n  margin-bottom: 3rem;\n  scroll-margin-top: ${props => props.isMobile ? '80px' : '2rem'};\n`;\n\nconst SectionTitle = styled.h3`\n  font-size: 1.4rem;\n  color: ${props => props.highlightColor};\n  margin-bottom: 1rem;\n  font-weight: 300;\n`;\n\nconst ProfileInfoContainer = styled.div`\n  margin-bottom: 2rem;\n  padding-left: 5px;\n  text-align: ${props => props.isMobile ? 'center' : 'left'};\n  width: 100%;\n`;\n\nconst ProfileName = styled.h1`\n  font-weight: 300;\n  letter-spacing: 0.05em;\n  margin-bottom: 0.5rem;\n  font-size: ${props => props.isMobile ? '2.2rem' : '2.8rem'};\n  color: ${props => props.highlightColor};\n`;\n\nconst ProfileRole = styled.h2`\n  font-weight: 300;\n  margin-bottom: 2rem;\n  letter-spacing: 0.05em;\n  font-style: italic;\n  font-size: ${props => props.isMobile ? '1.1rem' : '1.2rem'};\n  color: ${props => props.color};\n  font-family: ${props => props.fontFamily};\n`;\n\nconst ProfileTagline = styled.p`\n  line-height: 1.6;\n  margin-bottom: 3rem;\n  font-weight: 300;\n  font-size: 1.1rem;\n  max-width: ${props => props.isMobile ? '100%' : '90%'};\n  color: ${props => props.color};\n  font-family: ${props => props.fontFamily};\n`;\n\nconst NavLinks = styled.div`\n  margin-top: 3rem;\n`;\n\nconst NavLinkContainer = styled.div`\n  position: relative;\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n`;\n\nconst NavLine = styled.div`\n  position: absolute;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  height: 0.75px;\n  width: ${props => props.expanded ? `${props.maxWidth}px` : `${props.minWidth}px`};\n  background-color: ${props => props.expanded ? props.activeColor : props.inactiveColor};\n  transition: width 0.3s ease, background-color 0.3s ease;\n`;\n\nconst NavButton = styled.button`\n  position: relative;\n  display: block;\n  padding: 0.5rem 0 0.5rem 40px;\n  font-size: 0.85rem;\n  letter-spacing: 0.1em;\n  background: transparent;\n  border: none;\n  text-align: left;\n  outline: none;\n  box-shadow: none;\n  transition: color 0.5s ease, transform 0.5s ease;\n  cursor: pointer;\n  width: fit-content;\n  color: ${props => props.active ? props.activeColor : props.inactiveColor};\n  transform: ${props => props.active ? 'translateX(10px)' : 'none'};\n`;\n\nconst MobileNav = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  z-index: 100;\n  backdrop-filter: blur(10px);\n  transition: all 0.3s ease;\n  padding: 0.75rem 1rem;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  transform: ${props => props.visible ? 'translateY(0)' : 'translateY(-100%)'};\n  opacity: ${props => props.visible ? 1 : 0};\n`;\n\nconst MobileNavItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst MobileNavButton = styled.button`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0.5rem;\n  outline: none;\n`;\n\nconst MobileNavLine = styled.div`\n  width: ${props => props.active ? `${props.maxWidth}px` : `${props.minWidth}px`};\n  height: 2px;\n  background-color: ${props => props.active ? props.activeColor : props.inactiveColor};\n  transition: width 0.3s ease, background-color 0.3s ease;\n  margin-bottom: 0.5rem;\n`;\n\nconst MobileNavLabel = styled.div`\n  font-size: 0.75rem;\n  color: ${props => props.active ? props.activeColor : props.inactiveColor};\n  letter-spacing: 0.1em;\n  transition: color 0.3s ease;\n`;\n\nconst StatsContainer = styled.div`\n  display: flex;\n  justify-content: ${props => props.isMobile ? 'center' : 'space-between'};\n  flex-wrap: wrap;\n  margin-top: 3rem;\n  width: 100%;\n  gap: ${props => props.isMobile ? '2rem' : '0'};\n`;\n\nconst StatItem = styled.div`\n  flex: ${props => props.isMobile ? '0 0 auto' : '1'};\n  text-align: center;\n  padding: 0 1rem;\n  min-width: ${props => props.isMobile ? '140px' : '100px'};\n  transition: transform 0.3s ease;\n  transform: ${props => props.isHovering ? 'translateY(-5px)' : 'none'};\n`;\n\nconst StatValue = styled.div`\n  font-size: ${props => props.isMobile ? '2.2rem' : '2.5rem'};\n  font-weight: 100;\n  color: ${props => props.color};\n  margin-bottom: 0.5rem;\n`;\n\nconst StatLabel = styled.div`\n  font-size: 0.85rem;\n  color: ${props => props.color};\n  text-transform: uppercase;\n  letter-spacing: 0.1em;\n`;\n\nconst SectionContent = styled.p`\n  line-height: 1.8;\n  margin-bottom: 1.5rem;\n  font-weight: 300;\n  font-size: 1rem;\n  color: ${props => props.color};\n  font-family: ${props => props.fontFamily};\n`;\n\n// Component for ProfileInfo\nconst ProfileInfo = React.memo(({ \n  person, \n  isMobile, \n  highlightColor, \n  textColor, \n  fontFamily \n}) => {\n  return (\n    <ProfileInfoContainer isMobile={isMobile}>\n      <ProfileName \n        isMobile={isMobile} \n        highlightColor={highlightColor}\n      >\n        {person.name}\n      </ProfileName>\n      \n      <ProfileRole \n        isMobile={isMobile} \n        color={`${highlightColor}B3`} \n        fontFamily={fontFamily}\n      >\n        {person.role}\n      </ProfileRole>\n      \n      {person.tagline && (\n        <ProfileTagline \n          isMobile={isMobile} \n          color={textColor} \n          fontFamily={fontFamily}\n        >\n          {person.tagline}\n        </ProfileTagline>\n      )}\n    </ProfileInfoContainer>\n  );\n});\n\n// Component for MobileNavItem\nconst MobileNavItemComponent = React.memo(({ \n  navItem, \n  activeSection, \n  highlightColor, \n  textColor,\n  minLineWidth,\n  maxLineWidth \n}) => {\n  return (\n    <MobileNavItem>\n      <MobileNavButton data-section-id={navItem.id}>\n        <MobileNavLine \n          active={activeSection === navItem.id}\n          activeColor={highlightColor}\n          inactiveColor={`${highlightColor}80`}\n          minWidth={minLineWidth}\n          maxWidth={maxLineWidth}\n        />\n        <MobileNavLabel \n          active={activeSection === navItem.id}\n          activeColor={highlightColor}\n          inactiveColor={textColor}\n        >\n          {navItem.label}\n        </MobileNavLabel>\n      </MobileNavButton>\n    </MobileNavItem>\n  );\n});\n\n// Component for NavLink\nconst NavLinkComponent = React.memo(({ \n  navItem, \n  activeSection, \n  expandedNavItem,\n  onMouseEnter,\n  onMouseLeave, \n  highlightColor, \n  textColor,\n  minLineWidth,\n  maxLineWidth \n}) => {\n  const isActive = activeSection === navItem.id || expandedNavItem === navItem.id;\n  \n  return (\n    <NavLinkContainer \n      data-section-id={navItem.id}\n      onMouseEnter={() => onMouseEnter(navItem.id)}\n      onMouseLeave={onMouseLeave}\n    >\n      <NavLine \n        expanded={isActive}\n        activeColor={`${highlightColor}E6`}\n        inactiveColor={`${highlightColor}80`}\n        minWidth={minLineWidth}\n        maxWidth={maxLineWidth}\n      />\n      <NavButton \n        active={isActive}\n        activeColor={highlightColor}\n        inactiveColor={textColor}\n      >\n        {navItem.label}\n      </NavButton>\n    </NavLinkContainer>\n  );\n});\n\n// Component for StatItem\nconst StatItemComponent = React.memo(({ \n  stat, \n  isMobile, \n  highlightColor, \n  textColor \n}) => {\n  const [isHovering, setIsHovering] = useState(false);\n\n  const handleMouseEnter = () => {\n    if (!isMobile) {\n      setIsHovering(true);\n    }\n  };\n\n  const handleMouseLeave = () => {\n    if (!isMobile) {\n      setIsHovering(false);\n    }\n  };\n\n  return (\n    <StatItem \n      isMobile={isMobile}\n      isHovering={isHovering}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <StatValue \n        isMobile={isMobile} \n        color={highlightColor}\n      >\n        {stat.value}\n      </StatValue>\n      <StatLabel color={`${textColor}CC`}>\n        {stat.label}\n      </StatLabel>\n    </StatItem>\n  );\n});\n\n// Component for SectionContent\nconst SectionContentComponent = React.memo(({ \n  content, \n  textColor, \n  fontFamily \n}) => {\n  if (!content) return null;\n  \n  if (typeof content === 'string') {\n    return (\n      <SectionContent \n        color={textColor}\n        fontFamily={fontFamily}\n      >\n        {content}\n      </SectionContent>\n    );\n  }\n  \n  return content;\n});\n\n/**\n * PersonProfileCard Component - Optimized Version with CSS-in-JS\n * \n * A profile card with a three-phase scroll behavior:\n * 1. Normal Flow: Initially scrolls with the page\n * 2. Fixed Position: Sticks to viewport when scrolling through content\n * 3. Release: Returns to normal flow after scrolling past component\n * \n * Mobile improvements:\n * - Navigation bar moves to top of screen\n * - Content spans full width for better readability\n * - Simplified navigation display\n * \n * Performance optimizations:\n * - Event delegation for navigation\n * - Extracted memoized child components\n * - Throttled scroll handlers\n * - ResizeObserver instead of window resize events\n * - Minimized style recalculations\n * - CSS-in-JS for better style organization\n */\nconst PersonProfileCard = ({\n  person,\n  animationConfig = {\n    threshold: 0.2,\n    once: true,\n    initialY: 30,\n    duration: 0.8\n  },\n  additionalSections = [],\n  onSectionChange = null,\n  topOffset = 100,\n  showStats = true,\n  highlightColor = '#bfad7f',\n  textColor = 'rgba(224, 224, 224, 0.7)',\n  minLineWidth = 10,\n  maxLineWidth = 40,\n  fontFamily = '\"Garamond\", \"Adobe Caslon Pro\", serif',\n  navigationItems = [\n    { id: 'about', label: 'ABOUT', content: null },\n    { id: 'experience', label: 'EXPERIENCE', content: null },\n    { id: 'projects', label: 'PROJECTS', content: null }\n  ],\n  contentCompression = 0\n}) => {\n  // State management\n  const [activeSection, setActiveSection] = useState(navigationItems[0]?.id || 'about');\n  const [expandedNavItem, setExpandedNavItem] = useState(null);\n  const [sidebarMode, setSidebarMode] = useState('normal'); // 'normal', 'fixed', or 'end'\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n  const [mobileNavVisible, setMobileNavVisible] = useState(false);\n  const [lastScrollY, setLastScrollY] = useState(0);\n\n  // Create individual refs at the top level of the component\n  const containerRef = useRef(null);\n  const sidebarRef = useRef(null);\n  const contentRef = useRef(null);\n  const sidebarWrapperRef = useRef(null);\n  const mobileNavRef = useRef(null);\n  const navLinksRef = useRef(null);\n  \n  // Create individual section refs\n  const section0Ref = useRef(null);\n  const section1Ref = useRef(null);\n  const section2Ref = useRef(null);\n  const section3Ref = useRef(null);\n  const section4Ref = useRef(null);\n  const section5Ref = useRef(null);\n  const section6Ref = useRef(null);\n  const section7Ref = useRef(null);\n  \n  // Animation controls\n  const controls = useAnimation();\n  \n  // Memoize the array of section refs so it's stable across renders\n  const sectionRefs = useMemo(() => [\n    section0Ref, section1Ref, section2Ref, section3Ref,\n    section4Ref, section5Ref, section6Ref, section7Ref\n  ], []);\n  \n  // Memoize the section refs map to avoid recreating on every render\n  const sectionRefsMap = useMemo(() => {\n    const refsMap = {};\n    navigationItems.forEach((item, index) => {\n      if (index < sectionRefs.length) {\n        refsMap[item.id] = sectionRefs[index];\n      }\n    });\n    return refsMap;\n  }, [navigationItems, sectionRefs]);\n  \n  // Memoize calculation of compression-based values\n  const layoutValues = useMemo(() => {\n    const compressionFactor = Math.min(Math.max(contentCompression, 0), 10) / 10;\n    return {\n      sidebarWidth: 45 - (compressionFactor * 5), // 35-40% range\n      contentWidth: 55 - (compressionFactor * 5), // 55-60% range\n      contentPadding: 2 + (compressionFactor * 2), // 2-4rem range\n    };\n  }, [contentCompression]);\n\n  // Animation inView detection\n  const isInView = useInView(containerRef, {\n    threshold: animationConfig?.threshold ?? 0.2,\n    once: animationConfig?.once ?? true\n  });\n\n  // Memoized function for checking if we're on mobile\n  const checkMobile = useCallback(() => {\n    setIsMobile(window.innerWidth <= 768);\n  }, []);\n\n  // Scroll to section handler - memoized with dependencies\n  const scrollToSection = useCallback((sectionId) => {\n    setActiveSection(sectionId);\n    \n    if (onSectionChange) {\n      onSectionChange(sectionId);\n    }\n    \n    const sectionRef = sectionRefsMap[sectionId];\n    if (sectionRef?.current) {\n      // Use different scroll methods for mobile vs desktop\n      if (isMobile) {\n        // For mobile, calculate position and use window.scrollTo\n        const offsetTop = sectionRef.current.getBoundingClientRect().top + window.pageYOffset;\n        const mobileNavHeight = mobileNavRef.current ? mobileNavRef.current.offsetHeight : 0;\n        \n        window.scrollTo({\n          top: offsetTop - mobileNavHeight - 20, // Additional offset for spacing\n          behavior: 'smooth'\n        });\n      } else {\n        // For desktop, use the original scrollIntoView method\n        sectionRef.current.scrollIntoView({ \n          behavior: 'smooth',\n          block: 'start'\n        });\n      }\n    }\n  }, [onSectionChange, sectionRefsMap, isMobile, mobileNavRef]);\n\n  // Event delegation for all navigation items\n  const handleNavEvent = useCallback((e) => {\n    const target = e.target.closest('[data-section-id]');\n    if (target) {\n      const sectionId = target.getAttribute('data-section-id');\n      if (sectionId) {\n        e.preventDefault();\n        scrollToSection(sectionId);\n      }\n    }\n  }, [scrollToSection]);\n  \n  // Navigation item hover handlers - memoized to prevent recreation on every render\n  const handleNavItemHover = useCallback((section) => {\n    if (!isMobile) {\n      setExpandedNavItem(section);\n    }\n  }, [isMobile]);\n  \n  const handleNavItemLeave = useCallback(() => {\n    if (!isMobile) {\n      setExpandedNavItem(null);\n    }\n  }, [isMobile]);\n\n  // Check mobile on mount and window resize\n  useEffect(() => {\n    // Initial check\n    checkMobile();\n    \n    // Add resize event listener\n    window.addEventListener('resize', checkMobile);\n    \n    return () => {\n      window.removeEventListener('resize', checkMobile);\n    };\n  }, [checkMobile]);\n\n  // Set up event delegation for navigation\n  useEffect(() => {\n    // Store current ref values at the time the effect runs\n    const mobileNavElement = mobileNavRef.current;\n    const navLinksElement = navLinksRef.current;\n    \n    // Add click event listeners with event delegation\n    if (mobileNavElement) {\n      mobileNavElement.addEventListener('click', handleNavEvent);\n    }\n    \n    if (navLinksElement) {\n      navLinksElement.addEventListener('click', handleNavEvent);\n    }\n    \n    return () => {\n      if (mobileNavElement) {\n        mobileNavElement.removeEventListener('click', handleNavEvent);\n      }\n      \n      if (navLinksElement) {\n        navLinksElement.removeEventListener('click', handleNavEvent);\n      }\n    };\n  }, [handleNavEvent]);\n\n  // Initial animation effect\n  useEffect(() => {\n    if (isInView) {\n      controls.start({ \n        opacity: 1, \n        y: 0,\n        transition: { \n          duration: animationConfig?.duration ?? 0.8,\n          ease: \"easeOut\",\n          delay: 0.1 // Small delay to ensure DOM is settled\n        }\n      });\n      \n      // Mark as initialized after animation completes\n      const timeout = setTimeout(() => {\n        setIsInitialized(true);\n      }, (animationConfig?.duration ?? 0.8) * 1000 + 100);\n      \n      return () => clearTimeout(timeout);\n    }\n  }, [isInView, controls, animationConfig?.duration]);\n\n  // Set up intersection observer for section detection - optimized with proper dependencies\n  useEffect(() => {\n    const sectionElements = Object.values(sectionRefsMap)\n      .map(ref => ref.current)\n      .filter(Boolean);\n    \n    if (sectionElements.length === 0) return;\n    \n    // Different margins for mobile and desktop to account for different layouts\n    const options = {\n      root: null,\n      rootMargin: isMobile \n        ? '-80px 0px -70% 0px'  // For mobile with fixed nav\n        : '-10% 0px -70% 0px',  // For desktop\n      threshold: [0, 0.25, 0.5, 0.75] // Multiple thresholds for smoother transitions\n    };\n    \n    const callback = (entries) => {\n      // Find the most visible section\n      const visibleEntries = entries.filter(entry => entry.isIntersecting);\n      \n      if (visibleEntries.length > 0) {\n        // Sort by visibility ratio, highest first\n        visibleEntries.sort((a, b) => b.intersectionRatio - a.intersectionRatio);\n        const topEntry = visibleEntries[0];\n        \n        const sectionId = topEntry.target.getAttribute('data-section');\n        if (sectionId && sectionId !== activeSection) {\n          setActiveSection(sectionId);\n          \n          if (onSectionChange) {\n            onSectionChange(sectionId);\n          }\n        }\n      }\n    };\n    \n    const observer = new IntersectionObserver(callback, options);\n    sectionElements.forEach(element => observer.observe(element));\n    \n    return () => observer.disconnect();\n  }, [activeSection, onSectionChange, sectionRefsMap, isMobile]);\n\n  // Implement scroll behavior for desktop - optimized by separating logic and reducing recalculations\n  useEffect(() => {\n    if (!isInitialized || !containerRef.current || !sidebarRef.current || \n        !sidebarWrapperRef.current || isMobile) {\n      return;\n    }\n    \n    const container = containerRef.current;\n    const sidebar = sidebarRef.current;\n    const sidebarWrapper = sidebarWrapperRef.current;\n    \n    // Add will-change to hint browser about upcoming transforms\n    sidebar.style.willChange = 'position, top, left, width, bottom';\n    \n    let measurements = {\n      containerRect: null,\n      wrapperRect: null,\n      sidebarHeight: null\n    };\n    \n    // Update measurements - only called when needed\n    const updateMeasurements = () => {\n      measurements.containerRect = container.getBoundingClientRect();\n      measurements.wrapperRect = sidebarWrapper.getBoundingClientRect();\n      measurements.sidebarHeight = sidebar.offsetHeight;\n    };\n    \n    // Get initial measurements\n    updateMeasurements();\n    \n    // Optimized scroll handler with throttling\n    const handleScroll = () => {\n      // Update measurements\n      updateMeasurements();\n      \n      // Calculate phase transition points\n      const { containerRect, sidebarHeight, wrapperRect } = measurements;\n      const startFixPoint = containerRect.top <= topOffset;\n      const endFixPoint = containerRect.bottom <= (sidebarHeight + topOffset);\n      \n      // Determine the current scroll phase\n      let newMode;\n      if (!startFixPoint) {\n        newMode = 'normal';\n      } else if (startFixPoint && !endFixPoint) {\n        newMode = 'fixed';\n      } else {\n        newMode = 'end';\n      }\n      \n      // Only update DOM if the mode changes\n      if (sidebarMode !== newMode) {\n        setSidebarMode(newMode);\n        \n        // Use requestAnimationFrame for style updates to optimize rendering\n        requestAnimationFrame(() => {\n          if (newMode === 'normal') {\n            // Phase 1: Normal flow\n            sidebar.style.position = 'relative';\n            sidebar.style.top = '0';\n            sidebar.style.left = '0';\n            sidebar.style.width = '';\n            sidebar.style.bottom = '';\n          } \n          else if (newMode === 'fixed') {\n            // Phase 2: Fixed position\n            sidebar.style.position = 'fixed';\n            sidebar.style.top = `${topOffset}px`;\n            sidebar.style.width = `${wrapperRect.width}px`;\n            sidebar.style.left = `${wrapperRect.left}px`;\n            sidebar.style.bottom = '';\n          } \n          else if (newMode === 'end') {\n            // Phase 3: End position\n            sidebar.style.position = 'absolute';\n            sidebar.style.top = 'auto';\n            sidebar.style.bottom = '0';\n            sidebar.style.left = '0';\n            sidebar.style.width = '';\n          }\n        });\n      }\n    };\n    \n    // Throttled scroll event handling for better performance\n    let ticking = false;\n    let lastScrollTime = 0;\n    const THROTTLE_MS = 100; // Throttle to max 10 updates per second\n    \n    const scrollListener = () => {\n      const now = Date.now();\n      if (!ticking && now - lastScrollTime > THROTTLE_MS) {\n        requestAnimationFrame(() => {\n          handleScroll();\n          ticking = false;\n          lastScrollTime = now;\n        });\n        ticking = true;\n      }\n    };\n    \n    window.addEventListener('scroll', scrollListener, { passive: true });\n    \n    // Optimized resize handler\n    const handleResize = () => {\n      // Skip for mobile\n      if (window.innerWidth <= 768) return;\n      \n      // Update measurements and apply current mode\n      updateMeasurements();\n      handleScroll();\n    };\n    \n    // Use ResizeObserver instead of window resize for better performance\n    const resizeObserver = new ResizeObserver(handleResize);\n    resizeObserver.observe(container);\n    \n    // Initial setup\n    handleResize();\n    handleScroll();\n    \n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n      resizeObserver.disconnect();\n      // Remove will-change to free up resources\n      sidebar.style.willChange = 'auto';\n    };\n  }, [isInitialized, topOffset, sidebarMode, isMobile, containerRef, sidebarRef, sidebarWrapperRef]);\n\n  // Mobile nav scroll behavior with auto-hide - optimized with throttling\n  useEffect(() => {\n    if (!isInitialized || !isMobile || !mobileNavRef.current) {\n      return;\n    }\n    \n    const mobileNav = mobileNavRef.current;\n    \n    // Add will-change to hint browser about transforms\n    mobileNav.style.willChange = 'transform, opacity, background-color';\n    \n    // Optimized scroll handler for mobile nav\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n      \n      // Show navbar when scrolling up or at the top of the page\n      if (currentScrollY < lastScrollY || currentScrollY < 50) {\n        setMobileNavVisible(true);\n      } else {\n        // Hide navbar when scrolling down past the threshold\n        setMobileNavVisible(false);\n      }\n      \n      // Update background opacity based on scroll position - one-time calculation\n      requestAnimationFrame(() => {\n        const bgOpacity = currentScrollY > 50 ? 0.95 : 0.7;\n        mobileNav.style.backgroundColor = `rgba(17, 17, 17, ${bgOpacity})`;\n        mobileNav.style.boxShadow = currentScrollY > 50 ? '0 2px 10px rgba(0, 0, 0, 0.1)' : 'none';\n      });\n      \n      // Store current scroll position\n      setLastScrollY(currentScrollY);\n    };\n    \n    // Throttled scroll event handling for better performance\n    let ticking = false;\n    let lastScrollTime = 0;\n    const THROTTLE_MS = 100; // Throttle to max 10 updates per second\n    \n    const scrollListener = () => {\n      const now = Date.now();\n      if (!ticking && now - lastScrollTime > THROTTLE_MS) {\n        requestAnimationFrame(() => {\n          handleScroll();\n          ticking = false;\n          lastScrollTime = now;\n        });\n        ticking = true;\n      }\n    };\n    \n    window.addEventListener('scroll', scrollListener, { passive: true });\n    \n    // Initial state - initialize once\n    mobileNav.style.backgroundColor = 'rgba(17, 17, 17, 0.7)';\n    mobileNav.style.boxShadow = 'none';\n    \n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n      // Remove will-change to free up resources when not needed\n      mobileNav.style.willChange = 'auto';\n    };\n  }, [isInitialized, isMobile, lastScrollY, mobileNavRef]);\n\n  // Stats section - extracted and memoized\n  const renderStats = useMemo(() => {\n    if (!showStats || !person.stats || person.stats.length === 0) return null;\n    \n    return (\n      <StatsContainer isMobile={isMobile}>\n        {person.stats.map((stat, statIdx) => (\n          <StatItemComponent\n            key={statIdx}\n            stat={stat}\n            isMobile={isMobile}\n            highlightColor={highlightColor}\n            textColor={textColor}\n          />\n        ))}\n      </StatsContainer>\n    );\n  }, [showStats, person.stats, isMobile, highlightColor, textColor]);\n\n  // Section renderers - separated for clarity and optimization\n  const renderAboutSection = useMemo(() => {\n    if (!person.bio) return null;\n    \n    return (\n      <>\n        {person.bio.map((paragraph, idx) => (\n          <SectionContentComponent\n            key={idx}\n            content={paragraph}\n            textColor={textColor}\n            fontFamily={fontFamily}\n          />\n        ))}\n        \n        {renderStats}\n      </>\n    );\n  }, [person.bio, renderStats, textColor, fontFamily]);\n\n  const renderExperienceSection = useMemo(() => {\n    if (!person.experience) {\n      return (\n        <SectionContentComponent\n          content=\"Throughout my career, I've specialized in developing software systems that seamlessly integrate front-end experiences with robust back-end architectures. My experience spans various domains, from interactive media to data visualization systems.\"\n          textColor={textColor}\n          fontFamily={fontFamily}\n        />\n      );\n    }\n    \n    return (\n      <>\n        {person.experience.map((item, expIdx) => (\n          <SectionContentComponent\n            key={expIdx}\n            content={item.content}\n            textColor={textColor}\n            fontFamily={fontFamily}\n          />\n        ))}\n      </>\n    );\n  }, [person.experience, textColor, fontFamily]);\n\n  const renderProjectsSection = useMemo(() => {\n    if (!person.projects) return null;\n    \n    return (\n      <>\n        {person.projects.map((item, projIdx) => (\n          <SectionContentComponent\n            key={projIdx}\n            content={item.content}\n            textColor={textColor}\n            fontFamily={fontFamily}\n          />\n        ))}\n      </>\n    );\n  }, [person.projects, textColor, fontFamily]);\n\n  // Main section renderer - unified logic for any section type using memoization\n  const getRenderedSection = useCallback((sectionId) => {\n    // Find section from navigationItems\n    const section = navigationItems.find(item => item.id === sectionId);\n    if (!section) return null;\n    \n    if (section.content) {\n      return (\n        <SectionContentComponent\n          content={section.content}\n          textColor={textColor}\n          fontFamily={fontFamily}\n        />\n      );\n    }\n    \n    switch (sectionId) {\n      case 'about':\n        return renderAboutSection;\n      case 'experience':\n        return renderExperienceSection;\n      case 'projects':\n        return renderProjectsSection;\n      default:\n        return null;\n    }\n  }, [\n    navigationItems, \n    renderAboutSection, \n    renderExperienceSection, \n    renderProjectsSection, \n    textColor, \n    fontFamily\n  ]);\n\n  return (\n    <>\n      {/* Mobile navigation with event delegation */}\n      {isMobile && (\n        <MobileNav\n          ref={mobileNavRef}\n          visible={mobileNavVisible}\n        >\n          {navigationItems.map((navItem) => (\n            <MobileNavItemComponent\n              key={navItem.id}\n              navItem={navItem}\n              activeSection={activeSection}\n              highlightColor={highlightColor}\n              textColor={textColor}\n              minLineWidth={minLineWidth}\n              maxLineWidth={maxLineWidth}\n            />\n          ))}\n        </MobileNav>\n      )}\n      \n      <Container \n        ref={containerRef}\n        isMobile={isMobile}\n        initial={{ opacity: 0, y: animationConfig?.initialY ?? 30 }}\n        animate={controls}\n      >\n        {/* Left sidebar wrapper - desktop only */}\n        {!isMobile && (\n          <SidebarWrapper \n            ref={sidebarWrapperRef}\n            width={layoutValues.sidebarWidth}\n          >\n            {/* Profile sidebar */}\n            <Sidebar ref={sidebarRef}>\n              <ProfileInfo\n                person={person}\n                isMobile={isMobile}\n                highlightColor={highlightColor}\n                textColor={textColor}\n                fontFamily={fontFamily}\n              />\n              \n              {/* Navigation links with event delegation */}\n              {!isMobile && (\n                <NavLinks ref={navLinksRef}>\n                  {navigationItems.map((navItem) => (\n                    <NavLinkComponent\n                      key={navItem.id}\n                      navItem={navItem}\n                      activeSection={activeSection}\n                      expandedNavItem={expandedNavItem}\n                      onMouseEnter={handleNavItemHover}\n                      onMouseLeave={handleNavItemLeave}\n                      highlightColor={highlightColor}\n                      textColor={textColor}\n                      minLineWidth={minLineWidth}\n                      maxLineWidth={maxLineWidth}\n                    />\n                  ))}\n                </NavLinks>\n              )}\n            </Sidebar>\n          </SidebarWrapper>\n        )}\n        \n        {/* Profile Info for mobile */}\n        {isMobile && (\n          <ProfileInfo\n            person={person}\n            isMobile={isMobile}\n            highlightColor={highlightColor}\n            textColor={textColor}\n            fontFamily={fontFamily}\n          />\n        )}\n        \n        {/* Right content section */}\n        <ContentSection \n          ref={contentRef}\n          isMobile={isMobile}\n          width={layoutValues.contentWidth}\n          contentPadding={layoutValues.contentPadding}\n        >\n          {/* Render sections based on navigationItems */}\n          {navigationItems.map((section, index) => {\n            if (index >= sectionRefs.length) return null;\n            \n            return (\n              <Section \n                key={section.id}\n                ref={sectionRefs[index]}\n                data-section={section.id}\n                id={section.id}\n                isMobile={isMobile}\n              >\n                {getRenderedSection(section.id)}\n              </Section>\n            );\n          })}\n          \n          {/* Additional sections */}\n          {additionalSections.map((section, index) => (\n            <Section \n              key={`additional-${index}`}\n              isMobile={isMobile}\n            >\n              {section.title && (\n                <SectionTitle highlightColor={highlightColor}>\n                  {section.title}\n                </SectionTitle>\n              )}\n              <SectionContentComponent\n                content={section.content}\n                textColor={textColor}\n                fontFamily={fontFamily}\n              />\n            </Section>\n          ))}\n        </ContentSection>\n      </Container>\n    </>\n  );\n};\n\n// Using memo to prevent unnecessary re-renders\nexport default React.memo(PersonProfileCard);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}