{"ast":null,"code":"var _jsxFileName = \"/home/valeria/Documents/Crucible/frontend/src/components/core/IntroSequence.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\nimport './introSequence.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IntroSequence = ({\n  showIntro,\n  setShowIntro,\n  setIsLoaded\n}) => {\n  _s();\n  // All refs must be defined at the top level\n  const moonCanvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const sequenceStartRef = useRef(null);\n\n  // Component state\n  const [quoteVisible, setQuoteVisible] = useState(false);\n  const [currentQuote, setCurrentQuote] = useState(null);\n\n  // Animation timing constants - defined outside the effect\n  const timings = {\n    showQuote: 350,\n    startDimming: 2000,\n    hideQuote: 2400,\n    fadeOutIntro: 2600,\n    completeIntro: 3000\n  };\n\n  // Use useMemo to prevent the quotes array from causing dependency issues\n  const quotes = useMemo(() => [{\n    text: \"My candle burns at both ends;\\nIt will not last the night;\\nBut, ah my foes, and\\noh my friend â€”\\nit gives a\\nlovely\\nlight\",\n    author: \"Edna St. Vincent Millay\"\n  }, {\n    text: \"Out of the ash\\nI rise with my red hair\\nAnd I eat men like air.\",\n    author: \"Sylvia Plath\"\n  }, {\n    text: \"And he will come this, light insouciant lover,\\nblowing his bugles to a rising morrow,\\nto rend her veil, her wizened mind uncover,\\nto leave her conquered by life's stinging sorrow\",\n    author: \"Virginia McCormick\"\n  }, {\n    text: \"Hope is the thing with feathers\\nThat perches in the soul,\\nAnd sings the tune without the words,\\nAnd never stops at all.\",\n    author: \"Emily Dickinson\"\n  }, {\n    text: \"I have gone out, a possessed witch,\\nhaunting the black air, braver at night;\\ndreaming evil, I have done my hitch\\nover the plain houses, light by light.\",\n    author: \"Anne Sexton\"\n  }], []);\n\n  // Initialize the quote when the intro starts\n  useEffect(() => {\n    if (showIntro) {\n      // Select a random quote\n      const randomIndex = Math.floor(Math.random() * quotes.length);\n      setCurrentQuote(quotes[randomIndex]);\n    }\n  }, [showIntro, quotes]);\n\n  // Skip intro handler - using useCallback to maintain consistent reference\n  const handleSkipIntro = useCallback(() => {\n    // Cancel any running animation\n    if (animationRef.current) {\n      cancelAnimationFrame(animationRef.current);\n      animationRef.current = null;\n    }\n    setShowIntro(false);\n    setIsLoaded(true);\n  }, [setShowIntro, setIsLoaded]);\n\n  // Main animation and sequence control\n  useEffect(() => {\n    if (!showIntro || !moonCanvasRef.current) return;\n\n    // Set the start time at the beginning of the animation\n    sequenceStartRef.current = Date.now();\n\n    // Canvas setup\n    const canvas = moonCanvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n    const radius = 70;\n\n    // Animation variables\n    let rotation = 0;\n    let brightness = 1.0;\n    let lastTimestamp = null;\n\n    // Comet trail parameters\n    const trailLength = 120; // degrees\n    const trailSegments = 20;\n\n    // Draw a single frame of the comet animation\n    const drawComet = currentBrightness => {\n      if (!ctx) return;\n\n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Calculate head position\n      const headAngle = rotation * Math.PI / 180;\n      const headX = centerX + radius * Math.cos(headAngle);\n      const headY = centerY + radius * Math.sin(headAngle);\n\n      // Draw trail segments\n      for (let i = 0; i < trailSegments; i++) {\n        // Calculate segment positions\n        const segmentAngle = (rotation - i * (trailLength / trailSegments)) % 360 * Math.PI / 180;\n        const segmentX = centerX + radius * Math.cos(segmentAngle);\n        const segmentY = centerY + radius * Math.sin(segmentAngle);\n        const nextSegmentAngle = (rotation - (i + 1) * (trailLength / trailSegments)) % 360 * Math.PI / 180;\n        const nextSegmentX = centerX + radius * Math.cos(nextSegmentAngle);\n        const nextSegmentY = centerY + radius * Math.sin(nextSegmentAngle);\n\n        // Calculate segment opacity based on position and brightness\n        const segmentOpacity = 0.8 * (1 - i / trailSegments) * currentBrightness;\n\n        // Draw trail segment\n        ctx.beginPath();\n        ctx.moveTo(segmentX, segmentY);\n        ctx.lineTo(nextSegmentX, nextSegmentY);\n\n        // Width variation along the trail\n        const segmentWidth = 2.5 * (1 - i / trailSegments) + 0.5;\n\n        // Set shadow/glow\n        ctx.shadowColor = `rgba(255, 253, 227, ${segmentOpacity})`;\n        ctx.shadowBlur = (10 * (1 - i / trailSegments) + 5) * currentBrightness;\n\n        // Set line style\n        ctx.strokeStyle = `rgba(191, 173, 127, ${segmentOpacity})`;\n        ctx.lineWidth = segmentWidth;\n        ctx.lineCap = 'round';\n        ctx.stroke();\n      }\n\n      // Draw comet head (3 layers for effect)\n      ctx.shadowColor = `rgba(255, 253, 227, ${0.9 * currentBrightness})`;\n      ctx.shadowBlur = 20 * currentBrightness;\n\n      // Outer glow\n      ctx.beginPath();\n      ctx.arc(headX, headY, 4, 0, Math.PI * 2);\n      ctx.fillStyle = `rgba(255, 253, 227, ${0.7 * currentBrightness})`;\n      ctx.fill();\n\n      // Middle layer\n      ctx.beginPath();\n      ctx.arc(headX, headY, 2.5, 0, Math.PI * 2);\n      ctx.fillStyle = `rgba(255, 253, 227, ${0.9 * currentBrightness})`;\n      ctx.fill();\n\n      // Bright center\n      ctx.beginPath();\n      ctx.arc(headX, headY, 1, 0, Math.PI * 2);\n      ctx.fillStyle = `rgba(255, 255, 255, ${currentBrightness})`;\n      ctx.fill();\n    };\n\n    // Main animation function\n    const animate = timestamp => {\n      // Ensure we have a valid start time reference\n      if (!sequenceStartRef.current) {\n        sequenceStartRef.current = Date.now();\n      }\n\n      // Calculate elapsed time from our stored start time\n      const elapsed = Date.now() - sequenceStartRef.current;\n\n      // Handle sequence timing events\n      if (elapsed >= timings.showQuote && !quoteVisible) {\n        setQuoteVisible(true);\n      }\n      if (elapsed >= timings.hideQuote && quoteVisible) {\n        setQuoteVisible(false);\n      }\n      if (elapsed >= timings.fadeOutIntro) {\n        const introElement = document.querySelector('.intro-sequence');\n        if (introElement && !introElement.classList.contains('fade-out')) {\n          introElement.classList.add('fade-out');\n        }\n      }\n      if (elapsed >= timings.completeIntro) {\n        // End the animation and sequence\n        cancelAnimationFrame(animationRef.current);\n        animationRef.current = null;\n        setShowIntro(false);\n        setIsLoaded(true);\n        return;\n      }\n\n      // Safety check - if animation runs too long, force terminate\n      if (elapsed > timings.completeIntro + 1000) {\n        console.warn('Animation exceeded maximum duration, forcing termination');\n        cancelAnimationFrame(animationRef.current);\n        animationRef.current = null;\n        setShowIntro(false);\n        setIsLoaded(true);\n        return;\n      }\n\n      // Calculate animation delta time\n      if (!lastTimestamp) lastTimestamp = timestamp;\n      const deltaTime = timestamp - lastTimestamp;\n      lastTimestamp = timestamp;\n\n      // Update rotation\n      const speed = 0.12 * deltaTime;\n      rotation = (rotation + speed) % 360;\n\n      // Calculate brightness based on animation phase\n      if (elapsed >= timings.startDimming) {\n        // Smoothly reduce brightness until fadeOutIntro\n        const dimProgress = (elapsed - timings.startDimming) / (timings.fadeOutIntro - timings.startDimming);\n        brightness = Math.max(0, 1 - dimProgress);\n      }\n\n      // Draw current frame\n      drawComet(brightness);\n\n      // Continue animation\n      animationRef.current = requestAnimationFrame(animate);\n    };\n\n    // Start the animation\n    animationRef.current = requestAnimationFrame(animate);\n\n    // Clean up function\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n        animationRef.current = null;\n      }\n\n      // Force cleanup even if animation did not complete properly\n      if (showIntro) {\n        setTimeout(() => {\n          setShowIntro(false);\n          setIsLoaded(true);\n        }, 0);\n      }\n    };\n  }, [showIntro, quoteVisible, setQuoteVisible, setShowIntro, setIsLoaded, timings]);\n\n  // Format quote with line breaks\n  const formatQuote = text => {\n    return text.split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"quote-line\",\n      children: [line, i < text.split('\\n').length - 1 && /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 45\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this));\n  };\n  if (!showIntro) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"intro-sequence\",\n    onClick: handleSkipIntro,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"moon-animation\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: moonCanvasRef,\n        width: \"200\",\n        height: \"200\",\n        className: \"moon-canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `quote-container ${quoteVisible ? 'visible' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quote-text\",\n        children: currentQuote && formatQuote(currentQuote.text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quote-author\",\n        children: currentQuote && currentQuote.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skip-intro\",\n      children: \"tap to skip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n};\n_s(IntroSequence, \"pETCih7taBPG2g+NX/gQihF8k3A=\");\n_c = IntroSequence;\nexport default IntroSequence;\nvar _c;\n$RefreshReg$(_c, \"IntroSequence\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","useCallback","jsxDEV","_jsxDEV","IntroSequence","showIntro","setShowIntro","setIsLoaded","_s","moonCanvasRef","animationRef","sequenceStartRef","quoteVisible","setQuoteVisible","currentQuote","setCurrentQuote","timings","showQuote","startDimming","hideQuote","fadeOutIntro","completeIntro","quotes","text","author","randomIndex","Math","floor","random","length","handleSkipIntro","current","cancelAnimationFrame","Date","now","canvas","ctx","getContext","centerX","width","centerY","height","radius","rotation","brightness","lastTimestamp","trailLength","trailSegments","drawComet","currentBrightness","clearRect","headAngle","PI","headX","cos","headY","sin","i","segmentAngle","segmentX","segmentY","nextSegmentAngle","nextSegmentX","nextSegmentY","segmentOpacity","beginPath","moveTo","lineTo","segmentWidth","shadowColor","shadowBlur","strokeStyle","lineWidth","lineCap","stroke","arc","fillStyle","fill","animate","timestamp","elapsed","introElement","document","querySelector","classList","contains","add","console","warn","deltaTime","speed","dimProgress","max","requestAnimationFrame","setTimeout","formatQuote","split","map","line","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","_c","$RefreshReg$"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/core/IntroSequence.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\nimport './introSequence.css';\n\nconst IntroSequence = ({ showIntro, setShowIntro, setIsLoaded }) => {\n  // All refs must be defined at the top level\n  const moonCanvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const sequenceStartRef = useRef(null);\n  \n  // Component state\n  const [quoteVisible, setQuoteVisible] = useState(false);\n  const [currentQuote, setCurrentQuote] = useState(null);\n  \n  // Animation timing constants - defined outside the effect\n  const timings = {\n    showQuote: 350,\n    startDimming: 2000,\n    hideQuote: 2400,\n    fadeOutIntro: 2600,\n    completeIntro: 3000\n  };\n  \n  // Use useMemo to prevent the quotes array from causing dependency issues\n  const quotes = useMemo(() => [\n    {\n      text: \"My candle burns at both ends;\\nIt will not last the night;\\nBut, ah my foes, and\\noh my friend â€”\\nit gives a\\nlovely\\nlight\",\n      author: \"Edna St. Vincent Millay\"\n    },\n    {\n      text: \"Out of the ash\\nI rise with my red hair\\nAnd I eat men like air.\",\n      author: \"Sylvia Plath\"\n    },\n    {\n      text: \"And he will come this, light insouciant lover,\\nblowing his bugles to a rising morrow,\\nto rend her veil, her wizened mind uncover,\\nto leave her conquered by life's stinging sorrow\",\n      author: \"Virginia McCormick\"\n    },\n    {\n      text: \"Hope is the thing with feathers\\nThat perches in the soul,\\nAnd sings the tune without the words,\\nAnd never stops at all.\",\n      author: \"Emily Dickinson\"\n    },\n    {\n      text: \"I have gone out, a possessed witch,\\nhaunting the black air, braver at night;\\ndreaming evil, I have done my hitch\\nover the plain houses, light by light.\",\n      author: \"Anne Sexton\"\n    }\n  ], []);\n\n  // Initialize the quote when the intro starts\n  useEffect(() => {\n    if (showIntro) {\n      // Select a random quote\n      const randomIndex = Math.floor(Math.random() * quotes.length);\n      setCurrentQuote(quotes[randomIndex]);\n    }\n  }, [showIntro, quotes]);\n\n  // Skip intro handler - using useCallback to maintain consistent reference\n  const handleSkipIntro = useCallback(() => {\n    // Cancel any running animation\n    if (animationRef.current) {\n      cancelAnimationFrame(animationRef.current);\n      animationRef.current = null;\n    }\n    \n    setShowIntro(false);\n    setIsLoaded(true);\n  }, [setShowIntro, setIsLoaded]);\n\n  // Main animation and sequence control\n  useEffect(() => {\n    if (!showIntro || !moonCanvasRef.current) return;\n    \n    // Set the start time at the beginning of the animation\n    sequenceStartRef.current = Date.now();\n    \n    // Canvas setup\n    const canvas = moonCanvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n    const radius = 70;\n    \n    // Animation variables\n    let rotation = 0;\n    let brightness = 1.0;\n    let lastTimestamp = null;\n    \n    // Comet trail parameters\n    const trailLength = 120; // degrees\n    const trailSegments = 20;\n    \n    // Draw a single frame of the comet animation\n    const drawComet = (currentBrightness) => {\n      if (!ctx) return;\n      \n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      \n      // Calculate head position\n      const headAngle = rotation * Math.PI / 180;\n      const headX = centerX + radius * Math.cos(headAngle);\n      const headY = centerY + radius * Math.sin(headAngle);\n      \n      // Draw trail segments\n      for (let i = 0; i < trailSegments; i++) {\n        // Calculate segment positions\n        const segmentAngle = ((rotation - (i * (trailLength / trailSegments))) % 360) * Math.PI / 180;\n        const segmentX = centerX + radius * Math.cos(segmentAngle);\n        const segmentY = centerY + radius * Math.sin(segmentAngle);\n        \n        const nextSegmentAngle = ((rotation - ((i + 1) * (trailLength / trailSegments))) % 360) * Math.PI / 180;\n        const nextSegmentX = centerX + radius * Math.cos(nextSegmentAngle);\n        const nextSegmentY = centerY + radius * Math.sin(nextSegmentAngle);\n        \n        // Calculate segment opacity based on position and brightness\n        const segmentOpacity = 0.8 * (1 - (i / trailSegments)) * currentBrightness;\n        \n        // Draw trail segment\n        ctx.beginPath();\n        ctx.moveTo(segmentX, segmentY);\n        ctx.lineTo(nextSegmentX, nextSegmentY);\n        \n        // Width variation along the trail\n        const segmentWidth = 2.5 * (1 - (i / trailSegments)) + 0.5;\n        \n        // Set shadow/glow\n        ctx.shadowColor = `rgba(255, 253, 227, ${segmentOpacity})`;\n        ctx.shadowBlur = (10 * (1 - (i / trailSegments)) + 5) * currentBrightness;\n        \n        // Set line style\n        ctx.strokeStyle = `rgba(191, 173, 127, ${segmentOpacity})`;\n        ctx.lineWidth = segmentWidth;\n        ctx.lineCap = 'round';\n        ctx.stroke();\n      }\n      \n      // Draw comet head (3 layers for effect)\n      ctx.shadowColor = `rgba(255, 253, 227, ${0.9 * currentBrightness})`;\n      ctx.shadowBlur = 20 * currentBrightness;\n      \n      // Outer glow\n      ctx.beginPath();\n      ctx.arc(headX, headY, 4, 0, Math.PI * 2);\n      ctx.fillStyle = `rgba(255, 253, 227, ${0.7 * currentBrightness})`;\n      ctx.fill();\n      \n      // Middle layer\n      ctx.beginPath();\n      ctx.arc(headX, headY, 2.5, 0, Math.PI * 2);\n      ctx.fillStyle = `rgba(255, 253, 227, ${0.9 * currentBrightness})`;\n      ctx.fill();\n      \n      // Bright center\n      ctx.beginPath();\n      ctx.arc(headX, headY, 1, 0, Math.PI * 2);\n      ctx.fillStyle = `rgba(255, 255, 255, ${currentBrightness})`;\n      ctx.fill();\n    };\n    \n    // Main animation function\n    const animate = (timestamp) => {\n      // Ensure we have a valid start time reference\n      if (!sequenceStartRef.current) {\n        sequenceStartRef.current = Date.now();\n      }\n      \n      // Calculate elapsed time from our stored start time\n      const elapsed = Date.now() - sequenceStartRef.current;\n      \n      // Handle sequence timing events\n      if (elapsed >= timings.showQuote && !quoteVisible) {\n        setQuoteVisible(true);\n      }\n      \n      if (elapsed >= timings.hideQuote && quoteVisible) {\n        setQuoteVisible(false);\n      }\n      \n      if (elapsed >= timings.fadeOutIntro) {\n        const introElement = document.querySelector('.intro-sequence');\n        if (introElement && !introElement.classList.contains('fade-out')) {\n          introElement.classList.add('fade-out');\n        }\n      }\n      \n      if (elapsed >= timings.completeIntro) {\n        // End the animation and sequence\n        cancelAnimationFrame(animationRef.current);\n        animationRef.current = null;\n        setShowIntro(false);\n        setIsLoaded(true);\n        return;\n      }\n      \n      // Safety check - if animation runs too long, force terminate\n      if (elapsed > timings.completeIntro + 1000) {\n        console.warn('Animation exceeded maximum duration, forcing termination');\n        cancelAnimationFrame(animationRef.current);\n        animationRef.current = null;\n        setShowIntro(false);\n        setIsLoaded(true);\n        return;\n      }\n      \n      // Calculate animation delta time\n      if (!lastTimestamp) lastTimestamp = timestamp;\n      const deltaTime = timestamp - lastTimestamp;\n      lastTimestamp = timestamp;\n      \n      // Update rotation\n      const speed = 0.12 * deltaTime;\n      rotation = (rotation + speed) % 360;\n      \n      // Calculate brightness based on animation phase\n      if (elapsed >= timings.startDimming) {\n        // Smoothly reduce brightness until fadeOutIntro\n        const dimProgress = (elapsed - timings.startDimming) / \n                           (timings.fadeOutIntro - timings.startDimming);\n        brightness = Math.max(0, 1 - dimProgress);\n      }\n      \n      // Draw current frame\n      drawComet(brightness);\n      \n      // Continue animation\n      animationRef.current = requestAnimationFrame(animate);\n    };\n    \n    // Start the animation\n    animationRef.current = requestAnimationFrame(animate);\n    \n    // Clean up function\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n        animationRef.current = null;\n      }\n      \n      // Force cleanup even if animation did not complete properly\n      if (showIntro) {\n        setTimeout(() => {\n          setShowIntro(false);\n          setIsLoaded(true);\n        }, 0);\n      }\n    };\n  }, [showIntro, quoteVisible, setQuoteVisible, setShowIntro, setIsLoaded, timings]);\n  \n  // Format quote with line breaks\n  const formatQuote = (text) => {\n    return text.split('\\n').map((line, i) => (\n      <span key={i} className=\"quote-line\">\n        {line}\n        {i < text.split('\\n').length - 1 && <br />}\n      </span>\n    ));\n  };\n\n  if (!showIntro) return null;\n\n  return (\n    <div className=\"intro-sequence\" onClick={handleSkipIntro}>\n      <div className=\"moon-animation\">\n        <canvas \n          ref={moonCanvasRef} \n          width=\"200\" \n          height=\"200\"\n          className=\"moon-canvas\"\n        />\n      </div>\n      \n      <div className={`quote-container ${quoteVisible ? 'visible' : ''}`}>\n        <div className=\"quote-text\">\n          {currentQuote && formatQuote(currentQuote.text)}\n        </div>\n        <div className=\"quote-author\">\n          {currentQuote && currentQuote.author}\n        </div>\n      </div>\n      \n      <div className=\"skip-intro\">tap to skip</div>\n    </div>\n  );\n};\n\nexport default IntroSequence;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}