{"ast":null,"code":"var _jsxFileName = \"/home/valeria/Documents/Crucible/frontend/src/components/layout/Background.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useMemo } from 'react';\nimport { useScroll, useSpring } from 'framer-motion';\n\n// Import cosmic effect components\nimport CosmicStars from '../core/effects/cosmiceffects/CosmicStars';\nimport CosmicNebula from '../core/effects/cosmiceffects/CosmicNebula';\nimport CosmicDust from '../core/effects/cosmiceffects/CosmicDust';\nimport MeteorShower from '../core/effects/cosmiceffects/MeteorShower';\n\n/**\n * Background Component\n * \n * Coordinates multiple cosmic effects to create an immersive, layered space background.\n * Handles scroll position tracking and persistence across page reloads.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Background = ({\n  config = {}\n}) => {\n  _s();\n  // Container ref for dimensions\n  const containerRef = useRef(null);\n\n  // Get scroll position using framer-motion\n  const {\n    scrollY\n  } = useScroll({\n    smooth: 0.05 // Smoother scrolling for high-framerate animations\n  });\n\n  // Use spring physics for smoother scrolling effect\n  const springScrollY = useSpring(scrollY, {\n    stiffness: 1,\n    damping: 5,\n    mass: 0.5,\n    restDelta: 0.001,\n    restSpeed: 0.001\n  });\n\n  // Track spring scrollY value without causing re-renders\n  const springScrollYRef = useRef(0);\n  useEffect(() => {\n    const unsubscribe = springScrollY.onChange(value => {\n      springScrollYRef.current = value;\n    });\n    return () => unsubscribe();\n  }, [springScrollY]);\n\n  // Configuration - wrapped in useMemo to prevent recreation on each render\n  // Merge default config with user-provided config\n  const CONFIG = useMemo(() => ({\n    // Feature flags\n    enableStars: true,\n    enableNebula: true,\n    enableDust: true,\n    enableMeteors: true,\n    // Background color\n    backgroundColor: 'rgb(8, 8, 12)',\n    // Stars configuration (subtle golden palette)\n    starsConfig: {\n      starCount: 120,\n      starSizeMin: 1.0,\n      starSizeMax: 1.9,\n      starOpacityMin: 0.2,\n      starOpacityMax: 0.55,\n      enableParallax: true,\n      parallaxFactor: 0.2,\n      colors: ['rgba(255, 243, 200, alpha)',\n      // Warm yellow\n      'rgba(255, 231, 164, alpha)',\n      // Golden\n      'rgba(252, 249, 231, alpha)' // Off-white gold\n      ]\n    },\n    // Nebula configuration (very subtle, low opacity)\n    nebulaConfig: {\n      cloudCount: 3,\n      // Fewer clouds for subtlety\n      rotationSpeed: 0.01,\n      // Very slow rotation\n      expansionFactor: 1.2,\n      // Less expanded\n      blurFactor: 25,\n      // More blur for softer appearance\n      cloudOpacity: 0.08,\n      // Very low opacity for subtle effect\n      parallaxIntensity: 0.05,\n      // Minimal parallax effect\n      colorSchemes: [['rgba(63, 12, 77, 0.1)', 'rgba(107, 23, 129, 0.08)', 'rgba(240, 107, 207, 0.05)'],\n      // Subtle purple\n      ['rgba(11, 35, 65, 0.1)', 'rgba(35, 91, 170, 0.08)', 'rgba(79, 142, 230, 0.05)'] // Subtle blue\n      ]\n    },\n    // Cosmic dust configuration (minimal, smaller particles)\n    dustConfig: {\n      particleDensity: 70,\n      // Fewer particles\n      particleMinSize: 0.3,\n      // Smaller particles\n      particleMaxSize: 1.5,\n      // Smaller max size\n      baseSpeed: 0.03,\n      // Slower movement\n      flowComplexity: 1.5,\n      // Less complex flow\n      parallaxIntensity: 0.1,\n      // Minimal parallax\n      waveAmplitude: 5,\n      // Smaller waves\n      colors: ['rgba(255,255,255,alpha)',\n      // White\n      'rgba(180,190,255,alpha)',\n      // Light blue\n      'rgba(255,231,164,alpha)' // Golden\n      ]\n    },\n    // Meteor shower configuration\n    meteorConfig: {\n      meteorDensity: 10,\n      // Fewer meteors\n      meteorMinSize: 1,\n      meteorMaxSize: 3,\n      minStaggerDelay: 500,\n      // Longer delay between meteors\n      maxStaggerDelay: 4000,\n      enableBursts: true\n    },\n    // Persistence settings\n    persistenceEnabled: true,\n    scrollPositionKey: 'cosmic_background_scroll',\n    // Override with user config\n    ...config\n  }), [config]);\n\n  // Restore scroll position on mount\n  useEffect(() => {\n    if (CONFIG.persistenceEnabled) {\n      try {\n        const savedScrollY = sessionStorage.getItem(CONFIG.scrollPositionKey);\n        if (savedScrollY) {\n          // Use a timeout to ensure scroll is applied after initial render\n          setTimeout(() => {\n            window.scrollTo({\n              top: parseFloat(savedScrollY),\n              behavior: 'auto'\n            });\n          }, 0);\n        }\n      } catch (error) {\n        console.warn('Could not restore scroll position', error);\n      }\n    }\n  }, [CONFIG.persistenceEnabled, CONFIG.scrollPositionKey]);\n\n  // Save scroll position on unload\n  useEffect(() => {\n    if (!CONFIG.persistenceEnabled) return;\n    const saveScrollPosition = () => {\n      try {\n        sessionStorage.setItem(CONFIG.scrollPositionKey, springScrollYRef.current.toString());\n      } catch (error) {\n        console.warn('Could not save scroll position', error);\n      }\n    };\n\n    // Save on visibility change and before unload\n    const handleVisibilityChange = () => {\n      if (document.visibilityState === 'hidden') {\n        saveScrollPosition();\n      }\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    window.addEventListener('beforeunload', saveScrollPosition);\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n      window.removeEventListener('beforeunload', saveScrollPosition);\n      saveScrollPosition(); // Save on unmount\n    };\n  }, [CONFIG.persistenceEnabled, CONFIG.scrollPositionKey]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100vw',\n      height: '100vh',\n      overflow: 'hidden',\n      zIndex: -1,\n      pointerEvents: 'none',\n      backgroundColor: CONFIG.backgroundColor\n    },\n    \"aria-hidden\": \"true\",\n    children: [CONFIG.enableStars && /*#__PURE__*/_jsxDEV(CosmicStars, {\n      active: true,\n      zIndex: 1,\n      ...CONFIG.starsConfig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this), CONFIG.enableNebula && /*#__PURE__*/_jsxDEV(CosmicNebula, {\n      active: true,\n      zIndex: 2,\n      ...CONFIG.nebulaConfig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this), CONFIG.enableDust && /*#__PURE__*/_jsxDEV(CosmicDust, {\n      active: true,\n      zIndex: 4,\n      ...CONFIG.dustConfig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this), CONFIG.enableMeteors && /*#__PURE__*/_jsxDEV(MeteorShower, {\n      active: true,\n      zIndex: 5,\n      ...CONFIG.meteorConfig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n_s(Background, \"CkcjG1ALR6IuZq4ojCbpvB+ICBk=\", false, function () {\n  return [useScroll, useSpring];\n});\n_c = Background;\nexport default Background;\nvar _c;\n$RefreshReg$(_c, \"Background\");","map":{"version":3,"names":["React","useRef","useEffect","useMemo","useScroll","useSpring","CosmicStars","CosmicNebula","CosmicDust","MeteorShower","jsxDEV","_jsxDEV","Background","config","_s","containerRef","scrollY","smooth","springScrollY","stiffness","damping","mass","restDelta","restSpeed","springScrollYRef","unsubscribe","onChange","value","current","CONFIG","enableStars","enableNebula","enableDust","enableMeteors","backgroundColor","starsConfig","starCount","starSizeMin","starSizeMax","starOpacityMin","starOpacityMax","enableParallax","parallaxFactor","colors","nebulaConfig","cloudCount","rotationSpeed","expansionFactor","blurFactor","cloudOpacity","parallaxIntensity","colorSchemes","dustConfig","particleDensity","particleMinSize","particleMaxSize","baseSpeed","flowComplexity","waveAmplitude","meteorConfig","meteorDensity","meteorMinSize","meteorMaxSize","minStaggerDelay","maxStaggerDelay","enableBursts","persistenceEnabled","scrollPositionKey","savedScrollY","sessionStorage","getItem","setTimeout","window","scrollTo","top","parseFloat","behavior","error","console","warn","saveScrollPosition","setItem","toString","handleVisibilityChange","document","visibilityState","addEventListener","removeEventListener","ref","style","position","left","width","height","overflow","zIndex","pointerEvents","children","active","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/layout/Background.jsx"],"sourcesContent":["import React, { useRef, useEffect, useMemo } from 'react';\nimport { useScroll, useSpring } from 'framer-motion';\n\n// Import cosmic effect components\nimport CosmicStars from '../core/effects/cosmiceffects/CosmicStars';\nimport CosmicNebula from '../core/effects/cosmiceffects/CosmicNebula';\nimport CosmicDust from '../core/effects/cosmiceffects/CosmicDust';\nimport MeteorShower from '../core/effects/cosmiceffects/MeteorShower';\n\n/**\n * Background Component\n * \n * Coordinates multiple cosmic effects to create an immersive, layered space background.\n * Handles scroll position tracking and persistence across page reloads.\n */\nconst Background = ({ config = {} }) => {\n  // Container ref for dimensions\n  const containerRef = useRef(null);\n  \n  // Get scroll position using framer-motion\n  const { scrollY } = useScroll({\n    smooth: 0.05  // Smoother scrolling for high-framerate animations\n  });\n  \n  // Use spring physics for smoother scrolling effect\n  const springScrollY = useSpring(scrollY, {\n    stiffness: 1,\n    damping: 5,\n    mass: 0.5,\n    restDelta: 0.001,\n    restSpeed: 0.001\n  });\n  \n  // Track spring scrollY value without causing re-renders\n  const springScrollYRef = useRef(0);\n  useEffect(() => {\n    const unsubscribe = springScrollY.onChange(value => {\n      springScrollYRef.current = value;\n    });\n    return () => unsubscribe();\n  }, [springScrollY]);\n  \n  // Configuration - wrapped in useMemo to prevent recreation on each render\n  // Merge default config with user-provided config\n  const CONFIG = useMemo(() => ({\n    // Feature flags\n    enableStars: true,\n    enableNebula: true, \n    enableDust: true,\n    enableMeteors: true,\n    \n    // Background color\n    backgroundColor: 'rgb(8, 8, 12)',\n    \n    // Stars configuration (subtle golden palette)\n    starsConfig: {\n      starCount: 120,\n      starSizeMin: 1.0,\n      starSizeMax: 1.9,\n      starOpacityMin: 0.2,\n      starOpacityMax: 0.55,\n      enableParallax: true,\n      parallaxFactor: 0.2,\n      colors: [\n        'rgba(255, 243, 200, alpha)', // Warm yellow\n        'rgba(255, 231, 164, alpha)', // Golden\n        'rgba(252, 249, 231, alpha)'  // Off-white gold\n      ]\n    },\n    \n    // Nebula configuration (very subtle, low opacity)\n    nebulaConfig: {\n      cloudCount: 3, // Fewer clouds for subtlety\n      rotationSpeed: 0.01, // Very slow rotation\n      expansionFactor: 1.2, // Less expanded\n      blurFactor: 25, // More blur for softer appearance\n      cloudOpacity: 0.08, // Very low opacity for subtle effect\n      parallaxIntensity: 0.05, // Minimal parallax effect\n      colorSchemes: [\n        ['rgba(63, 12, 77, 0.1)', 'rgba(107, 23, 129, 0.08)', 'rgba(240, 107, 207, 0.05)'], // Subtle purple\n        ['rgba(11, 35, 65, 0.1)', 'rgba(35, 91, 170, 0.08)', 'rgba(79, 142, 230, 0.05)'], // Subtle blue\n      ]\n    },\n    \n    // Cosmic dust configuration (minimal, smaller particles)\n    dustConfig: {\n      particleDensity: 70, // Fewer particles\n      particleMinSize: 0.3, // Smaller particles\n      particleMaxSize: 1.5, // Smaller max size\n      baseSpeed: 0.03, // Slower movement\n      flowComplexity: 1.5, // Less complex flow\n      parallaxIntensity: 0.1, // Minimal parallax\n      waveAmplitude: 5, // Smaller waves\n      colors: [\n        'rgba(255,255,255,alpha)', // White\n        'rgba(180,190,255,alpha)', // Light blue\n        'rgba(255,231,164,alpha)' // Golden\n      ]\n    },\n    \n    // Meteor shower configuration\n    meteorConfig: {\n      meteorDensity: 10, // Fewer meteors\n      meteorMinSize: 1,\n      meteorMaxSize: 3,\n      minStaggerDelay: 500, // Longer delay between meteors\n      maxStaggerDelay: 4000,\n      enableBursts: true\n    },\n    \n    // Persistence settings\n    persistenceEnabled: true,\n    scrollPositionKey: 'cosmic_background_scroll',\n    \n    // Override with user config\n    ...config\n  }), [config]);\n  \n  // Restore scroll position on mount\n  useEffect(() => {\n    if (CONFIG.persistenceEnabled) {\n      try {\n        const savedScrollY = sessionStorage.getItem(CONFIG.scrollPositionKey);\n        if (savedScrollY) {\n          // Use a timeout to ensure scroll is applied after initial render\n          setTimeout(() => {\n            window.scrollTo({\n              top: parseFloat(savedScrollY),\n              behavior: 'auto'\n            });\n          }, 0);\n        }\n      } catch (error) {\n        console.warn('Could not restore scroll position', error);\n      }\n    }\n  }, [CONFIG.persistenceEnabled, CONFIG.scrollPositionKey]);\n  \n  // Save scroll position on unload\n  useEffect(() => {\n    if (!CONFIG.persistenceEnabled) return;\n    \n    const saveScrollPosition = () => {\n      try {\n        sessionStorage.setItem(CONFIG.scrollPositionKey, springScrollYRef.current.toString());\n      } catch (error) {\n        console.warn('Could not save scroll position', error);\n      }\n    };\n    \n    // Save on visibility change and before unload\n    const handleVisibilityChange = () => {\n      if (document.visibilityState === 'hidden') {\n        saveScrollPosition();\n      }\n    };\n    \n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    window.addEventListener('beforeunload', saveScrollPosition);\n    \n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n      window.removeEventListener('beforeunload', saveScrollPosition);\n      saveScrollPosition(); // Save on unmount\n    };\n  }, [CONFIG.persistenceEnabled, CONFIG.scrollPositionKey]);\n  \n  return (\n    <div\n      ref={containerRef}\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        overflow: 'hidden',\n        zIndex: -1,\n        pointerEvents: 'none',\n        backgroundColor: CONFIG.backgroundColor\n      }}\n      aria-hidden=\"true\"\n    >\n      {/* Layer 1: Stars */}\n      {CONFIG.enableStars && (\n        <CosmicStars\n          active={true}\n          zIndex={1}\n          {...CONFIG.starsConfig}\n        />\n      )}\n      \n      {/* Layer 2: Nebula (very subtle) */}\n      {CONFIG.enableNebula && (\n        <CosmicNebula\n          active={true}\n          zIndex={2}\n          {...CONFIG.nebulaConfig}\n        />\n      )}\n      \n      {/* Layer 3: Cosmic Dust (subtle) */}\n      {CONFIG.enableDust && (\n        <CosmicDust\n          active={true}\n          zIndex={4}\n          {...CONFIG.dustConfig}\n        />\n      )}\n      \n      {/* Layer 4: Meteor Shower */}\n      {CONFIG.enableMeteors && (\n        <MeteorShower\n          active={true}\n          zIndex={5}\n          {...CONFIG.meteorConfig}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Background;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}