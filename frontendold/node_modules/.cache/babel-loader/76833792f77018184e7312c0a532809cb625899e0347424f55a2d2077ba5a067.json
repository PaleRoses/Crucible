{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{createUseStyles}from'react-jss';import Background from'../../../../core/Background';import MeteorShower from'../../../../core/effects/cosmiceffects/MeteorShower';import EvoSimShowCaseBar from'./evosimutils/EvoSimShowcaseBar';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const useStyles=createUseStyles({evolutionSimulator:{position:'relative',width:'100%',height:'100vh',overflow:'hidden',color:'#e0e0e0',fontFamily:'\"Garamond\", \"Adobe Caslon Pro\", serif',display:'flex',flexDirection:'column'},visualizationContainer:{position:'relative',flex:1,overflow:'hidden'},networkCanvas:{position:'absolute',top:0,left:0,cursor:'grab','&:active':{cursor:'grabbing'}},categoryFilters:{position:'absolute',bottom:'1rem',left:'50%',transform:'translateX(-50%)',backgroundColor:'rgba(15, 15, 20, 0.8)',borderRadius:'30px',padding:'0.5rem',display:'flex',gap:'0.5rem',zIndex:50,boxShadow:'0 4px 15px rgba(0, 0, 0, 0.3)',border:'1px solid rgba(191, 173, 127, 0.2)'},categoryButton:{background:'transparent',border:'none',color:'rgba(224, 224, 224, 0.7)',padding:'0.35rem 0.75rem',borderRadius:'20px',fontSize:'0.85rem',cursor:'pointer',transition:'all 0.2s ease','&:hover':{color:'#e0e0e0',backgroundColor:'rgba(191, 173, 127, 0.1)'}},categoryButtonActive:{backgroundColor:'rgba(191, 173, 127, 0.3)',color:'#e0e0e0'}});const EvolutionSimulator=()=>{const classes=useStyles();// State for cursor position (for background effect)\nconst[cursorPosition,setCursorPosition]=useState({x:0,y:0});// Evolution simulation states\nconst[selectedBodyShape,setSelectedBodyShape]=useState('quadrupedal');const[activeTab,setActiveTab]=useState('traits');const[visualizationMode,setVisualizationMode]=useState('direct');const[showEmergence,setShowEmergence]=useState(false);const[selectedCategory,setSelectedCategory]=useState(null);const[selectedTraits,setSelectedTraits]=useState({});// Environment state\nconst[environment,setEnvironment]=useState({eldritch_influence:0.5,corruption_level:0.5,resource_scarcity:0.5,ambient_magic:0.5,darkness:0.5});// Canvas and interaction refs\nconst canvasRef=useRef(null);const containerRef=useRef(null);const animationFrameRef=useRef(null);// Define trait categories for filters\nconst traitCategories=[{id:'locomotion',name:'Locomotion',color:'#7D6B9E'},{id:'metabolism',name:'Metabolism',color:'#5C9D8B'},{id:'sensory',name:'Sensory Acuity',color:'#C99846'},{id:'etheric',name:'Etheric Adaptation',color:'#B54B4B'},{id:'thermal',name:'Thermal Regulation',color:'#A67C52'}];// Handle mouse movement for background effect\nconst handleMouseMove=e=>{setCursorPosition({x:e.clientX,y:e.clientY});};// Set up canvas for visualization\nuseEffect(()=>{if(!canvasRef.current||!containerRef.current)return;const canvas=canvasRef.current;const container=containerRef.current;const ctx=canvas.getContext('2d');// Set up canvas dimensions\nconst updateCanvasDimensions=()=>{const rect=container.getBoundingClientRect();canvas.width=rect.width;canvas.height=rect.height;};updateCanvasDimensions();window.addEventListener('resize',updateCanvasDimensions);// Animation function for the network visualization\nconst animate=()=>{// Clear canvas\nctx.clearRect(0,0,canvas.width,canvas.height);// Draw network visualization based on current state\n// This would contain the visualization logic adapted to the current:\n// - visualizationMode ('direct', 'tree', 'category')\n// - selectedBodyShape\n// - selectedTraits\n// - selectedCategory filter\n// - environment settings\n// Simple placeholder drawing\nconst centerX=canvas.width/2;const centerY=canvas.height/2;// Draw center node\nctx.beginPath();ctx.arc(centerX,centerY,50,0,Math.PI*2);ctx.fillStyle='rgba(191, 173, 127, 0.8)';ctx.fill();ctx.strokeStyle='white';ctx.lineWidth=2;ctx.stroke();ctx.font='bold 16px Arial';ctx.fillStyle='black';ctx.textAlign='center';ctx.textBaseline='middle';ctx.fillText(selectedBodyShape.toUpperCase(),centerX,centerY);// Continue animation\nanimationFrameRef.current=requestAnimationFrame(animate);};animate();return()=>{window.removeEventListener('resize',updateCanvasDimensions);if(animationFrameRef.current){cancelAnimationFrame(animationFrameRef.current);}};},[selectedBodyShape,visualizationMode,selectedCategory,selectedTraits,environment]);return/*#__PURE__*/_jsxs(\"div\",{className:classes.evolutionSimulator,onMouseMove:handleMouseMove,children:[/*#__PURE__*/_jsx(Background,{cursorPosition:cursorPosition,setCursorPosition:setCursorPosition}),/*#__PURE__*/_jsx(MeteorShower,{height:\"100vh\",zIndex:2,trailColor:\"rgba(191, 173, 127, 0.8)\",glowColor:\"rgba(207, 185, 130, 0.6)\",coreColor:\"rgba(255, 248, 220, 1)\",meteorDensity:15,meteorMinSize:1,meteorMaxSize:2,meteorSpeed:0.08,trailLength:300,trailSegments:80,enableParallax:true,parallaxIntensity:0.15,mode:\"arc\",staggered:true}),/*#__PURE__*/_jsx(EvoSimShowCaseBar,{selectedBodyShape:selectedBodyShape,onBodyShapeChange:setSelectedBodyShape,activeTab:activeTab,onTabChange:setActiveTab,visualizationMode:visualizationMode,onVisualizationModeChange:setVisualizationMode,environment:environment,onEnvironmentChange:setEnvironment,showEmergence:showEmergence,onToggleEmergence:()=>setShowEmergence(!showEmergence),selectedTraits:selectedTraits,onTraitChange:(category,traitId)=>{setSelectedTraits(prev=>({...prev,[category]:traitId}));}}),/*#__PURE__*/_jsxs(\"div\",{ref:containerRef,className:classes.visualizationContainer,children:[/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,className:classes.networkCanvas}),/*#__PURE__*/_jsxs(\"div\",{className:classes.categoryFilters,children:[/*#__PURE__*/_jsx(\"button\",{className:`${classes.categoryButton} ${selectedCategory===null?classes.categoryButtonActive:''}`,onClick:()=>setSelectedCategory(null),children:\"All Traits\"}),traitCategories.map(category=>/*#__PURE__*/_jsx(\"button\",{className:`${classes.categoryButton} ${selectedCategory===category.id?classes.categoryButtonActive:''}`,onClick:()=>setSelectedCategory(category.id),style:{borderBottom:`2px solid ${category.color}`},children:category.name},category.id))]})]})]});};export default EvolutionSimulator;","map":{"version":3,"names":["React","useState","useEffect","useRef","createUseStyles","Background","MeteorShower","EvoSimShowCaseBar","jsx","_jsx","jsxs","_jsxs","useStyles","evolutionSimulator","position","width","height","overflow","color","fontFamily","display","flexDirection","visualizationContainer","flex","networkCanvas","top","left","cursor","categoryFilters","bottom","transform","backgroundColor","borderRadius","padding","gap","zIndex","boxShadow","border","categoryButton","background","fontSize","transition","categoryButtonActive","EvolutionSimulator","classes","cursorPosition","setCursorPosition","x","y","selectedBodyShape","setSelectedBodyShape","activeTab","setActiveTab","visualizationMode","setVisualizationMode","showEmergence","setShowEmergence","selectedCategory","setSelectedCategory","selectedTraits","setSelectedTraits","environment","setEnvironment","eldritch_influence","corruption_level","resource_scarcity","ambient_magic","darkness","canvasRef","containerRef","animationFrameRef","traitCategories","id","name","handleMouseMove","e","clientX","clientY","current","canvas","container","ctx","getContext","updateCanvasDimensions","rect","getBoundingClientRect","window","addEventListener","animate","clearRect","centerX","centerY","beginPath","arc","Math","PI","fillStyle","fill","strokeStyle","lineWidth","stroke","font","textAlign","textBaseline","fillText","toUpperCase","requestAnimationFrame","removeEventListener","cancelAnimationFrame","className","onMouseMove","children","trailColor","glowColor","coreColor","meteorDensity","meteorMinSize","meteorMaxSize","meteorSpeed","trailLength","trailSegments","enableParallax","parallaxIntensity","mode","staggered","onBodyShapeChange","onTabChange","onVisualizationModeChange","onEnvironmentChange","onToggleEmergence","onTraitChange","category","traitId","prev","ref","onClick","map","style","borderBottom"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/sections/codex/creators/creatorshowcase/EvolutionSimulatorConceptShowcase.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport Background from '../../../../core/Background';\nimport MeteorShower from '../../../../core/effects/cosmiceffects/MeteorShower';\nimport EvoSimShowCaseBar from './evosimutils/EvoSimShowcaseBar';\n\nconst useStyles = createUseStyles({\n  evolutionSimulator: {\n    position: 'relative',\n    width: '100%',\n    height: '100vh',\n    overflow: 'hidden',\n    color: '#e0e0e0',\n    fontFamily: '\"Garamond\", \"Adobe Caslon Pro\", serif',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  \n  visualizationContainer: {\n    position: 'relative',\n    flex: 1,\n    overflow: 'hidden'\n  },\n  \n  networkCanvas: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    cursor: 'grab',\n    '&:active': {\n      cursor: 'grabbing'\n    }\n  },\n  \n  categoryFilters: {\n    position: 'absolute',\n    bottom: '1rem',\n    left: '50%',\n    transform: 'translateX(-50%)',\n    backgroundColor: 'rgba(15, 15, 20, 0.8)',\n    borderRadius: '30px',\n    padding: '0.5rem',\n    display: 'flex',\n    gap: '0.5rem',\n    zIndex: 50,\n    boxShadow: '0 4px 15px rgba(0, 0, 0, 0.3)',\n    border: '1px solid rgba(191, 173, 127, 0.2)'\n  },\n  \n  categoryButton: {\n    background: 'transparent',\n    border: 'none',\n    color: 'rgba(224, 224, 224, 0.7)',\n    padding: '0.35rem 0.75rem',\n    borderRadius: '20px',\n    fontSize: '0.85rem',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      color: '#e0e0e0',\n      backgroundColor: 'rgba(191, 173, 127, 0.1)'\n    }\n  },\n  \n  categoryButtonActive: {\n    backgroundColor: 'rgba(191, 173, 127, 0.3)',\n    color: '#e0e0e0'\n  }\n});\n\nconst EvolutionSimulator = () => {\n  const classes = useStyles();\n  \n  // State for cursor position (for background effect)\n  const [cursorPosition, setCursorPosition] = useState({ x: 0, y: 0 });\n  \n  // Evolution simulation states\n  const [selectedBodyShape, setSelectedBodyShape] = useState('quadrupedal');\n  const [activeTab, setActiveTab] = useState('traits');\n  const [visualizationMode, setVisualizationMode] = useState('direct');\n  const [showEmergence, setShowEmergence] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [selectedTraits, setSelectedTraits] = useState({});\n  \n  // Environment state\n  const [environment, setEnvironment] = useState({\n    eldritch_influence: 0.5,\n    corruption_level: 0.5,\n    resource_scarcity: 0.5,\n    ambient_magic: 0.5,\n    darkness: 0.5\n  });\n  \n  // Canvas and interaction refs\n  const canvasRef = useRef(null);\n  const containerRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  \n  // Define trait categories for filters\n  const traitCategories = [\n    { id: 'locomotion', name: 'Locomotion', color: '#7D6B9E' },\n    { id: 'metabolism', name: 'Metabolism', color: '#5C9D8B' },\n    { id: 'sensory', name: 'Sensory Acuity', color: '#C99846' },\n    { id: 'etheric', name: 'Etheric Adaptation', color: '#B54B4B' },\n    { id: 'thermal', name: 'Thermal Regulation', color: '#A67C52' }\n  ];\n  \n  // Handle mouse movement for background effect\n  const handleMouseMove = (e) => {\n    setCursorPosition({ x: e.clientX, y: e.clientY });\n  };\n  \n  // Set up canvas for visualization\n  useEffect(() => {\n    if (!canvasRef.current || !containerRef.current) return;\n    \n    const canvas = canvasRef.current;\n    const container = containerRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    // Set up canvas dimensions\n    const updateCanvasDimensions = () => {\n      const rect = container.getBoundingClientRect();\n      canvas.width = rect.width;\n      canvas.height = rect.height;\n    };\n    \n    updateCanvasDimensions();\n    window.addEventListener('resize', updateCanvasDimensions);\n    \n    // Animation function for the network visualization\n    const animate = () => {\n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      \n      // Draw network visualization based on current state\n      // This would contain the visualization logic adapted to the current:\n      // - visualizationMode ('direct', 'tree', 'category')\n      // - selectedBodyShape\n      // - selectedTraits\n      // - selectedCategory filter\n      // - environment settings\n      \n      // Simple placeholder drawing\n      const centerX = canvas.width / 2;\n      const centerY = canvas.height / 2;\n      \n      // Draw center node\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, 50, 0, Math.PI * 2);\n      ctx.fillStyle = 'rgba(191, 173, 127, 0.8)';\n      ctx.fill();\n      ctx.strokeStyle = 'white';\n      ctx.lineWidth = 2;\n      ctx.stroke();\n      \n      ctx.font = 'bold 16px Arial';\n      ctx.fillStyle = 'black';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(selectedBodyShape.toUpperCase(), centerX, centerY);\n      \n      // Continue animation\n      animationFrameRef.current = requestAnimationFrame(animate);\n    };\n    \n    animate();\n    \n    return () => {\n      window.removeEventListener('resize', updateCanvasDimensions);\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [\n    selectedBodyShape, \n    visualizationMode, \n    selectedCategory,\n    selectedTraits,\n    environment\n  ]);\n  \n  return (\n    <div \n      className={classes.evolutionSimulator}\n      onMouseMove={handleMouseMove}\n    >\n      {/* Background effects */}\n      <Background cursorPosition={cursorPosition} setCursorPosition={setCursorPosition} />\n      <MeteorShower \n        height=\"100vh\"\n        zIndex={2}\n        trailColor=\"rgba(191, 173, 127, 0.8)\"\n        glowColor=\"rgba(207, 185, 130, 0.6)\"\n        coreColor=\"rgba(255, 248, 220, 1)\"\n        meteorDensity={15}\n        meteorMinSize={1}\n        meteorMaxSize={2}\n        meteorSpeed={0.08}\n        trailLength={300}\n        trailSegments={80}\n        enableParallax={true}\n        parallaxIntensity={0.15}\n        mode=\"arc\"\n        staggered={true}\n      />\n      \n      {/* Navigation Bar Component */}\n      <EvoSimShowCaseBar\n        selectedBodyShape={selectedBodyShape}\n        onBodyShapeChange={setSelectedBodyShape}\n        activeTab={activeTab}\n        onTabChange={setActiveTab}\n        visualizationMode={visualizationMode}\n        onVisualizationModeChange={setVisualizationMode}\n        environment={environment}\n        onEnvironmentChange={setEnvironment}\n        showEmergence={showEmergence}\n        onToggleEmergence={() => setShowEmergence(!showEmergence)}\n        selectedTraits={selectedTraits}\n        onTraitChange={(category, traitId) => {\n          setSelectedTraits(prev => ({\n            ...prev,\n            [category]: traitId\n          }));\n        }}\n      />\n      \n      {/* Main Visualization */}\n      <div \n        ref={containerRef}\n        className={classes.visualizationContainer}\n      >\n        <canvas \n          ref={canvasRef}\n          className={classes.networkCanvas}\n        />\n        \n        {/* Category filter buttons */}\n        <div className={classes.categoryFilters}>\n          <button \n            className={`${classes.categoryButton} ${selectedCategory === null ? classes.categoryButtonActive : ''}`}\n            onClick={() => setSelectedCategory(null)}\n          >\n            All Traits\n          </button>\n          \n          {traitCategories.map(category => (\n            <button \n              key={category.id}\n              className={`${classes.categoryButton} ${selectedCategory === category.id ? classes.categoryButtonActive : ''}`}\n              onClick={() => setSelectedCategory(category.id)}\n              style={{ \n                borderBottom: `2px solid ${category.color}`\n              }}\n            >\n              {category.name}\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EvolutionSimulator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}