{"ast":null,"code":"var _jsxFileName = \"/home/valeria/Documents/Crucible/frontend/src/components/sections/landing/LandingNavigation.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useCallback } from 'react';\nimport './landingNavigation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LandingNavigation = ({\n  mainSections,\n  activeSection,\n  expandedSection,\n  expandedSubsection,\n  animatingLayout,\n  setActiveSection,\n  setExpandedSection,\n  setExpandedSubsection,\n  setAnimatingLayout\n}) => {\n  _s();\n  const sectionsContainerRef = useRef(null);\n  const animationTimeoutRef = useRef(null);\n  const heightTransitionRef = useRef(null);\n\n  // Navigate to section\n  const handleNavigate = (path, event, isExpandable) => {\n    if (isExpandable) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    // For demo purposes, just log the navigation\n    console.log(`Navigating to: ${path}`);\n    // In a real app, you'd use your routing library:\n    // window.location.href = path; or history.push(path);\n  };\n\n  // Handle section hover\n  const handleSectionHover = sectionId => {\n    setActiveSection(sectionId);\n  };\n\n  // Clear any pending timeouts to prevent animation conflicts\n  const clearPendingAnimations = useCallback(() => {\n    if (animationTimeoutRef.current) {\n      clearTimeout(animationTimeoutRef.current);\n      animationTimeoutRef.current = null;\n    }\n    if (heightTransitionRef.current) {\n      clearTimeout(heightTransitionRef.current);\n      heightTransitionRef.current = null;\n    }\n  }, []);\n\n  // Calculate section height precisely\n  const calculateSectionHeight = useCallback(sectionWrapper => {\n    if (!sectionWrapper) return 0;\n    const sectionRow = sectionWrapper.querySelector('.section-row');\n    const subsectionsContainer = sectionWrapper.querySelector('.subsections-container');\n    if (!sectionRow) return 0;\n    const rowHeight = sectionRow.offsetHeight;\n    const subsectionsHeight = subsectionsContainer ? subsectionsContainer.offsetHeight : 0;\n    return rowHeight + subsectionsHeight;\n  }, []);\n\n  // Handle section click - for expanding sections - complete rewrite\n  const handleSectionClick = useCallback((sectionId, event) => {\n    const section = mainSections.find(section => section.id === sectionId);\n    if (!section || !section.expandable) return;\n    event.stopPropagation();\n    clearPendingAnimations();\n\n    // Set animating flag to true\n    setAnimatingLayout(true);\n\n    // Get all necessary DOM elements\n    const clickedSectionWrapper = document.querySelector(`.section-wrapper[data-id=\"${sectionId}\"]`);\n    const previousSectionWrapper = expandedSection ? document.querySelector(`.section-wrapper[data-id=\"${expandedSection}\"]`) : null;\n\n    // Case 1: Clicked on already expanded section - collapse it\n    if (expandedSection === sectionId) {\n      // Prepare for height transition\n      clickedSectionWrapper.classList.add('smooth-height-transition');\n      const currentHeight = clickedSectionWrapper.offsetHeight;\n      const sectionRow = clickedSectionWrapper.querySelector('.section-row');\n      const rowHeight = sectionRow.offsetHeight;\n\n      // Set initial fixed height\n      clickedSectionWrapper.style.height = `${currentHeight}px`;\n\n      // Mark subsections for collapse transition\n      const subsectionsContainer = clickedSectionWrapper.querySelector('.subsections-container');\n      if (subsectionsContainer) {\n        subsectionsContainer.classList.add('collapse');\n      }\n\n      // Force reflow\n      void clickedSectionWrapper.offsetHeight;\n\n      // Transition to collapsed height\n      clickedSectionWrapper.style.height = `${rowHeight}px`;\n\n      // After transition completes\n      animationTimeoutRef.current = setTimeout(() => {\n        // Update state\n        setExpandedSection(null);\n\n        // Reset to auto height after a small delay\n        heightTransitionRef.current = setTimeout(() => {\n          clickedSectionWrapper.style.height = 'auto';\n          clickedSectionWrapper.classList.remove('smooth-height-transition');\n          if (subsectionsContainer) {\n            subsectionsContainer.classList.remove('collapse');\n          }\n\n          // Animation complete\n          setAnimatingLayout(false);\n        }, 50);\n      }, 400);\n      return;\n    }\n\n    // Case 2: Another section is expanded - collapse it first, then expand clicked section\n    if (expandedSection && previousSectionWrapper) {\n      // Prepare previous section for transition\n      previousSectionWrapper.classList.add('smooth-height-transition');\n      const previousCurrentHeight = previousSectionWrapper.offsetHeight;\n      const previousSectionRow = previousSectionWrapper.querySelector('.section-row');\n      const previousRowHeight = previousSectionRow.offsetHeight;\n\n      // Set initial fixed height on previous section\n      previousSectionWrapper.style.height = `${previousCurrentHeight}px`;\n\n      // Mark previous subsections for collapse\n      const previousSubsectionsContainer = previousSectionWrapper.querySelector('.subsections-container');\n      if (previousSubsectionsContainer) {\n        previousSubsectionsContainer.classList.add('collapse');\n      }\n\n      // Force reflow\n      void previousSectionWrapper.offsetHeight;\n\n      // Transition previous section to collapsed height\n      previousSectionWrapper.style.height = `${previousRowHeight}px`;\n\n      // Prepare clicked section for transition (but don't start expanding yet)\n      clickedSectionWrapper.classList.add('smooth-height-transition');\n      const clickedRowHeight = clickedSectionWrapper.querySelector('.section-row').offsetHeight;\n      clickedSectionWrapper.style.height = `${clickedRowHeight}px`;\n\n      // After previous section's collapse animation completes\n      animationTimeoutRef.current = setTimeout(() => {\n        // Update state to show the new section's content\n        setExpandedSection(sectionId);\n\n        // Small delay to ensure DOM updates with new content\n        heightTransitionRef.current = setTimeout(() => {\n          // Now calculate full height including the newly added subsections\n          const newFullHeight = calculateSectionHeight(clickedSectionWrapper);\n\n          // Transition to full height\n          clickedSectionWrapper.style.height = `${newFullHeight}px`;\n\n          // After transition completes\n          animationTimeoutRef.current = setTimeout(() => {\n            // Reset all sections to auto height\n            previousSectionWrapper.style.height = 'auto';\n            clickedSectionWrapper.style.height = 'auto';\n            previousSectionWrapper.classList.remove('smooth-height-transition');\n            clickedSectionWrapper.classList.remove('smooth-height-transition');\n            if (previousSubsectionsContainer) {\n              previousSubsectionsContainer.classList.remove('collapse');\n            }\n\n            // Animation complete\n            setAnimatingLayout(false);\n          }, 400);\n        }, 50);\n      }, 400);\n      return;\n    }\n\n    // Case 3: No section is expanded - just expand the clicked one\n    // Prepare clicked section for transition\n    clickedSectionWrapper.classList.add('smooth-height-transition');\n    const clickedRowHeight = clickedSectionWrapper.querySelector('.section-row').offsetHeight;\n    clickedSectionWrapper.style.height = `${clickedRowHeight}px`;\n\n    // Update state to show subsections\n    setExpandedSection(sectionId);\n\n    // Small delay to ensure DOM updates with new content\n    heightTransitionRef.current = setTimeout(() => {\n      // Calculate full height including subsections\n      const newFullHeight = calculateSectionHeight(clickedSectionWrapper);\n\n      // Transition to full height\n      clickedSectionWrapper.style.height = `${newFullHeight}px`;\n\n      // After transition completes\n      animationTimeoutRef.current = setTimeout(() => {\n        clickedSectionWrapper.style.height = 'auto';\n        clickedSectionWrapper.classList.remove('smooth-height-transition');\n\n        // Animation complete\n        setAnimatingLayout(false);\n      }, 400);\n    }, 50);\n  }, [expandedSection, mainSections, setAnimatingLayout, setExpandedSection, calculateSectionHeight, clearPendingAnimations]);\n\n  // Completely reworked subsection handler\n  const handleSubsectionHover = useCallback((sectionId, event) => {\n    // Make sure we have a valid event object\n    if (!event) return;\n    event.stopPropagation();\n    const isClickEvent = event.type === 'click';\n\n    // Only do animations for click events\n    if (isClickEvent) {\n      clearPendingAnimations();\n      setAnimatingLayout(true);\n\n      // Get DOM elements\n      const clickedSubsectionWrapper = document.querySelector(`.subsection-wrapper[data-id=\"${sectionId}\"]`);\n      const previousSubsectionWrapper = expandedSubsection ? document.querySelector(`.subsection-wrapper[data-id=\"${expandedSubsection}\"]`) : null;\n\n      // Case 1: Clicked already expanded subsection - collapse it\n      if (expandedSubsection === sectionId) {\n        // Prepare for transition\n        clickedSubsectionWrapper.classList.add('smooth-height-transition');\n        const currentHeight = clickedSubsectionWrapper.offsetHeight;\n        const subsectionRow = clickedSubsectionWrapper.querySelector('.subsection-row');\n        const rowHeight = subsectionRow.offsetHeight;\n\n        // Set initial fixed height\n        clickedSubsectionWrapper.style.height = `${currentHeight}px`;\n\n        // Mark nested subsections for collapse\n        const nestedSubsectionsContainer = clickedSubsectionWrapper.querySelector('.nested-subsections-container');\n        if (nestedSubsectionsContainer) {\n          nestedSubsectionsContainer.classList.add('collapse');\n        }\n\n        // Force reflow\n        void clickedSubsectionWrapper.offsetHeight;\n\n        // Transition to collapsed height\n        clickedSubsectionWrapper.style.height = `${rowHeight}px`;\n\n        // After transition completes\n        animationTimeoutRef.current = setTimeout(() => {\n          // Update state\n          setExpandedSubsection(null);\n\n          // Reset styles after small delay\n          heightTransitionRef.current = setTimeout(() => {\n            clickedSubsectionWrapper.style.height = 'auto';\n            clickedSubsectionWrapper.classList.remove('smooth-height-transition');\n            if (nestedSubsectionsContainer) {\n              nestedSubsectionsContainer.classList.remove('collapse');\n            }\n\n            // Animation complete\n            setAnimatingLayout(false);\n          }, 50);\n        }, 400);\n        return;\n      }\n\n      // Case 2: Another subsection is expanded - collapse it first, then expand clicked subsection\n      if (expandedSubsection && previousSubsectionWrapper) {\n        // Prepare previous subsection for transition\n        previousSubsectionWrapper.classList.add('smooth-height-transition');\n        const previousCurrentHeight = previousSubsectionWrapper.offsetHeight;\n        const previousSubsectionRow = previousSubsectionWrapper.querySelector('.subsection-row');\n        const previousRowHeight = previousSubsectionRow.offsetHeight;\n\n        // Set initial fixed height\n        previousSubsectionWrapper.style.height = `${previousCurrentHeight}px`;\n\n        // Mark previous nested subsections for collapse\n        const previousNestedContainer = previousSubsectionWrapper.querySelector('.nested-subsections-container');\n        if (previousNestedContainer) {\n          previousNestedContainer.classList.add('collapse');\n        }\n\n        // Force reflow\n        void previousSubsectionWrapper.offsetHeight;\n\n        // Transition to collapsed height\n        previousSubsectionWrapper.style.height = `${previousRowHeight}px`;\n\n        // Prepare clicked subsection (but don't expand yet)\n        clickedSubsectionWrapper.classList.add('smooth-height-transition');\n        const clickedRowHeight = clickedSubsectionWrapper.querySelector('.subsection-row').offsetHeight;\n        clickedSubsectionWrapper.style.height = `${clickedRowHeight}px`;\n\n        // After previous collapse completes\n        animationTimeoutRef.current = setTimeout(() => {\n          // Update state to show new nested subsections\n          setExpandedSubsection(sectionId);\n\n          // Small delay to ensure DOM updates\n          heightTransitionRef.current = setTimeout(() => {\n            // Calculate new full height\n            const subsectionRow = clickedSubsectionWrapper.querySelector('.subsection-row');\n            const nestedContainer = clickedSubsectionWrapper.querySelector('.nested-subsections-container');\n            const newHeight = subsectionRow.offsetHeight + ((nestedContainer === null || nestedContainer === void 0 ? void 0 : nestedContainer.offsetHeight) || 0);\n\n            // Transition to full height\n            clickedSubsectionWrapper.style.height = `${newHeight}px`;\n\n            // After transition completes\n            animationTimeoutRef.current = setTimeout(() => {\n              // Reset all subsections to auto height\n              previousSubsectionWrapper.style.height = 'auto';\n              clickedSubsectionWrapper.style.height = 'auto';\n              previousSubsectionWrapper.classList.remove('smooth-height-transition');\n              clickedSubsectionWrapper.classList.remove('smooth-height-transition');\n              if (previousNestedContainer) {\n                previousNestedContainer.classList.remove('collapse');\n              }\n\n              // Animation complete\n              setAnimatingLayout(false);\n            }, 400);\n          }, 50);\n        }, 400);\n        return;\n      }\n\n      // Case 3: No subsection expanded - just expand clicked one\n      clickedSubsectionWrapper.classList.add('smooth-height-transition');\n      const clickedRowHeight = clickedSubsectionWrapper.querySelector('.subsection-row').offsetHeight;\n      clickedSubsectionWrapper.style.height = `${clickedRowHeight}px`;\n\n      // Update state to show nested subsections\n      setExpandedSubsection(sectionId);\n\n      // Small delay to ensure DOM updates\n      heightTransitionRef.current = setTimeout(() => {\n        // Calculate full height with nested subsections\n        const subsectionRow = clickedSubsectionWrapper.querySelector('.subsection-row');\n        const nestedContainer = clickedSubsectionWrapper.querySelector('.nested-subsections-container');\n        const newHeight = subsectionRow.offsetHeight + ((nestedContainer === null || nestedContainer === void 0 ? void 0 : nestedContainer.offsetHeight) || 0);\n\n        // Transition to full height\n        clickedSubsectionWrapper.style.height = `${newHeight}px`;\n\n        // After transition completes\n        animationTimeoutRef.current = setTimeout(() => {\n          clickedSubsectionWrapper.style.height = 'auto';\n          clickedSubsectionWrapper.classList.remove('smooth-height-transition');\n\n          // Animation complete\n          setAnimatingLayout(false);\n        }, 400);\n      }, 50);\n    } else {\n      // For non-click events (hover), just update state without animations\n      if (expandedSubsection !== sectionId) {\n        setExpandedSubsection(sectionId);\n      }\n    }\n  }, [expandedSubsection, setExpandedSubsection, setAnimatingLayout, clearPendingAnimations]);\n\n  // Handle section leave\n  const handleSectionLeave = () => {\n    setActiveSection(null);\n  };\n\n  // Render SVG icons for main sections\n  const renderIcon = iconType => {\n    switch (iconType) {\n      case 'circles':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-container\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"42\",\n            height: \"42\",\n            viewBox: \"0 0 42 42\",\n            fill: \"none\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"21\",\n              cy: \"21\",\n              r: \"14\",\n              stroke: \"#A08E61\",\n              strokeWidth: \"1.5\",\n              opacity: \"0.9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"16\",\n              cy: \"21\",\n              r: \"9\",\n              stroke: \"#A08E61\",\n              strokeWidth: \"1.5\",\n              opacity: \"0.7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"26\",\n              cy: \"21\",\n              r: \"9\",\n              stroke: \"#A08E61\",\n              strokeWidth: \"1.5\",\n              opacity: \"0.7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this);\n      case 'triangle':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-container\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"42\",\n            height: \"42\",\n            viewBox: \"0 0 42 42\",\n            fill: \"none\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M21 7L35 32H7L21 7Z\",\n              stroke: \"#A08E61\",\n              strokeWidth: \"1.5\",\n              opacity: \"0.9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this);\n      case 'targetCircle':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-container\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"42\",\n            height: \"42\",\n            viewBox: \"0 0 42 42\",\n            fill: \"none\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"21\",\n              cy: \"21\",\n              r: \"14\",\n              stroke: \"#A08E61\",\n              strokeWidth: \"1.5\",\n              opacity: \"0.9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"21\",\n              cy: \"21\",\n              r: \"5\",\n              fill: \"#A08E61\",\n              opacity: \"0.7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: sectionsContainerRef,\n    className: `sections-container ${animatingLayout ? 'animating' : ''}`,\n    children: mainSections.map((section, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `section-wrapper ${expandedSection === section.id ? 'expanded-section' : ''}`,\n      \"data-id\": section.id,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `section-row ${activeSection === section.id ? 'active' : ''} ${expandedSection === section.id ? 'expanded' : ''}`,\n        onMouseEnter: () => handleSectionHover(section.id),\n        onMouseLeave: handleSectionLeave,\n        onClick: e => {\n          if (section.expandable) {\n            handleSectionClick(section.id, e);\n          } else {\n            handleNavigate(section.path, e);\n          }\n        },\n        style: {\n          animationDelay: `${index * 0.15 + 0.3}s`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-icon-wrapper\",\n            children: renderIcon(section.icon)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"section-title\",\n              children: section.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"section-description\",\n              children: section.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 15\n          }, this), section.expandable && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `expand-indicator ${expandedSection === section.id ? 'expanded' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"16\",\n              height: \"16\",\n              viewBox: \"0 0 16 16\",\n              fill: \"none\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M4 6L8 10L12 6\",\n                stroke: \"#A08E61\",\n                strokeWidth: \"1.5\",\n                strokeLinecap: \"round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"diagonal-cut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }, this), section.expandable && expandedSection === section.id && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subsections-container\",\n        children: section.subsections.map(subsection => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `subsection-wrapper ${expandedSubsection === subsection.id ? 'expanded-subsection' : ''}`,\n          \"data-id\": subsection.id,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `subsection-row ${expandedSubsection === subsection.id ? 'active' : ''}`,\n            onMouseEnter: e => handleSubsectionHover(subsection.id, e),\n            onClick: e => subsection.expandable ? handleSubsectionHover(subsection.id, e) : handleNavigate(subsection.path, e),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"subsection-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"subsection-title\",\n                children: subsection.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"subsection-description\",\n                children: subsection.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 23\n              }, this), subsection.expandable && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `expand-indicator small ${expandedSubsection === subsection.id ? 'expanded' : ''}`,\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  width: \"12\",\n                  height: \"12\",\n                  viewBox: \"0 0 16 16\",\n                  fill: \"none\",\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M4 6L8 10L12 6\",\n                    stroke: \"#A08E61\",\n                    strokeWidth: \"1.5\",\n                    strokeLinecap: \"round\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 19\n          }, this), subsection.expandable && expandedSubsection === subsection.id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nested-subsections-container\",\n            children: subsection.subsections.map(nestedSubsection => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nested-subsection-row\",\n              onClick: e => handleNavigate(nestedSubsection.path, e),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"nested-subsection-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"nested-subsection-title\",\n                  children: nestedSubsection.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"nested-subsection-description\",\n                  children: nestedSubsection.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 27\n              }, this)\n            }, nestedSubsection.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 21\n          }, this)]\n        }, subsection.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 13\n      }, this)]\n    }, section.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 421,\n    columnNumber: 5\n  }, this);\n};\n_s(LandingNavigation, \"eMfQbCJ8CkZaBRSBdc3PLWt06aM=\");\n_c = LandingNavigation;\nexport default LandingNavigation;\nvar _c;\n$RefreshReg$(_c, \"LandingNavigation\");","map":{"version":3,"names":["React","useRef","useCallback","jsxDEV","_jsxDEV","LandingNavigation","mainSections","activeSection","expandedSection","expandedSubsection","animatingLayout","setActiveSection","setExpandedSection","setExpandedSubsection","setAnimatingLayout","_s","sectionsContainerRef","animationTimeoutRef","heightTransitionRef","handleNavigate","path","event","isExpandable","preventDefault","stopPropagation","console","log","handleSectionHover","sectionId","clearPendingAnimations","current","clearTimeout","calculateSectionHeight","sectionWrapper","sectionRow","querySelector","subsectionsContainer","rowHeight","offsetHeight","subsectionsHeight","handleSectionClick","section","find","id","expandable","clickedSectionWrapper","document","previousSectionWrapper","classList","add","currentHeight","style","height","setTimeout","remove","previousCurrentHeight","previousSectionRow","previousRowHeight","previousSubsectionsContainer","clickedRowHeight","newFullHeight","handleSubsectionHover","isClickEvent","type","clickedSubsectionWrapper","previousSubsectionWrapper","subsectionRow","nestedSubsectionsContainer","previousSubsectionRow","previousNestedContainer","nestedContainer","newHeight","handleSectionLeave","renderIcon","iconType","className","children","width","viewBox","fill","xmlns","cx","cy","r","stroke","strokeWidth","opacity","fileName","_jsxFileName","lineNumber","columnNumber","d","ref","map","index","onMouseEnter","onMouseLeave","onClick","e","animationDelay","icon","title","description","strokeLinecap","subsections","subsection","nestedSubsection","_c","$RefreshReg$"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/sections/landing/LandingNavigation.js"],"sourcesContent":["import React, { useRef, useCallback } from 'react';\nimport './landingNavigation.css';\n\nconst LandingNavigation = ({ \n  mainSections, \n  activeSection, \n  expandedSection, \n  expandedSubsection,\n  animatingLayout,\n  setActiveSection, \n  setExpandedSection, \n  setExpandedSubsection,\n  setAnimatingLayout\n}) => {\n  const sectionsContainerRef = useRef(null);\n  const animationTimeoutRef = useRef(null);\n  const heightTransitionRef = useRef(null);\n\n  // Navigate to section\n  const handleNavigate = (path, event, isExpandable) => {\n    if (isExpandable) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n    \n    // For demo purposes, just log the navigation\n    console.log(`Navigating to: ${path}`);\n    // In a real app, you'd use your routing library:\n    // window.location.href = path; or history.push(path);\n  };\n  \n  // Handle section hover\n  const handleSectionHover = (sectionId) => {\n    setActiveSection(sectionId);\n  };\n  \n  // Clear any pending timeouts to prevent animation conflicts\n  const clearPendingAnimations = useCallback(() => {\n    if (animationTimeoutRef.current) {\n      clearTimeout(animationTimeoutRef.current);\n      animationTimeoutRef.current = null;\n    }\n    if (heightTransitionRef.current) {\n      clearTimeout(heightTransitionRef.current);\n      heightTransitionRef.current = null;\n    }\n  }, []);\n\n  // Calculate section height precisely\n  const calculateSectionHeight = useCallback((sectionWrapper) => {\n    if (!sectionWrapper) return 0;\n    \n    const sectionRow = sectionWrapper.querySelector('.section-row');\n    const subsectionsContainer = sectionWrapper.querySelector('.subsections-container');\n    \n    if (!sectionRow) return 0;\n    \n    const rowHeight = sectionRow.offsetHeight;\n    const subsectionsHeight = subsectionsContainer ? subsectionsContainer.offsetHeight : 0;\n    \n    return rowHeight + subsectionsHeight;\n  }, []);\n  \n  // Handle section click - for expanding sections - complete rewrite\n  const handleSectionClick = useCallback((sectionId, event) => {\n    const section = mainSections.find(section => section.id === sectionId);\n    if (!section || !section.expandable) return;\n    \n    event.stopPropagation();\n    clearPendingAnimations();\n    \n    // Set animating flag to true\n    setAnimatingLayout(true);\n    \n    // Get all necessary DOM elements\n    const clickedSectionWrapper = document.querySelector(`.section-wrapper[data-id=\"${sectionId}\"]`);\n    const previousSectionWrapper = expandedSection ? \n      document.querySelector(`.section-wrapper[data-id=\"${expandedSection}\"]`) : null;\n    \n    // Case 1: Clicked on already expanded section - collapse it\n    if (expandedSection === sectionId) {\n      // Prepare for height transition\n      clickedSectionWrapper.classList.add('smooth-height-transition');\n      const currentHeight = clickedSectionWrapper.offsetHeight;\n      const sectionRow = clickedSectionWrapper.querySelector('.section-row');\n      const rowHeight = sectionRow.offsetHeight;\n      \n      // Set initial fixed height\n      clickedSectionWrapper.style.height = `${currentHeight}px`;\n      \n      // Mark subsections for collapse transition\n      const subsectionsContainer = clickedSectionWrapper.querySelector('.subsections-container');\n      if (subsectionsContainer) {\n        subsectionsContainer.classList.add('collapse');\n      }\n      \n      // Force reflow\n      void clickedSectionWrapper.offsetHeight;\n      \n      // Transition to collapsed height\n      clickedSectionWrapper.style.height = `${rowHeight}px`;\n      \n      // After transition completes\n      animationTimeoutRef.current = setTimeout(() => {\n        // Update state\n        setExpandedSection(null);\n        \n        // Reset to auto height after a small delay\n        heightTransitionRef.current = setTimeout(() => {\n          clickedSectionWrapper.style.height = 'auto';\n          clickedSectionWrapper.classList.remove('smooth-height-transition');\n          \n          if (subsectionsContainer) {\n            subsectionsContainer.classList.remove('collapse');\n          }\n          \n          // Animation complete\n          setAnimatingLayout(false);\n        }, 50);\n      }, 400);\n      \n      return;\n    }\n    \n    // Case 2: Another section is expanded - collapse it first, then expand clicked section\n    if (expandedSection && previousSectionWrapper) {\n      // Prepare previous section for transition\n      previousSectionWrapper.classList.add('smooth-height-transition');\n      const previousCurrentHeight = previousSectionWrapper.offsetHeight;\n      const previousSectionRow = previousSectionWrapper.querySelector('.section-row');\n      const previousRowHeight = previousSectionRow.offsetHeight;\n      \n      // Set initial fixed height on previous section\n      previousSectionWrapper.style.height = `${previousCurrentHeight}px`;\n      \n      // Mark previous subsections for collapse\n      const previousSubsectionsContainer = previousSectionWrapper.querySelector('.subsections-container');\n      if (previousSubsectionsContainer) {\n        previousSubsectionsContainer.classList.add('collapse');\n      }\n      \n      // Force reflow\n      void previousSectionWrapper.offsetHeight;\n      \n      // Transition previous section to collapsed height\n      previousSectionWrapper.style.height = `${previousRowHeight}px`;\n      \n      // Prepare clicked section for transition (but don't start expanding yet)\n      clickedSectionWrapper.classList.add('smooth-height-transition');\n      const clickedRowHeight = clickedSectionWrapper.querySelector('.section-row').offsetHeight;\n      clickedSectionWrapper.style.height = `${clickedRowHeight}px`;\n      \n      // After previous section's collapse animation completes\n      animationTimeoutRef.current = setTimeout(() => {\n        // Update state to show the new section's content\n        setExpandedSection(sectionId);\n        \n        // Small delay to ensure DOM updates with new content\n        heightTransitionRef.current = setTimeout(() => {\n          // Now calculate full height including the newly added subsections\n          const newFullHeight = calculateSectionHeight(clickedSectionWrapper);\n          \n          // Transition to full height\n          clickedSectionWrapper.style.height = `${newFullHeight}px`;\n          \n          // After transition completes\n          animationTimeoutRef.current = setTimeout(() => {\n            // Reset all sections to auto height\n            previousSectionWrapper.style.height = 'auto';\n            clickedSectionWrapper.style.height = 'auto';\n            \n            previousSectionWrapper.classList.remove('smooth-height-transition');\n            clickedSectionWrapper.classList.remove('smooth-height-transition');\n            \n            if (previousSubsectionsContainer) {\n              previousSubsectionsContainer.classList.remove('collapse');\n            }\n            \n            // Animation complete\n            setAnimatingLayout(false);\n          }, 400);\n        }, 50);\n      }, 400);\n      \n      return;\n    }\n    \n    // Case 3: No section is expanded - just expand the clicked one\n    // Prepare clicked section for transition\n    clickedSectionWrapper.classList.add('smooth-height-transition');\n    const clickedRowHeight = clickedSectionWrapper.querySelector('.section-row').offsetHeight;\n    clickedSectionWrapper.style.height = `${clickedRowHeight}px`;\n    \n    // Update state to show subsections\n    setExpandedSection(sectionId);\n    \n    // Small delay to ensure DOM updates with new content\n    heightTransitionRef.current = setTimeout(() => {\n      // Calculate full height including subsections\n      const newFullHeight = calculateSectionHeight(clickedSectionWrapper);\n      \n      // Transition to full height\n      clickedSectionWrapper.style.height = `${newFullHeight}px`;\n      \n      // After transition completes\n      animationTimeoutRef.current = setTimeout(() => {\n        clickedSectionWrapper.style.height = 'auto';\n        clickedSectionWrapper.classList.remove('smooth-height-transition');\n        \n        // Animation complete\n        setAnimatingLayout(false);\n      }, 400);\n    }, 50);\n  }, [expandedSection, mainSections, setAnimatingLayout, setExpandedSection, calculateSectionHeight, clearPendingAnimations]);\n  \n  // Completely reworked subsection handler\n  const handleSubsectionHover = useCallback((sectionId, event) => {\n    // Make sure we have a valid event object\n    if (!event) return;\n    \n    event.stopPropagation();\n    const isClickEvent = event.type === 'click';\n    \n    // Only do animations for click events\n    if (isClickEvent) {\n      clearPendingAnimations();\n      setAnimatingLayout(true);\n      \n      // Get DOM elements\n      const clickedSubsectionWrapper = document.querySelector(`.subsection-wrapper[data-id=\"${sectionId}\"]`);\n      const previousSubsectionWrapper = expandedSubsection ? \n        document.querySelector(`.subsection-wrapper[data-id=\"${expandedSubsection}\"]`) : null;\n      \n      // Case 1: Clicked already expanded subsection - collapse it\n      if (expandedSubsection === sectionId) {\n        // Prepare for transition\n        clickedSubsectionWrapper.classList.add('smooth-height-transition');\n        const currentHeight = clickedSubsectionWrapper.offsetHeight;\n        const subsectionRow = clickedSubsectionWrapper.querySelector('.subsection-row');\n        const rowHeight = subsectionRow.offsetHeight;\n        \n        // Set initial fixed height\n        clickedSubsectionWrapper.style.height = `${currentHeight}px`;\n        \n        // Mark nested subsections for collapse\n        const nestedSubsectionsContainer = clickedSubsectionWrapper.querySelector('.nested-subsections-container');\n        if (nestedSubsectionsContainer) {\n          nestedSubsectionsContainer.classList.add('collapse');\n        }\n        \n        // Force reflow\n        void clickedSubsectionWrapper.offsetHeight;\n        \n        // Transition to collapsed height\n        clickedSubsectionWrapper.style.height = `${rowHeight}px`;\n        \n        // After transition completes\n        animationTimeoutRef.current = setTimeout(() => {\n          // Update state\n          setExpandedSubsection(null);\n          \n          // Reset styles after small delay\n          heightTransitionRef.current = setTimeout(() => {\n            clickedSubsectionWrapper.style.height = 'auto';\n            clickedSubsectionWrapper.classList.remove('smooth-height-transition');\n            \n            if (nestedSubsectionsContainer) {\n              nestedSubsectionsContainer.classList.remove('collapse');\n            }\n            \n            // Animation complete\n            setAnimatingLayout(false);\n          }, 50);\n        }, 400);\n        \n        return;\n      }\n      \n      // Case 2: Another subsection is expanded - collapse it first, then expand clicked subsection\n      if (expandedSubsection && previousSubsectionWrapper) {\n        // Prepare previous subsection for transition\n        previousSubsectionWrapper.classList.add('smooth-height-transition');\n        const previousCurrentHeight = previousSubsectionWrapper.offsetHeight;\n        const previousSubsectionRow = previousSubsectionWrapper.querySelector('.subsection-row');\n        const previousRowHeight = previousSubsectionRow.offsetHeight;\n        \n        // Set initial fixed height\n        previousSubsectionWrapper.style.height = `${previousCurrentHeight}px`;\n        \n        // Mark previous nested subsections for collapse\n        const previousNestedContainer = previousSubsectionWrapper.querySelector('.nested-subsections-container');\n        if (previousNestedContainer) {\n          previousNestedContainer.classList.add('collapse');\n        }\n        \n        // Force reflow\n        void previousSubsectionWrapper.offsetHeight;\n        \n        // Transition to collapsed height\n        previousSubsectionWrapper.style.height = `${previousRowHeight}px`;\n        \n        // Prepare clicked subsection (but don't expand yet)\n        clickedSubsectionWrapper.classList.add('smooth-height-transition');\n        const clickedRowHeight = clickedSubsectionWrapper.querySelector('.subsection-row').offsetHeight;\n        clickedSubsectionWrapper.style.height = `${clickedRowHeight}px`;\n        \n        // After previous collapse completes\n        animationTimeoutRef.current = setTimeout(() => {\n          // Update state to show new nested subsections\n          setExpandedSubsection(sectionId);\n          \n          // Small delay to ensure DOM updates\n          heightTransitionRef.current = setTimeout(() => {\n            // Calculate new full height\n            const subsectionRow = clickedSubsectionWrapper.querySelector('.subsection-row');\n            const nestedContainer = clickedSubsectionWrapper.querySelector('.nested-subsections-container');\n            const newHeight = subsectionRow.offsetHeight + (nestedContainer?.offsetHeight || 0);\n            \n            // Transition to full height\n            clickedSubsectionWrapper.style.height = `${newHeight}px`;\n            \n            // After transition completes\n            animationTimeoutRef.current = setTimeout(() => {\n              // Reset all subsections to auto height\n              previousSubsectionWrapper.style.height = 'auto';\n              clickedSubsectionWrapper.style.height = 'auto';\n              \n              previousSubsectionWrapper.classList.remove('smooth-height-transition');\n              clickedSubsectionWrapper.classList.remove('smooth-height-transition');\n              \n              if (previousNestedContainer) {\n                previousNestedContainer.classList.remove('collapse');\n              }\n              \n              // Animation complete\n              setAnimatingLayout(false);\n            }, 400);\n          }, 50);\n        }, 400);\n        \n        return;\n      }\n      \n      // Case 3: No subsection expanded - just expand clicked one\n      clickedSubsectionWrapper.classList.add('smooth-height-transition');\n      const clickedRowHeight = clickedSubsectionWrapper.querySelector('.subsection-row').offsetHeight;\n      clickedSubsectionWrapper.style.height = `${clickedRowHeight}px`;\n      \n      // Update state to show nested subsections\n      setExpandedSubsection(sectionId);\n      \n      // Small delay to ensure DOM updates\n      heightTransitionRef.current = setTimeout(() => {\n        // Calculate full height with nested subsections\n        const subsectionRow = clickedSubsectionWrapper.querySelector('.subsection-row');\n        const nestedContainer = clickedSubsectionWrapper.querySelector('.nested-subsections-container');\n        const newHeight = subsectionRow.offsetHeight + (nestedContainer?.offsetHeight || 0);\n        \n        // Transition to full height\n        clickedSubsectionWrapper.style.height = `${newHeight}px`;\n        \n        // After transition completes\n        animationTimeoutRef.current = setTimeout(() => {\n          clickedSubsectionWrapper.style.height = 'auto';\n          clickedSubsectionWrapper.classList.remove('smooth-height-transition');\n          \n          // Animation complete\n          setAnimatingLayout(false);\n        }, 400);\n      }, 50);\n    } else {\n      // For non-click events (hover), just update state without animations\n      if (expandedSubsection !== sectionId) {\n        setExpandedSubsection(sectionId);\n      }\n    }\n  }, [expandedSubsection, setExpandedSubsection, setAnimatingLayout, clearPendingAnimations]);\n  \n  // Handle section leave\n  const handleSectionLeave = () => {\n    setActiveSection(null);\n  };\n\n  // Render SVG icons for main sections\n  const renderIcon = (iconType) => {\n    switch(iconType) {\n      case 'circles':\n        return (\n          <div className=\"icon-container\">\n            <svg width=\"42\" height=\"42\" viewBox=\"0 0 42 42\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <circle cx=\"21\" cy=\"21\" r=\"14\" stroke=\"#A08E61\" strokeWidth=\"1.5\" opacity=\"0.9\" />\n              <circle cx=\"16\" cy=\"21\" r=\"9\" stroke=\"#A08E61\" strokeWidth=\"1.5\" opacity=\"0.7\" />\n              <circle cx=\"26\" cy=\"21\" r=\"9\" stroke=\"#A08E61\" strokeWidth=\"1.5\" opacity=\"0.7\" />\n            </svg>\n          </div>\n        );\n      case 'triangle':\n        return (\n          <div className=\"icon-container\">\n            <svg width=\"42\" height=\"42\" viewBox=\"0 0 42 42\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M21 7L35 32H7L21 7Z\" stroke=\"#A08E61\" strokeWidth=\"1.5\" opacity=\"0.9\" />\n            </svg>\n          </div>\n        );\n      case 'targetCircle':\n        return (\n          <div className=\"icon-container\">\n            <svg width=\"42\" height=\"42\" viewBox=\"0 0 42 42\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <circle cx=\"21\" cy=\"21\" r=\"14\" stroke=\"#A08E61\" strokeWidth=\"1.5\" opacity=\"0.9\" />\n              <circle cx=\"21\" cy=\"21\" r=\"5\" fill=\"#A08E61\" opacity=\"0.7\" />\n            </svg>\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n  \n  return (\n    <div \n      ref={sectionsContainerRef}\n      className={`sections-container ${animatingLayout ? 'animating' : ''}`}\n    >\n      {mainSections.map((section, index) => (\n        <div \n          key={section.id} \n          className={`section-wrapper ${expandedSection === section.id ? 'expanded-section' : ''}`} \n          data-id={section.id}\n        >\n          <div \n            className={`section-row ${activeSection === section.id ? 'active' : ''} ${expandedSection === section.id ? 'expanded' : ''}`}\n            onMouseEnter={() => handleSectionHover(section.id)}\n            onMouseLeave={handleSectionLeave}\n            onClick={(e) => {\n              if (section.expandable) {\n                handleSectionClick(section.id, e);\n              } else {\n                handleNavigate(section.path, e);\n              }\n            }}\n            style={{ animationDelay: `${index * 0.15 + 0.3}s` }}\n          >\n            <div className=\"section-content\">\n              <div className=\"section-icon-wrapper\">\n                {renderIcon(section.icon)}\n              </div>\n              <div className=\"section-text\">\n                <h2 className=\"section-title\">{section.title}</h2>\n                <p className=\"section-description\">{section.description}</p>\n              </div>\n              {section.expandable && (\n                <div className={`expand-indicator ${expandedSection === section.id ? 'expanded' : ''}`}>\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M4 6L8 10L12 6\" stroke=\"#A08E61\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n                  </svg>\n                </div>\n              )}\n            </div>\n            <div className=\"diagonal-cut\" />\n          </div>\n          \n          {/* Expandable Subsections */}\n          {section.expandable && expandedSection === section.id && (\n            <div className=\"subsections-container\">\n              {section.subsections.map((subsection) => (\n                <div \n                  key={subsection.id} \n                  className={`subsection-wrapper ${expandedSubsection === subsection.id ? 'expanded-subsection' : ''}`} \n                  data-id={subsection.id}\n                >\n                  <div \n                    className={`subsection-row ${expandedSubsection === subsection.id ? 'active' : ''}`}\n                    onMouseEnter={(e) => handleSubsectionHover(subsection.id, e)}\n                    onClick={(e) => subsection.expandable ? handleSubsectionHover(subsection.id, e) : handleNavigate(subsection.path, e)}\n                  >\n                    <div className=\"subsection-content\">\n                      <h3 className=\"subsection-title\">{subsection.title}</h3>\n                      <p className=\"subsection-description\">{subsection.description}</p>\n                      {subsection.expandable && (\n                        <div className={`expand-indicator small ${expandedSubsection === subsection.id ? 'expanded' : ''}`}>\n                          <svg width=\"12\" height=\"12\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M4 6L8 10L12 6\" stroke=\"#A08E61\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n                          </svg>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  \n                  {/* Nested Subsections */}\n                  {subsection.expandable && expandedSubsection === subsection.id && (\n                    <div className=\"nested-subsections-container\">\n                      {subsection.subsections.map((nestedSubsection) => (\n                        <div \n                          key={nestedSubsection.id}\n                          className=\"nested-subsection-row\"\n                          onClick={(e) => handleNavigate(nestedSubsection.path, e)}\n                        >\n                          <div className=\"nested-subsection-content\">\n                            <h4 className=\"nested-subsection-title\">{nestedSubsection.title}</h4>\n                            <p className=\"nested-subsection-description\">{nestedSubsection.description}</p>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default LandingNavigation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}