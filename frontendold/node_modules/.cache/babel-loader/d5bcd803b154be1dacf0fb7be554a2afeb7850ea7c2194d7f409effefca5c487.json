{"ast":null,"code":"var _jsxFileName = \"/home/valeria/Documents/Crucible/frontend/src/components/core/effects/ScrollingTextAnimation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { motion, useScroll, useTransform } from 'framer-motion';\nimport { createUseStyles } from 'react-jss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  animatedContainer: {\n    position: 'relative',\n    width: '100%',\n    textAlign: props => props.textAlign || 'center',\n    margin: props => props.margin || '0 0 3rem 0',\n    zIndex: 2\n  },\n  content: {\n    width: '100%'\n  },\n  divider: props => ({\n    width: props.dividerWidth || '150px',\n    height: props.dividerHeight || '1px',\n    background: props.dividerBackground || 'linear-gradient(to right, rgba(160, 142, 97, 0), rgba(160, 142, 97, 0.6), rgba(160, 142, 97, 0))',\n    margin: props.dividerMargin || '1rem auto',\n    display: props.showDivider ? 'block' : 'none'\n  })\n});\n\n/**\n * ScrollingTextAnimation Component\n * \n * A highly customizable component that creates a scroll-based animation\n * for text elements. The text can move and change opacity as the user scrolls.\n * \n * @param {Object} props - Component props\n * @param {ReactNode} props.children - Content to animate\n * @param {Object} [props.scrollConfig] - Scroll animation configuration\n * @param {number} [props.scrollConfig.startPosition=0] - Starting scroll position in pixels\n * @param {number} [props.scrollConfig.endPosition=300] - Ending scroll position in pixels\n * @param {number} [props.scrollConfig.initialY=-100] - Initial Y position (pixels above final position)\n * @param {number} [props.scrollConfig.finalY=0] - Final Y position (pixels)\n * @param {boolean} [props.scrollConfig.clampValues=true] - Whether to clamp transform values\n * @param {Array} [props.scrollConfig.opacityValues=[1, 0.95, 0.9]] - Opacity values at different scroll positions\n * @param {Array} [props.scrollConfig.opacityScrollPositions] - Scroll positions for opacity changes (computed by default)\n * @param {boolean} [props.scrollConfig.reverseDirection=false] - Whether to reverse the animation direction\n * @param {string} [props.textAlign='center'] - Text alignment\n * @param {string} [props.margin='0 0 3rem 0'] - Container margin\n * @param {boolean} [props.showDivider=true] - Whether to show a divider below the content\n * @param {string} [props.dividerWidth='150px'] - Width of the divider\n * @param {string} [props.dividerHeight='1px'] - Height of the divider\n * @param {string} [props.dividerBackground] - Background style for the divider\n * @param {string} [props.dividerMargin='1rem auto'] - Margin for the divider\n * @param {Object} [props.style] - Additional inline styles\n * @param {string} [props.className] - Additional CSS class\n */\nconst ScrollingTextAnimation = ({\n  children,\n  scrollConfig = {},\n  textAlign = 'center',\n  margin = '0 0 3rem 0',\n  showDivider = true,\n  dividerWidth = '150px',\n  dividerHeight = '1px',\n  dividerBackground,\n  dividerMargin = '1rem auto',\n  style = {},\n  className = ''\n}) => {\n  _s();\n  // Set default scroll configuration\n  const {\n    startPosition = 0,\n    endPosition = 300,\n    initialY = -100,\n    finalY = 0,\n    clampValues = true,\n    opacityValues = [1, 0.95, 0.9],\n    opacityScrollPositions = [startPosition, endPosition, endPosition + 100],\n    reverseDirection = false\n  } = scrollConfig;\n\n  // Calculate the actual Y values considering direction\n  const yInputRange = [startPosition, endPosition];\n  const yOutputRange = reverseDirection ? [finalY, initialY] : [initialY, finalY];\n\n  // Set up scroll tracking\n  const {\n    scrollY\n  } = useScroll();\n  const containerRef = useRef(null);\n\n  // Create transform values based on scroll position\n  const translateY = useTransform(scrollY, yInputRange, yOutputRange, {\n    clamp: clampValues\n  });\n\n  // Create opacity transform\n  const opacity = useTransform(scrollY, opacityScrollPositions, opacityValues, {\n    clamp: clampValues\n  });\n\n  // Create styles for component\n  const styleProps = {\n    textAlign,\n    margin,\n    showDivider,\n    dividerWidth,\n    dividerHeight,\n    dividerBackground,\n    dividerMargin\n  };\n  const classes = useStyles(styleProps);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    ref: containerRef,\n    className: `${classes.animatedContainer} ${className}`,\n    style: {\n      ...style,\n      y: translateY,\n      opacity: opacity\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), showDivider && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.divider\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrollingTextAnimation, \"vNyNWm1Yr4uSKm7S9iFGF3Ym2HA=\", false, function () {\n  return [useScroll, useTransform, useTransform, useStyles];\n});\n_c = ScrollingTextAnimation;\nexport default ScrollingTextAnimation;\nvar _c;\n$RefreshReg$(_c, \"ScrollingTextAnimation\");","map":{"version":3,"names":["React","useRef","motion","useScroll","useTransform","createUseStyles","jsxDEV","_jsxDEV","useStyles","animatedContainer","position","width","textAlign","props","margin","zIndex","content","divider","dividerWidth","height","dividerHeight","background","dividerBackground","dividerMargin","display","showDivider","ScrollingTextAnimation","children","scrollConfig","style","className","_s","startPosition","endPosition","initialY","finalY","clampValues","opacityValues","opacityScrollPositions","reverseDirection","yInputRange","yOutputRange","scrollY","containerRef","translateY","clamp","opacity","styleProps","classes","div","ref","y","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/core/effects/ScrollingTextAnimation.jsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { motion, useScroll, useTransform } from 'framer-motion';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  animatedContainer: {\n    position: 'relative',\n    width: '100%',\n    textAlign: props => props.textAlign || 'center',\n    margin: props => props.margin || '0 0 3rem 0',\n    zIndex: 2\n  },\n  content: {\n    width: '100%'\n  },\n  divider: props => ({\n    width: props.dividerWidth || '150px',\n    height: props.dividerHeight || '1px',\n    background: props.dividerBackground || 'linear-gradient(to right, rgba(160, 142, 97, 0), rgba(160, 142, 97, 0.6), rgba(160, 142, 97, 0))',\n    margin: props.dividerMargin || '1rem auto',\n    display: props.showDivider ? 'block' : 'none'\n  })\n});\n\n/**\n * ScrollingTextAnimation Component\n * \n * A highly customizable component that creates a scroll-based animation\n * for text elements. The text can move and change opacity as the user scrolls.\n * \n * @param {Object} props - Component props\n * @param {ReactNode} props.children - Content to animate\n * @param {Object} [props.scrollConfig] - Scroll animation configuration\n * @param {number} [props.scrollConfig.startPosition=0] - Starting scroll position in pixels\n * @param {number} [props.scrollConfig.endPosition=300] - Ending scroll position in pixels\n * @param {number} [props.scrollConfig.initialY=-100] - Initial Y position (pixels above final position)\n * @param {number} [props.scrollConfig.finalY=0] - Final Y position (pixels)\n * @param {boolean} [props.scrollConfig.clampValues=true] - Whether to clamp transform values\n * @param {Array} [props.scrollConfig.opacityValues=[1, 0.95, 0.9]] - Opacity values at different scroll positions\n * @param {Array} [props.scrollConfig.opacityScrollPositions] - Scroll positions for opacity changes (computed by default)\n * @param {boolean} [props.scrollConfig.reverseDirection=false] - Whether to reverse the animation direction\n * @param {string} [props.textAlign='center'] - Text alignment\n * @param {string} [props.margin='0 0 3rem 0'] - Container margin\n * @param {boolean} [props.showDivider=true] - Whether to show a divider below the content\n * @param {string} [props.dividerWidth='150px'] - Width of the divider\n * @param {string} [props.dividerHeight='1px'] - Height of the divider\n * @param {string} [props.dividerBackground] - Background style for the divider\n * @param {string} [props.dividerMargin='1rem auto'] - Margin for the divider\n * @param {Object} [props.style] - Additional inline styles\n * @param {string} [props.className] - Additional CSS class\n */\nconst ScrollingTextAnimation = ({\n  children,\n  scrollConfig = {},\n  textAlign = 'center',\n  margin = '0 0 3rem 0',\n  showDivider = true,\n  dividerWidth = '150px',\n  dividerHeight = '1px',\n  dividerBackground,\n  dividerMargin = '1rem auto',\n  style = {},\n  className = ''\n}) => {\n  // Set default scroll configuration\n  const {\n    startPosition = 0,\n    endPosition = 300,\n    initialY = -100,\n    finalY = 0,\n    clampValues = true,\n    opacityValues = [1, 0.95, 0.9],\n    opacityScrollPositions = [startPosition, endPosition, endPosition + 100],\n    reverseDirection = false\n  } = scrollConfig;\n\n  // Calculate the actual Y values considering direction\n  const yInputRange = [startPosition, endPosition];\n  const yOutputRange = reverseDirection ? [finalY, initialY] : [initialY, finalY];\n  \n  // Set up scroll tracking\n  const { scrollY } = useScroll();\n  const containerRef = useRef(null);\n  \n  // Create transform values based on scroll position\n  const translateY = useTransform(\n    scrollY,\n    yInputRange,\n    yOutputRange,\n    { clamp: clampValues }\n  );\n  \n  // Create opacity transform\n  const opacity = useTransform(\n    scrollY,\n    opacityScrollPositions,\n    opacityValues,\n    { clamp: clampValues }\n  );\n  \n  // Create styles for component\n  const styleProps = {\n    textAlign,\n    margin,\n    showDivider,\n    dividerWidth,\n    dividerHeight,\n    dividerBackground,\n    dividerMargin\n  };\n  \n  const classes = useStyles(styleProps);\n  \n  return (\n    <motion.div \n      ref={containerRef}\n      className={`${classes.animatedContainer} ${className}`}\n      style={{ \n        ...style,\n        y: translateY, \n        opacity: opacity\n      }}\n    >\n      <div className={classes.content}>\n        {children}\n      </div>\n      {showDivider && <div className={classes.divider} />}\n    </motion.div>\n  );\n};\n\nexport default ScrollingTextAnimation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}