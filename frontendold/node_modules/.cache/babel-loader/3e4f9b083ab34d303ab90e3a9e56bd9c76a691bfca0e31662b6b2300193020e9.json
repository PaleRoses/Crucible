{"ast":null,"code":"var _jsxFileName = \"/home/valeria/Documents/Crucible/frontend/src/components/core/effects/holdereffects/PersonProfileCard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useCallback, useMemo } from 'react';\nimport { motion, useInView, useAnimation } from 'framer-motion';\n\n// Move static styles outside component to prevent recreation on each render\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = {\n  profileName: {\n    fontWeight: '300',\n    letterSpacing: '0.05em',\n    marginBottom: '0.5rem'\n  },\n  profileRole: {\n    fontWeight: '300',\n    marginBottom: '2rem',\n    letterSpacing: '0.05em',\n    fontStyle: 'italic'\n  },\n  profileTagline: {\n    lineHeight: '1.6',\n    marginBottom: '3rem',\n    fontWeight: '300'\n  },\n  sectionContent: {\n    lineHeight: '1.8',\n    marginBottom: '1.5rem',\n    fontWeight: '300'\n  },\n  mobileNav: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100%',\n    zIndex: 100,\n    backdropFilter: 'blur(10px)',\n    transition: 'all 0.3s ease',\n    padding: '0.75rem 1rem',\n    display: 'flex',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  navLine: {\n    position: 'absolute',\n    left: '0',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    height: '0.75px',\n    transition: 'width 0.3s ease, background-color 0.3s ease'\n  },\n  navLink: {\n    position: 'relative',\n    display: 'block',\n    padding: '0.5rem 0 0.5rem 40px',\n    fontSize: '0.85rem',\n    letterSpacing: '0.1em',\n    background: 'transparent',\n    border: 'none',\n    textAlign: 'left',\n    outline: 'none',\n    boxShadow: 'none',\n    transition: 'color 0.5s ease, transform 0.5s ease',\n    cursor: 'pointer',\n    width: 'fit-content'\n  }\n};\n\n// Extracted and memoized child components\n// 1. ProfileInfo Component\nconst ProfileInfo = /*#__PURE__*/React.memo(_c = ({\n  person,\n  isMobile,\n  highlightColor,\n  textColor,\n  fontFamily\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-info\",\n    style: {\n      marginBottom: '2rem',\n      paddingLeft: '5px',\n      textAlign: isMobile ? 'center' : 'left',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"profile-name\",\n      style: {\n        ...styles.profileName,\n        fontSize: isMobile ? '2.2rem' : '2.8rem',\n        color: highlightColor\n      },\n      children: person.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"profile-role\",\n      style: {\n        ...styles.profileRole,\n        fontSize: isMobile ? '1.1rem' : '1.2rem',\n        color: `${highlightColor}B3`,\n        // 70% opacity\n        fontFamily: fontFamily\n      },\n      children: person.role\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), person.tagline && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"profile-tagline\",\n      style: {\n        ...styles.profileTagline,\n        fontSize: '1.1rem',\n        maxWidth: isMobile ? '100%' : '90%',\n        color: textColor,\n        fontFamily: fontFamily\n      },\n      children: person.tagline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n});\n\n// 2. MobileNavItem Component\n_c2 = ProfileInfo;\nconst MobileNavItem = /*#__PURE__*/React.memo(_c3 = ({\n  navItem,\n  activeSection,\n  onClick,\n  highlightColor,\n  textColor,\n  minLineWidth,\n  maxLineWidth\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mobile-nav-item\",\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      \"data-section-id\": navItem.id,\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        background: 'transparent',\n        border: 'none',\n        cursor: 'pointer',\n        padding: '0.5rem',\n        outline: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: activeSection === navItem.id ? `${maxLineWidth}px` : `${minLineWidth}px`,\n          height: '2px',\n          backgroundColor: activeSection === navItem.id ? highlightColor : `${highlightColor}80`,\n          transition: 'width 0.3s ease, background-color 0.3s ease',\n          marginBottom: '0.5rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '0.75rem',\n          color: activeSection === navItem.id ? highlightColor : textColor,\n          letterSpacing: '0.1em',\n          transition: 'color 0.3s ease'\n        },\n        children: navItem.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n});\n\n// 3. NavLink Component\n_c4 = MobileNavItem;\nconst NavLink = /*#__PURE__*/React.memo(_c5 = ({\n  navItem,\n  activeSection,\n  expandedNavItem,\n  onMouseEnter,\n  onMouseLeave,\n  highlightColor,\n  textColor,\n  minLineWidth,\n  maxLineWidth\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nav-link-container\",\n    \"data-section-id\": navItem.id,\n    style: {\n      position: 'relative',\n      marginBottom: '1rem',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    onMouseEnter: () => onMouseEnter(navItem.id),\n    onMouseLeave: onMouseLeave,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-line\",\n      style: {\n        ...styles.navLine,\n        width: activeSection === navItem.id || expandedNavItem === navItem.id ? `${maxLineWidth}px` : `${minLineWidth}px`,\n        backgroundColor: activeSection === navItem.id || expandedNavItem === navItem.id ? `${highlightColor}E6` // 90% opacity \n        : `${highlightColor}80` // 50% opacity\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nav-link\",\n      style: {\n        ...styles.navLink,\n        color: activeSection === navItem.id || expandedNavItem === navItem.id ? highlightColor : textColor,\n        transform: activeSection === navItem.id || expandedNavItem === navItem.id ? 'translateX(10px)' : 'none'\n      },\n      children: navItem.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n});\n\n// 4. StatItem Component\n_c6 = NavLink;\nconst StatItem = /*#__PURE__*/_s(/*#__PURE__*/React.memo(_c7 = _s(({\n  stat,\n  isMobile,\n  highlightColor,\n  textColor\n}) => {\n  _s();\n  const [isHovering, setIsHovering] = useState(false);\n  const handleMouseEnter = () => {\n    if (!isMobile) {\n      setIsHovering(true);\n    }\n  };\n  const handleMouseLeave = () => {\n    if (!isMobile) {\n      setIsHovering(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stat\",\n    style: {\n      flex: isMobile ? '0 0 auto' : '1',\n      textAlign: 'center',\n      padding: '0 1rem',\n      minWidth: isMobile ? '140px' : '100px',\n      transition: 'transform 0.3s ease',\n      transform: isHovering ? 'translateY(-5px)' : 'none'\n    },\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stat-value\",\n      style: {\n        fontSize: isMobile ? '2.2rem' : '2.5rem',\n        fontWeight: '100',\n        color: highlightColor,\n        marginBottom: '0.5rem'\n      },\n      children: stat.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stat-label\",\n      style: {\n        fontSize: '0.85rem',\n        color: `${textColor}CC`,\n        // 80% opacity\n        textTransform: 'uppercase',\n        letterSpacing: '0.1em'\n      },\n      children: stat.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n}, \"N3N70ybifgF8Rh1duhSAoiTR/LI=\")), \"N3N70ybifgF8Rh1duhSAoiTR/LI=\");\n\n// 5. SectionContent Component\n_c8 = StatItem;\nconst SectionContent = /*#__PURE__*/React.memo(_c9 = ({\n  content,\n  textColor,\n  fontFamily\n}) => {\n  if (!content) return null;\n  if (typeof content === 'string') {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"section-content\",\n      style: {\n        ...styles.sectionContent,\n        fontSize: '1rem',\n        color: textColor,\n        fontFamily: fontFamily\n      },\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this);\n  }\n  return content;\n});\n\n/**\n * PersonProfileCard Component - Optimized Version\n * \n * A profile card with a three-phase scroll behavior:\n * 1. Normal Flow: Initially scrolls with the page\n * 2. Fixed Position: Sticks to viewport when scrolling through content\n * 3. Release: Returns to normal flow after scrolling past component\n * \n * Mobile improvements:\n * - Navigation bar moves to top of screen\n * - Content spans full width for better readability\n * - Simplified navigation display\n * \n * Performance optimizations:\n * - Event delegation for navigation\n * - Extracted memoized child components\n * - Throttled scroll handlers\n * - ResizeObserver instead of window resize events\n * - Minimized style recalculations\n */\n_c10 = SectionContent;\nconst PersonProfileCard = ({\n  person,\n  animationConfig = {\n    threshold: 0.2,\n    once: true,\n    initialY: 30,\n    duration: 0.8\n  },\n  additionalSections = [],\n  onSectionChange = null,\n  topOffset = 100,\n  showStats = true,\n  highlightColor = '#bfad7f',\n  textColor = 'rgba(224, 224, 224, 0.7)',\n  minLineWidth = 10,\n  maxLineWidth = 40,\n  fontFamily = '\"Garamond\", \"Adobe Caslon Pro\", serif',\n  navigationItems = [{\n    id: 'about',\n    label: 'ABOUT',\n    content: null\n  }, {\n    id: 'experience',\n    label: 'EXPERIENCE',\n    content: null\n  }, {\n    id: 'projects',\n    label: 'PROJECTS',\n    content: null\n  }],\n  contentCompression = 0\n}) => {\n  _s2();\n  var _navigationItems$, _animationConfig$thre, _animationConfig$once, _animationConfig$init;\n  // State management\n  const [activeSection, setActiveSection] = useState(((_navigationItems$ = navigationItems[0]) === null || _navigationItems$ === void 0 ? void 0 : _navigationItems$.id) || 'about');\n  const [expandedNavItem, setExpandedNavItem] = useState(null);\n  const [sidebarMode, setSidebarMode] = useState('normal'); // 'normal', 'fixed', or 'end'\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n  const [mobileNavVisible, setMobileNavVisible] = useState(false);\n  const [lastScrollY, setLastScrollY] = useState(0);\n\n  // Create individual refs at the top level of the component\n  const containerRef = useRef(null);\n  const sidebarRef = useRef(null);\n  const contentRef = useRef(null);\n  const sidebarWrapperRef = useRef(null);\n  const mobileNavRef = useRef(null);\n  const navLinksRef = useRef(null);\n\n  // Create individual section refs\n  const section0Ref = useRef(null);\n  const section1Ref = useRef(null);\n  const section2Ref = useRef(null);\n  const section3Ref = useRef(null);\n  const section4Ref = useRef(null);\n  const section5Ref = useRef(null);\n  const section6Ref = useRef(null);\n  const section7Ref = useRef(null);\n\n  // Animation controls\n  const controls = useAnimation();\n\n  // Memoize the array of section refs so it's stable across renders\n  const sectionRefs = useMemo(() => [section0Ref, section1Ref, section2Ref, section3Ref, section4Ref, section5Ref, section6Ref, section7Ref], []);\n\n  // Memoize the section refs map to avoid recreating on every render\n  const sectionRefsMap = useMemo(() => {\n    const refsMap = {};\n    navigationItems.forEach((item, index) => {\n      if (index < sectionRefs.length) {\n        refsMap[item.id] = sectionRefs[index];\n      }\n    });\n    return refsMap;\n  }, [navigationItems, sectionRefs]);\n\n  // Memoize calculation of compression-based values\n  const layoutValues = useMemo(() => {\n    const compressionFactor = Math.min(Math.max(contentCompression, 0), 10) / 10;\n    return {\n      sidebarWidth: 45 - compressionFactor * 5,\n      // 35-40% range\n      contentWidth: 55 - compressionFactor * 5,\n      // 55-60% range\n      contentPadding: 2 + compressionFactor * 2 // 2-4rem range\n    };\n  }, [contentCompression]);\n\n  // Animation inView detection\n  const isInView = useInView(containerRef, {\n    threshold: (_animationConfig$thre = animationConfig === null || animationConfig === void 0 ? void 0 : animationConfig.threshold) !== null && _animationConfig$thre !== void 0 ? _animationConfig$thre : 0.2,\n    once: (_animationConfig$once = animationConfig === null || animationConfig === void 0 ? void 0 : animationConfig.once) !== null && _animationConfig$once !== void 0 ? _animationConfig$once : true\n  });\n\n  // Memoized function for checking if we're on mobile\n  const checkMobile = useCallback(() => {\n    setIsMobile(window.innerWidth <= 768);\n  }, []);\n\n  // Scroll to section handler - memoized with dependencies\n  const scrollToSection = useCallback(sectionId => {\n    setActiveSection(sectionId);\n    if (onSectionChange) {\n      onSectionChange(sectionId);\n    }\n    const sectionRef = sectionRefsMap[sectionId];\n    if (sectionRef !== null && sectionRef !== void 0 && sectionRef.current) {\n      // Use different scroll methods for mobile vs desktop\n      if (isMobile) {\n        // For mobile, calculate position and use window.scrollTo\n        const offsetTop = sectionRef.current.getBoundingClientRect().top + window.pageYOffset;\n        const mobileNavHeight = mobileNavRef.current ? mobileNavRef.current.offsetHeight : 0;\n        window.scrollTo({\n          top: offsetTop - mobileNavHeight - 20,\n          // Additional offset for spacing\n          behavior: 'smooth'\n        });\n      } else {\n        // For desktop, use the original scrollIntoView method\n        sectionRef.current.scrollIntoView({\n          behavior: 'smooth',\n          block: 'start'\n        });\n      }\n    }\n  }, [onSectionChange, sectionRefsMap, isMobile, mobileNavRef]);\n\n  // Event delegation for all navigation items\n  const handleNavEvent = useCallback(e => {\n    const target = e.target.closest('[data-section-id]');\n    if (target) {\n      const sectionId = target.getAttribute('data-section-id');\n      if (sectionId) {\n        e.preventDefault();\n        scrollToSection(sectionId);\n      }\n    }\n  }, [scrollToSection]);\n\n  // Navigation item hover handlers - memoized to prevent recreation on every render\n  const handleNavItemHover = useCallback(section => {\n    if (!isMobile) {\n      setExpandedNavItem(section);\n    }\n  }, [isMobile]);\n  const handleNavItemLeave = useCallback(() => {\n    if (!isMobile) {\n      setExpandedNavItem(null);\n    }\n  }, [isMobile]);\n\n  // Check mobile on mount and window resize\n  useEffect(() => {\n    // Initial check\n    checkMobile();\n\n    // Add resize event listener\n    window.addEventListener('resize', checkMobile);\n    return () => {\n      window.removeEventListener('resize', checkMobile);\n    };\n  }, [checkMobile]);\n\n  // Set up event delegation for navigation\n  useEffect(() => {\n    // Store current ref values at the time the effect runs\n    const mobileNavElement = mobileNavRef.current;\n    const navLinksElement = navLinksRef.current;\n\n    // Add click event listeners with event delegation\n    if (mobileNavElement) {\n      mobileNavElement.addEventListener('click', handleNavEvent);\n    }\n    if (navLinksElement) {\n      navLinksElement.addEventListener('click', handleNavEvent);\n    }\n    return () => {\n      if (mobileNavElement) {\n        mobileNavElement.removeEventListener('click', handleNavEvent);\n      }\n      if (navLinksElement) {\n        navLinksElement.removeEventListener('click', handleNavEvent);\n      }\n    };\n  }, [handleNavEvent]);\n\n  // Initial animation effect\n  useEffect(() => {\n    if (isInView) {\n      var _animationConfig$dura, _animationConfig$dura2;\n      controls.start({\n        opacity: 1,\n        y: 0,\n        transition: {\n          duration: (_animationConfig$dura = animationConfig === null || animationConfig === void 0 ? void 0 : animationConfig.duration) !== null && _animationConfig$dura !== void 0 ? _animationConfig$dura : 0.8,\n          ease: \"easeOut\",\n          delay: 0.1 // Small delay to ensure DOM is settled\n        }\n      });\n\n      // Mark as initialized after animation completes\n      const timeout = setTimeout(() => {\n        setIsInitialized(true);\n      }, ((_animationConfig$dura2 = animationConfig === null || animationConfig === void 0 ? void 0 : animationConfig.duration) !== null && _animationConfig$dura2 !== void 0 ? _animationConfig$dura2 : 0.8) * 1000 + 100);\n      return () => clearTimeout(timeout);\n    }\n  }, [isInView, controls, animationConfig === null || animationConfig === void 0 ? void 0 : animationConfig.duration]);\n\n  // Set up intersection observer for section detection - optimized with proper dependencies\n  useEffect(() => {\n    const sectionElements = Object.values(sectionRefsMap).map(ref => ref.current).filter(Boolean);\n    if (sectionElements.length === 0) return;\n\n    // Different margins for mobile and desktop to account for different layouts\n    const options = {\n      root: null,\n      rootMargin: isMobile ? '-80px 0px -70% 0px' // For mobile with fixed nav\n      : '-10% 0px -70% 0px',\n      // For desktop\n      threshold: [0, 0.25, 0.5, 0.75] // Multiple thresholds for smoother transitions\n    };\n    const callback = entries => {\n      // Find the most visible section\n      const visibleEntries = entries.filter(entry => entry.isIntersecting);\n      if (visibleEntries.length > 0) {\n        // Sort by visibility ratio, highest first\n        visibleEntries.sort((a, b) => b.intersectionRatio - a.intersectionRatio);\n        const topEntry = visibleEntries[0];\n        const sectionId = topEntry.target.getAttribute('data-section');\n        if (sectionId && sectionId !== activeSection) {\n          setActiveSection(sectionId);\n          if (onSectionChange) {\n            onSectionChange(sectionId);\n          }\n        }\n      }\n    };\n    const observer = new IntersectionObserver(callback, options);\n    sectionElements.forEach(element => observer.observe(element));\n    return () => observer.disconnect();\n  }, [activeSection, onSectionChange, sectionRefsMap, isMobile]);\n\n  // Implement scroll behavior for desktop - optimized by separating logic and reducing recalculations\n  useEffect(() => {\n    if (!isInitialized || !containerRef.current || !sidebarRef.current || !sidebarWrapperRef.current || isMobile) {\n      return;\n    }\n    const container = containerRef.current;\n    const sidebar = sidebarRef.current;\n    const sidebarWrapper = sidebarWrapperRef.current;\n\n    // Add will-change to hint browser about upcoming transforms\n    sidebar.style.willChange = 'position, top, left, width, bottom';\n    let measurements = {\n      containerRect: null,\n      wrapperRect: null,\n      sidebarHeight: null\n    };\n\n    // Update measurements - only called when needed\n    const updateMeasurements = () => {\n      measurements.containerRect = container.getBoundingClientRect();\n      measurements.wrapperRect = sidebarWrapper.getBoundingClientRect();\n      measurements.sidebarHeight = sidebar.offsetHeight;\n    };\n\n    // Get initial measurements\n    updateMeasurements();\n\n    // Optimized scroll handler with throttling\n    const handleScroll = () => {\n      // Update measurements\n      updateMeasurements();\n\n      // Calculate phase transition points\n      const {\n        containerRect,\n        sidebarHeight,\n        wrapperRect\n      } = measurements;\n      const startFixPoint = containerRect.top <= topOffset;\n      const endFixPoint = containerRect.bottom <= sidebarHeight + topOffset;\n\n      // Determine the current scroll phase\n      let newMode;\n      if (!startFixPoint) {\n        newMode = 'normal';\n      } else if (startFixPoint && !endFixPoint) {\n        newMode = 'fixed';\n      } else {\n        newMode = 'end';\n      }\n\n      // Only update DOM if the mode changes\n      if (sidebarMode !== newMode) {\n        setSidebarMode(newMode);\n\n        // Use requestAnimationFrame for style updates to optimize rendering\n        requestAnimationFrame(() => {\n          if (newMode === 'normal') {\n            // Phase 1: Normal flow\n            sidebar.style.position = 'relative';\n            sidebar.style.top = '0';\n            sidebar.style.left = '0';\n            sidebar.style.width = '';\n            sidebar.style.bottom = '';\n          } else if (newMode === 'fixed') {\n            // Phase 2: Fixed position\n            sidebar.style.position = 'fixed';\n            sidebar.style.top = `${topOffset}px`;\n            sidebar.style.width = `${wrapperRect.width}px`;\n            sidebar.style.left = `${wrapperRect.left}px`;\n            sidebar.style.bottom = '';\n          } else if (newMode === 'end') {\n            // Phase 3: End position\n            sidebar.style.position = 'absolute';\n            sidebar.style.top = 'auto';\n            sidebar.style.bottom = '0';\n            sidebar.style.left = '0';\n            sidebar.style.width = '';\n          }\n        });\n      }\n    };\n\n    // Throttled scroll event handling for better performance\n    let ticking = false;\n    let lastScrollTime = 0;\n    const THROTTLE_MS = 100; // Throttle to max 10 updates per second\n\n    const scrollListener = () => {\n      const now = Date.now();\n      if (!ticking && now - lastScrollTime > THROTTLE_MS) {\n        requestAnimationFrame(() => {\n          handleScroll();\n          ticking = false;\n          lastScrollTime = now;\n        });\n        ticking = true;\n      }\n    };\n    window.addEventListener('scroll', scrollListener, {\n      passive: true\n    });\n\n    // Optimized resize handler\n    const handleResize = () => {\n      // Skip for mobile\n      if (window.innerWidth <= 768) return;\n\n      // Update measurements and apply current mode\n      updateMeasurements();\n      handleScroll();\n    };\n\n    // Use ResizeObserver instead of window resize for better performance\n    const resizeObserver = new ResizeObserver(handleResize);\n    resizeObserver.observe(container);\n\n    // Initial setup\n    handleResize();\n    handleScroll();\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n      resizeObserver.disconnect();\n      // Remove will-change to free up resources\n      sidebar.style.willChange = 'auto';\n    };\n  }, [isInitialized, topOffset, sidebarMode, isMobile, containerRef, sidebarRef, sidebarWrapperRef]);\n\n  // Mobile nav scroll behavior with auto-hide - optimized with throttling\n  useEffect(() => {\n    if (!isInitialized || !isMobile || !mobileNavRef.current) {\n      return;\n    }\n    const mobileNav = mobileNavRef.current;\n\n    // Add will-change to hint browser about transforms\n    mobileNav.style.willChange = 'transform, opacity, background-color';\n\n    // Optimized scroll handler for mobile nav\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n\n      // Show navbar when scrolling up or at the top of the page\n      if (currentScrollY < lastScrollY || currentScrollY < 50) {\n        setMobileNavVisible(true);\n      } else {\n        // Hide navbar when scrolling down past the threshold\n        setMobileNavVisible(false);\n      }\n\n      // Update background opacity based on scroll position - one-time calculation\n      requestAnimationFrame(() => {\n        const bgOpacity = currentScrollY > 50 ? 0.95 : 0.7;\n        mobileNav.style.backgroundColor = `rgba(17, 17, 17, ${bgOpacity})`;\n        mobileNav.style.boxShadow = currentScrollY > 50 ? '0 2px 10px rgba(0, 0, 0, 0.1)' : 'none';\n      });\n\n      // Store current scroll position\n      setLastScrollY(currentScrollY);\n    };\n\n    // Throttled scroll event handling for better performance\n    let ticking = false;\n    let lastScrollTime = 0;\n    const THROTTLE_MS = 100; // Throttle to max 10 updates per second\n\n    const scrollListener = () => {\n      const now = Date.now();\n      if (!ticking && now - lastScrollTime > THROTTLE_MS) {\n        requestAnimationFrame(() => {\n          handleScroll();\n          ticking = false;\n          lastScrollTime = now;\n        });\n        ticking = true;\n      }\n    };\n    window.addEventListener('scroll', scrollListener, {\n      passive: true\n    });\n\n    // Initial state - initialize once\n    mobileNav.style.backgroundColor = 'rgba(17, 17, 17, 0.7)';\n    mobileNav.style.boxShadow = 'none';\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n      // Remove will-change to free up resources when not needed\n      mobileNav.style.willChange = 'auto';\n    };\n  }, [isInitialized, isMobile, lastScrollY, mobileNavRef]);\n\n  // Stats section - extracted and memoized\n  const renderStats = useMemo(() => {\n    if (!showStats || !person.stats || person.stats.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-container\",\n      style: {\n        display: 'flex',\n        justifyContent: isMobile ? 'center' : 'space-between',\n        flexWrap: 'wrap',\n        marginTop: '3rem',\n        width: '100%',\n        gap: isMobile ? '2rem' : 0\n      },\n      children: person.stats.map((stat, statIdx) => /*#__PURE__*/_jsxDEV(StatItem, {\n        stat: stat,\n        isMobile: isMobile,\n        highlightColor: highlightColor,\n        textColor: textColor\n      }, statIdx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 7\n    }, this);\n  }, [showStats, person.stats, isMobile, highlightColor, textColor]);\n\n  // Section renderers - separated for clarity and optimization\n  const renderAboutSection = useMemo(() => {\n    if (!person.bio) return null;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [person.bio.map((paragraph, idx) => /*#__PURE__*/_jsxDEV(SectionContent, {\n        content: paragraph,\n        textColor: textColor,\n        fontFamily: fontFamily\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 11\n      }, this)), renderStats]\n    }, void 0, true);\n  }, [person.bio, renderStats, textColor, fontFamily]);\n  const renderExperienceSection = useMemo(() => {\n    if (!person.experience) {\n      return /*#__PURE__*/_jsxDEV(SectionContent, {\n        content: \"Throughout my career, I've specialized in developing software systems that seamlessly integrate front-end experiences with robust back-end architectures. My experience spans various domains, from interactive media to data visualization systems.\",\n        textColor: textColor,\n        fontFamily: fontFamily\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: person.experience.map((item, expIdx) => /*#__PURE__*/_jsxDEV(SectionContent, {\n        content: item.content,\n        textColor: textColor,\n        fontFamily: fontFamily\n      }, expIdx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  }, [person.experience, textColor, fontFamily]);\n  const renderProjectsSection = useMemo(() => {\n    if (!person.projects) return null;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: person.projects.map((item, projIdx) => /*#__PURE__*/_jsxDEV(SectionContent, {\n        content: item.content,\n        textColor: textColor,\n        fontFamily: fontFamily\n      }, projIdx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 868,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  }, [person.projects, textColor, fontFamily]);\n\n  // Main section renderer - unified logic for any section type using memoization\n  const getRenderedSection = useCallback(sectionId => {\n    // Find section from navigationItems\n    const section = navigationItems.find(item => item.id === sectionId);\n    if (!section) return null;\n    if (section.content) {\n      return /*#__PURE__*/_jsxDEV(SectionContent, {\n        content: section.content,\n        textColor: textColor,\n        fontFamily: fontFamily\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 887,\n        columnNumber: 9\n      }, this);\n    }\n    switch (sectionId) {\n      case 'about':\n        return renderAboutSection;\n      case 'experience':\n        return renderExperienceSection;\n      case 'projects':\n        return renderProjectsSection;\n      default:\n        return null;\n    }\n  }, [navigationItems, renderAboutSection, renderExperienceSection, renderProjectsSection, textColor, fontFamily]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isMobile && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mobileNavRef,\n      className: \"mobile-nav\",\n      style: {\n        ...styles.mobileNav,\n        transform: mobileNavVisible ? 'translateY(0)' : 'translateY(-100%)',\n        opacity: mobileNavVisible ? 1 : 0\n      },\n      children: navigationItems.map(navItem => /*#__PURE__*/_jsxDEV(MobileNavItem, {\n        navItem: navItem,\n        activeSection: activeSection,\n        highlightColor: highlightColor,\n        textColor: textColor,\n        minLineWidth: minLineWidth,\n        maxLineWidth: maxLineWidth\n      }, navItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 928,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 918,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      ref: containerRef,\n      className: \"profile-container\",\n      initial: {\n        opacity: 0,\n        y: (_animationConfig$init = animationConfig === null || animationConfig === void 0 ? void 0 : animationConfig.initialY) !== null && _animationConfig$init !== void 0 ? _animationConfig$init : 30\n      },\n      animate: controls,\n      style: {\n        display: 'flex',\n        flexDirection: isMobile ? 'column' : 'row',\n        width: '100%',\n        maxWidth: '1300px',\n        margin: '0 auto',\n        minHeight: isMobile ? 'auto' : '70vh',\n        position: 'relative',\n        paddingTop: isMobile ? '80px' : 0 // Add padding for fixed mobile nav\n      },\n      children: [!isMobile && /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: sidebarWrapperRef,\n        className: \"sidebar-wrapper\",\n        style: {\n          width: `${layoutValues.sidebarWidth}%`,\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: sidebarRef,\n          className: \"profile-sidebar\",\n          style: {\n            padding: '3rem 2rem 2rem 0',\n            display: 'flex',\n            flexDirection: 'column',\n            width: '100%',\n            position: 'relative',\n            top: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(ProfileInfo, {\n            person: person,\n            isMobile: isMobile,\n            highlightColor: highlightColor,\n            textColor: textColor,\n            fontFamily: fontFamily\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 15\n          }, this), !isMobile && /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: navLinksRef,\n            className: \"nav-links\",\n            style: {\n              marginTop: '3rem'\n            },\n            children: navigationItems.map(navItem => /*#__PURE__*/_jsxDEV(NavLink, {\n              navItem: navItem,\n              activeSection: activeSection,\n              expandedNavItem: expandedNavItem,\n              onMouseEnter: handleNavItemHover,\n              onMouseLeave: handleNavItemLeave,\n              highlightColor: highlightColor,\n              textColor: textColor,\n              minLineWidth: minLineWidth,\n              maxLineWidth: maxLineWidth\n            }, navItem.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 996,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 990,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 959,\n        columnNumber: 11\n      }, this), isMobile && /*#__PURE__*/_jsxDEV(ProfileInfo, {\n        person: person,\n        isMobile: isMobile,\n        highlightColor: highlightColor,\n        textColor: textColor,\n        fontFamily: fontFamily\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1017,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: contentRef,\n        className: \"content-section\",\n        style: {\n          width: isMobile ? '100%' : `${layoutValues.contentWidth}%`,\n          padding: isMobile ? '2rem 1.5rem' : `3rem 0 2rem ${layoutValues.contentPadding}rem`,\n          marginLeft: isMobile ? 0 : 'auto'\n        },\n        children: [navigationItems.map((section, index) => {\n          if (index >= sectionRefs.length) return null;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: sectionRefs[index],\n            \"data-section\": section.id,\n            className: \"section\",\n            id: section.id,\n            style: {\n              marginBottom: '3rem',\n              scrollMarginTop: isMobile ? '80px' : '2rem'\n            },\n            children: getRenderedSection(section.id)\n          }, section.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1043,\n            columnNumber: 15\n          }, this);\n        }), additionalSections.map((section, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          style: {\n            marginBottom: '3rem',\n            scrollMarginTop: isMobile ? '80px' : '2rem'\n          },\n          children: [section.title && /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              fontSize: '1.4rem',\n              color: highlightColor,\n              marginBottom: '1rem',\n              fontWeight: '300'\n            },\n            children: section.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1070,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(SectionContent, {\n            content: section.content,\n            textColor: textColor,\n            fontFamily: fontFamily\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1079,\n            columnNumber: 15\n          }, this)]\n        }, `additional-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1061,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1027,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 941,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n// Using memo to prevent unnecessary re-renders\n_s2(PersonProfileCard, \"tEe6Jq45Qq/Zn1qhBZzC3S5MRjs=\", false, function () {\n  return [useAnimation, useInView];\n});\n_c11 = PersonProfileCard;\nexport default _c12 = /*#__PURE__*/React.memo(PersonProfileCard);\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"ProfileInfo$React.memo\");\n$RefreshReg$(_c2, \"ProfileInfo\");\n$RefreshReg$(_c3, \"MobileNavItem$React.memo\");\n$RefreshReg$(_c4, \"MobileNavItem\");\n$RefreshReg$(_c5, \"NavLink$React.memo\");\n$RefreshReg$(_c6, \"NavLink\");\n$RefreshReg$(_c7, \"StatItem$React.memo\");\n$RefreshReg$(_c8, \"StatItem\");\n$RefreshReg$(_c9, \"SectionContent$React.memo\");\n$RefreshReg$(_c10, \"SectionContent\");\n$RefreshReg$(_c11, \"PersonProfileCard\");\n$RefreshReg$(_c12, \"%default%\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","useMemo","motion","useInView","useAnimation","jsxDEV","_jsxDEV","Fragment","_Fragment","styles","profileName","fontWeight","letterSpacing","marginBottom","profileRole","fontStyle","profileTagline","lineHeight","sectionContent","mobileNav","position","top","left","width","zIndex","backdropFilter","transition","padding","display","justifyContent","alignItems","navLine","transform","height","navLink","fontSize","background","border","textAlign","outline","boxShadow","cursor","ProfileInfo","memo","_c","person","isMobile","highlightColor","textColor","fontFamily","className","style","paddingLeft","children","color","name","fileName","_jsxFileName","lineNumber","columnNumber","role","tagline","maxWidth","_c2","MobileNavItem","_c3","navItem","activeSection","onClick","minLineWidth","maxLineWidth","flexDirection","id","backgroundColor","label","_c4","NavLink","_c5","expandedNavItem","onMouseEnter","onMouseLeave","_c6","StatItem","_s","_c7","stat","isHovering","setIsHovering","handleMouseEnter","handleMouseLeave","flex","minWidth","value","textTransform","_c8","SectionContent","_c9","content","_c10","PersonProfileCard","animationConfig","threshold","once","initialY","duration","additionalSections","onSectionChange","topOffset","showStats","navigationItems","contentCompression","_s2","_navigationItems$","_animationConfig$thre","_animationConfig$once","_animationConfig$init","setActiveSection","setExpandedNavItem","sidebarMode","setSidebarMode","isInitialized","setIsInitialized","setIsMobile","mobileNavVisible","setMobileNavVisible","lastScrollY","setLastScrollY","containerRef","sidebarRef","contentRef","sidebarWrapperRef","mobileNavRef","navLinksRef","section0Ref","section1Ref","section2Ref","section3Ref","section4Ref","section5Ref","section6Ref","section7Ref","controls","sectionRefs","sectionRefsMap","refsMap","forEach","item","index","length","layoutValues","compressionFactor","Math","min","max","sidebarWidth","contentWidth","contentPadding","isInView","checkMobile","window","innerWidth","scrollToSection","sectionId","sectionRef","current","offsetTop","getBoundingClientRect","pageYOffset","mobileNavHeight","offsetHeight","scrollTo","behavior","scrollIntoView","block","handleNavEvent","e","target","closest","getAttribute","preventDefault","handleNavItemHover","section","handleNavItemLeave","addEventListener","removeEventListener","mobileNavElement","navLinksElement","_animationConfig$dura","_animationConfig$dura2","start","opacity","y","ease","delay","timeout","setTimeout","clearTimeout","sectionElements","Object","values","map","ref","filter","Boolean","options","root","rootMargin","callback","entries","visibleEntries","entry","isIntersecting","sort","a","b","intersectionRatio","topEntry","observer","IntersectionObserver","element","observe","disconnect","container","sidebar","sidebarWrapper","willChange","measurements","containerRect","wrapperRect","sidebarHeight","updateMeasurements","handleScroll","startFixPoint","endFixPoint","bottom","newMode","requestAnimationFrame","ticking","lastScrollTime","THROTTLE_MS","scrollListener","now","Date","passive","handleResize","resizeObserver","ResizeObserver","currentScrollY","scrollY","bgOpacity","renderStats","stats","flexWrap","marginTop","gap","statIdx","renderAboutSection","bio","paragraph","idx","renderExperienceSection","experience","expIdx","renderProjectsSection","projects","projIdx","getRenderedSection","find","div","initial","animate","margin","minHeight","paddingTop","marginLeft","scrollMarginTop","title","_c11","_c12","$RefreshReg$"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/core/effects/holdereffects/PersonProfileCard.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect, useCallback, useMemo } from 'react';\nimport { motion, useInView, useAnimation } from 'framer-motion';\n\n// Move static styles outside component to prevent recreation on each render\nconst styles = {\n  profileName: {\n    fontWeight: '300',\n    letterSpacing: '0.05em',\n    marginBottom: '0.5rem',\n  },\n  profileRole: {\n    fontWeight: '300',\n    marginBottom: '2rem',\n    letterSpacing: '0.05em',\n    fontStyle: 'italic',\n  },\n  profileTagline: {\n    lineHeight: '1.6',\n    marginBottom: '3rem',\n    fontWeight: '300',\n  },\n  sectionContent: {\n    lineHeight: '1.8',\n    marginBottom: '1.5rem',\n    fontWeight: '300',\n  },\n  mobileNav: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100%',\n    zIndex: 100,\n    backdropFilter: 'blur(10px)',\n    transition: 'all 0.3s ease',\n    padding: '0.75rem 1rem',\n    display: 'flex',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n  },\n  navLine: {\n    position: 'absolute',\n    left: '0',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    height: '0.75px',\n    transition: 'width 0.3s ease, background-color 0.3s ease',\n  },\n  navLink: {\n    position: 'relative',\n    display: 'block',\n    padding: '0.5rem 0 0.5rem 40px',\n    fontSize: '0.85rem',\n    letterSpacing: '0.1em',\n    background: 'transparent',\n    border: 'none',\n    textAlign: 'left',\n    outline: 'none',\n    boxShadow: 'none',\n    transition: 'color 0.5s ease, transform 0.5s ease',\n    cursor: 'pointer',\n    width: 'fit-content',\n  }\n};\n\n// Extracted and memoized child components\n// 1. ProfileInfo Component\nconst ProfileInfo = React.memo(({ \n  person, \n  isMobile, \n  highlightColor, \n  textColor, \n  fontFamily \n}) => {\n  return (\n    <div \n      className=\"profile-info\"\n      style={{\n        marginBottom: '2rem',\n        paddingLeft: '5px',\n        textAlign: isMobile ? 'center' : 'left',\n        width: '100%',\n      }}\n    >\n      <h1 \n        className=\"profile-name\"\n        style={{\n          ...styles.profileName,\n          fontSize: isMobile ? '2.2rem' : '2.8rem',\n          color: highlightColor,\n        }}\n      >\n        {person.name}\n      </h1>\n      \n      <h2 \n        className=\"profile-role\"\n        style={{\n          ...styles.profileRole,\n          fontSize: isMobile ? '1.1rem' : '1.2rem',\n          color: `${highlightColor}B3`, // 70% opacity\n          fontFamily: fontFamily,\n        }}\n      >\n        {person.role}\n      </h2>\n      \n      {person.tagline && (\n        <p \n          className=\"profile-tagline\"\n          style={{\n            ...styles.profileTagline,\n            fontSize: '1.1rem',\n            maxWidth: isMobile ? '100%' : '90%',\n            color: textColor,\n            fontFamily: fontFamily,\n          }}\n        >\n          {person.tagline}\n        </p>\n      )}\n    </div>\n  );\n});\n\n// 2. MobileNavItem Component\nconst MobileNavItem = React.memo(({ \n  navItem, \n  activeSection, \n  onClick, \n  highlightColor, \n  textColor,\n  minLineWidth,\n  maxLineWidth \n}) => {\n  return (\n    <div\n      className=\"mobile-nav-item\"\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <button\n        data-section-id={navItem.id}\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          background: 'transparent',\n          border: 'none',\n          cursor: 'pointer',\n          padding: '0.5rem',\n          outline: 'none',\n        }}\n      >\n        <div\n          style={{\n            width: activeSection === navItem.id ? `${maxLineWidth}px` : `${minLineWidth}px`,\n            height: '2px',\n            backgroundColor: activeSection === navItem.id ? highlightColor : `${highlightColor}80`,\n            transition: 'width 0.3s ease, background-color 0.3s ease',\n            marginBottom: '0.5rem',\n          }}\n        ></div>\n        <div\n          style={{\n            fontSize: '0.75rem',\n            color: activeSection === navItem.id ? highlightColor : textColor,\n            letterSpacing: '0.1em',\n            transition: 'color 0.3s ease',\n          }}\n        >\n          {navItem.label}\n        </div>\n      </button>\n    </div>\n  );\n});\n\n// 3. NavLink Component\nconst NavLink = React.memo(({ \n  navItem, \n  activeSection, \n  expandedNavItem,\n  onMouseEnter,\n  onMouseLeave, \n  highlightColor, \n  textColor,\n  minLineWidth,\n  maxLineWidth \n}) => {\n  return (\n    <div \n      className=\"nav-link-container\"\n      data-section-id={navItem.id}\n      style={{\n        position: 'relative',\n        marginBottom: '1rem',\n        display: 'flex',\n        alignItems: 'center',\n      }}\n      onMouseEnter={() => onMouseEnter(navItem.id)}\n      onMouseLeave={onMouseLeave}\n    >\n      <div\n        className=\"nav-line\"\n        style={{\n          ...styles.navLine,\n          width: activeSection === navItem.id || expandedNavItem === navItem.id \n            ? `${maxLineWidth}px` \n            : `${minLineWidth}px`,\n          backgroundColor: activeSection === navItem.id || expandedNavItem === navItem.id\n            ? `${highlightColor}E6` // 90% opacity \n            : `${highlightColor}80`, // 50% opacity\n        }}\n      ></div>\n      <button \n        className=\"nav-link\"\n        style={{\n          ...styles.navLink,\n          color: activeSection === navItem.id || expandedNavItem === navItem.id \n            ? highlightColor \n            : textColor,\n          transform: activeSection === navItem.id || expandedNavItem === navItem.id \n            ? 'translateX(10px)' \n            : 'none',\n        }}\n      >\n        {navItem.label}\n      </button>\n    </div>\n  );\n});\n\n// 4. StatItem Component\nconst StatItem = React.memo(({ \n  stat, \n  isMobile, \n  highlightColor, \n  textColor \n}) => {\n  const [isHovering, setIsHovering] = useState(false);\n\n  const handleMouseEnter = () => {\n    if (!isMobile) {\n      setIsHovering(true);\n    }\n  };\n\n  const handleMouseLeave = () => {\n    if (!isMobile) {\n      setIsHovering(false);\n    }\n  };\n\n  return (\n    <div \n      className=\"stat\"\n      style={{\n        flex: isMobile ? '0 0 auto' : '1',\n        textAlign: 'center',\n        padding: '0 1rem',\n        minWidth: isMobile ? '140px' : '100px',\n        transition: 'transform 0.3s ease',\n        transform: isHovering ? 'translateY(-5px)' : 'none'\n      }}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <div \n        className=\"stat-value\"\n        style={{\n          fontSize: isMobile ? '2.2rem' : '2.5rem',\n          fontWeight: '100',\n          color: highlightColor,\n          marginBottom: '0.5rem'\n        }}\n      >\n        {stat.value}\n      </div>\n      <div \n        className=\"stat-label\"\n        style={{\n          fontSize: '0.85rem',\n          color: `${textColor}CC`, // 80% opacity\n          textTransform: 'uppercase',\n          letterSpacing: '0.1em'\n        }}\n      >\n        {stat.label}\n      </div>\n    </div>\n  );\n});\n\n// 5. SectionContent Component\nconst SectionContent = React.memo(({ \n  content, \n  textColor, \n  fontFamily \n}) => {\n  if (!content) return null;\n  \n  if (typeof content === 'string') {\n    return (\n      <p \n        className=\"section-content\"\n        style={{\n          ...styles.sectionContent,\n          fontSize: '1rem',\n          color: textColor,\n          fontFamily: fontFamily,\n        }}\n      >\n        {content}\n      </p>\n    );\n  }\n  \n  return content;\n});\n\n/**\n * PersonProfileCard Component - Optimized Version\n * \n * A profile card with a three-phase scroll behavior:\n * 1. Normal Flow: Initially scrolls with the page\n * 2. Fixed Position: Sticks to viewport when scrolling through content\n * 3. Release: Returns to normal flow after scrolling past component\n * \n * Mobile improvements:\n * - Navigation bar moves to top of screen\n * - Content spans full width for better readability\n * - Simplified navigation display\n * \n * Performance optimizations:\n * - Event delegation for navigation\n * - Extracted memoized child components\n * - Throttled scroll handlers\n * - ResizeObserver instead of window resize events\n * - Minimized style recalculations\n */\nconst PersonProfileCard = ({\n  person,\n  animationConfig = {\n    threshold: 0.2,\n    once: true,\n    initialY: 30,\n    duration: 0.8\n  },\n  additionalSections = [],\n  onSectionChange = null,\n  topOffset = 100,\n  showStats = true,\n  highlightColor = '#bfad7f',\n  textColor = 'rgba(224, 224, 224, 0.7)',\n  minLineWidth = 10,\n  maxLineWidth = 40,\n  fontFamily = '\"Garamond\", \"Adobe Caslon Pro\", serif',\n  navigationItems = [\n    { id: 'about', label: 'ABOUT', content: null },\n    { id: 'experience', label: 'EXPERIENCE', content: null },\n    { id: 'projects', label: 'PROJECTS', content: null }\n  ],\n  contentCompression = 0\n}) => {\n  // State management\n  const [activeSection, setActiveSection] = useState(navigationItems[0]?.id || 'about');\n  const [expandedNavItem, setExpandedNavItem] = useState(null);\n  const [sidebarMode, setSidebarMode] = useState('normal'); // 'normal', 'fixed', or 'end'\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n  const [mobileNavVisible, setMobileNavVisible] = useState(false);\n  const [lastScrollY, setLastScrollY] = useState(0);\n\n  // Create individual refs at the top level of the component\n  const containerRef = useRef(null);\n  const sidebarRef = useRef(null);\n  const contentRef = useRef(null);\n  const sidebarWrapperRef = useRef(null);\n  const mobileNavRef = useRef(null);\n  const navLinksRef = useRef(null);\n  \n  // Create individual section refs\n  const section0Ref = useRef(null);\n  const section1Ref = useRef(null);\n  const section2Ref = useRef(null);\n  const section3Ref = useRef(null);\n  const section4Ref = useRef(null);\n  const section5Ref = useRef(null);\n  const section6Ref = useRef(null);\n  const section7Ref = useRef(null);\n  \n  // Animation controls\n  const controls = useAnimation();\n  \n  // Memoize the array of section refs so it's stable across renders\n  const sectionRefs = useMemo(() => [\n    section0Ref, section1Ref, section2Ref, section3Ref,\n    section4Ref, section5Ref, section6Ref, section7Ref\n  ], []);\n  \n  // Memoize the section refs map to avoid recreating on every render\n  const sectionRefsMap = useMemo(() => {\n    const refsMap = {};\n    navigationItems.forEach((item, index) => {\n      if (index < sectionRefs.length) {\n        refsMap[item.id] = sectionRefs[index];\n      }\n    });\n    return refsMap;\n  }, [navigationItems, sectionRefs]);\n  \n  // Memoize calculation of compression-based values\n  const layoutValues = useMemo(() => {\n    const compressionFactor = Math.min(Math.max(contentCompression, 0), 10) / 10;\n    return {\n      sidebarWidth: 45 - (compressionFactor * 5), // 35-40% range\n      contentWidth: 55 - (compressionFactor * 5), // 55-60% range\n      contentPadding: 2 + (compressionFactor * 2), // 2-4rem range\n    };\n  }, [contentCompression]);\n\n  // Animation inView detection\n  const isInView = useInView(containerRef, {\n    threshold: animationConfig?.threshold ?? 0.2,\n    once: animationConfig?.once ?? true\n  });\n\n  // Memoized function for checking if we're on mobile\n  const checkMobile = useCallback(() => {\n    setIsMobile(window.innerWidth <= 768);\n  }, []);\n\n  // Scroll to section handler - memoized with dependencies\n  const scrollToSection = useCallback((sectionId) => {\n    setActiveSection(sectionId);\n    \n    if (onSectionChange) {\n      onSectionChange(sectionId);\n    }\n    \n    const sectionRef = sectionRefsMap[sectionId];\n    if (sectionRef?.current) {\n      // Use different scroll methods for mobile vs desktop\n      if (isMobile) {\n        // For mobile, calculate position and use window.scrollTo\n        const offsetTop = sectionRef.current.getBoundingClientRect().top + window.pageYOffset;\n        const mobileNavHeight = mobileNavRef.current ? mobileNavRef.current.offsetHeight : 0;\n        \n        window.scrollTo({\n          top: offsetTop - mobileNavHeight - 20, // Additional offset for spacing\n          behavior: 'smooth'\n        });\n      } else {\n        // For desktop, use the original scrollIntoView method\n        sectionRef.current.scrollIntoView({ \n          behavior: 'smooth',\n          block: 'start'\n        });\n      }\n    }\n  }, [onSectionChange, sectionRefsMap, isMobile, mobileNavRef]);\n\n  // Event delegation for all navigation items\n  const handleNavEvent = useCallback((e) => {\n    const target = e.target.closest('[data-section-id]');\n    if (target) {\n      const sectionId = target.getAttribute('data-section-id');\n      if (sectionId) {\n        e.preventDefault();\n        scrollToSection(sectionId);\n      }\n    }\n  }, [scrollToSection]);\n  \n  // Navigation item hover handlers - memoized to prevent recreation on every render\n  const handleNavItemHover = useCallback((section) => {\n    if (!isMobile) {\n      setExpandedNavItem(section);\n    }\n  }, [isMobile]);\n  \n  const handleNavItemLeave = useCallback(() => {\n    if (!isMobile) {\n      setExpandedNavItem(null);\n    }\n  }, [isMobile]);\n\n  // Check mobile on mount and window resize\n  useEffect(() => {\n    // Initial check\n    checkMobile();\n    \n    // Add resize event listener\n    window.addEventListener('resize', checkMobile);\n    \n    return () => {\n      window.removeEventListener('resize', checkMobile);\n    };\n  }, [checkMobile]);\n\n  // Set up event delegation for navigation\n  useEffect(() => {\n    // Store current ref values at the time the effect runs\n    const mobileNavElement = mobileNavRef.current;\n    const navLinksElement = navLinksRef.current;\n    \n    // Add click event listeners with event delegation\n    if (mobileNavElement) {\n      mobileNavElement.addEventListener('click', handleNavEvent);\n    }\n    \n    if (navLinksElement) {\n      navLinksElement.addEventListener('click', handleNavEvent);\n    }\n    \n    return () => {\n      if (mobileNavElement) {\n        mobileNavElement.removeEventListener('click', handleNavEvent);\n      }\n      \n      if (navLinksElement) {\n        navLinksElement.removeEventListener('click', handleNavEvent);\n      }\n    };\n  }, [handleNavEvent]);\n\n  // Initial animation effect\n  useEffect(() => {\n    if (isInView) {\n      controls.start({ \n        opacity: 1, \n        y: 0,\n        transition: { \n          duration: animationConfig?.duration ?? 0.8,\n          ease: \"easeOut\",\n          delay: 0.1 // Small delay to ensure DOM is settled\n        }\n      });\n      \n      // Mark as initialized after animation completes\n      const timeout = setTimeout(() => {\n        setIsInitialized(true);\n      }, (animationConfig?.duration ?? 0.8) * 1000 + 100);\n      \n      return () => clearTimeout(timeout);\n    }\n  }, [isInView, controls, animationConfig?.duration]);\n\n  // Set up intersection observer for section detection - optimized with proper dependencies\n  useEffect(() => {\n    const sectionElements = Object.values(sectionRefsMap)\n      .map(ref => ref.current)\n      .filter(Boolean);\n    \n    if (sectionElements.length === 0) return;\n    \n    // Different margins for mobile and desktop to account for different layouts\n    const options = {\n      root: null,\n      rootMargin: isMobile \n        ? '-80px 0px -70% 0px'  // For mobile with fixed nav\n        : '-10% 0px -70% 0px',  // For desktop\n      threshold: [0, 0.25, 0.5, 0.75] // Multiple thresholds for smoother transitions\n    };\n    \n    const callback = (entries) => {\n      // Find the most visible section\n      const visibleEntries = entries.filter(entry => entry.isIntersecting);\n      \n      if (visibleEntries.length > 0) {\n        // Sort by visibility ratio, highest first\n        visibleEntries.sort((a, b) => b.intersectionRatio - a.intersectionRatio);\n        const topEntry = visibleEntries[0];\n        \n        const sectionId = topEntry.target.getAttribute('data-section');\n        if (sectionId && sectionId !== activeSection) {\n          setActiveSection(sectionId);\n          \n          if (onSectionChange) {\n            onSectionChange(sectionId);\n          }\n        }\n      }\n    };\n    \n    const observer = new IntersectionObserver(callback, options);\n    sectionElements.forEach(element => observer.observe(element));\n    \n    return () => observer.disconnect();\n  }, [activeSection, onSectionChange, sectionRefsMap, isMobile]);\n\n  // Implement scroll behavior for desktop - optimized by separating logic and reducing recalculations\n  useEffect(() => {\n    if (!isInitialized || !containerRef.current || !sidebarRef.current || \n        !sidebarWrapperRef.current || isMobile) {\n      return;\n    }\n    \n    const container = containerRef.current;\n    const sidebar = sidebarRef.current;\n    const sidebarWrapper = sidebarWrapperRef.current;\n    \n    // Add will-change to hint browser about upcoming transforms\n    sidebar.style.willChange = 'position, top, left, width, bottom';\n    \n    let measurements = {\n      containerRect: null,\n      wrapperRect: null,\n      sidebarHeight: null\n    };\n    \n    // Update measurements - only called when needed\n    const updateMeasurements = () => {\n      measurements.containerRect = container.getBoundingClientRect();\n      measurements.wrapperRect = sidebarWrapper.getBoundingClientRect();\n      measurements.sidebarHeight = sidebar.offsetHeight;\n    };\n    \n    // Get initial measurements\n    updateMeasurements();\n    \n    // Optimized scroll handler with throttling\n    const handleScroll = () => {\n      // Update measurements\n      updateMeasurements();\n      \n      // Calculate phase transition points\n      const { containerRect, sidebarHeight, wrapperRect } = measurements;\n      const startFixPoint = containerRect.top <= topOffset;\n      const endFixPoint = containerRect.bottom <= (sidebarHeight + topOffset);\n      \n      // Determine the current scroll phase\n      let newMode;\n      if (!startFixPoint) {\n        newMode = 'normal';\n      } else if (startFixPoint && !endFixPoint) {\n        newMode = 'fixed';\n      } else {\n        newMode = 'end';\n      }\n      \n      // Only update DOM if the mode changes\n      if (sidebarMode !== newMode) {\n        setSidebarMode(newMode);\n        \n        // Use requestAnimationFrame for style updates to optimize rendering\n        requestAnimationFrame(() => {\n          if (newMode === 'normal') {\n            // Phase 1: Normal flow\n            sidebar.style.position = 'relative';\n            sidebar.style.top = '0';\n            sidebar.style.left = '0';\n            sidebar.style.width = '';\n            sidebar.style.bottom = '';\n          } \n          else if (newMode === 'fixed') {\n            // Phase 2: Fixed position\n            sidebar.style.position = 'fixed';\n            sidebar.style.top = `${topOffset}px`;\n            sidebar.style.width = `${wrapperRect.width}px`;\n            sidebar.style.left = `${wrapperRect.left}px`;\n            sidebar.style.bottom = '';\n          } \n          else if (newMode === 'end') {\n            // Phase 3: End position\n            sidebar.style.position = 'absolute';\n            sidebar.style.top = 'auto';\n            sidebar.style.bottom = '0';\n            sidebar.style.left = '0';\n            sidebar.style.width = '';\n          }\n        });\n      }\n    };\n    \n    // Throttled scroll event handling for better performance\n    let ticking = false;\n    let lastScrollTime = 0;\n    const THROTTLE_MS = 100; // Throttle to max 10 updates per second\n    \n    const scrollListener = () => {\n      const now = Date.now();\n      if (!ticking && now - lastScrollTime > THROTTLE_MS) {\n        requestAnimationFrame(() => {\n          handleScroll();\n          ticking = false;\n          lastScrollTime = now;\n        });\n        ticking = true;\n      }\n    };\n    \n    window.addEventListener('scroll', scrollListener, { passive: true });\n    \n    // Optimized resize handler\n    const handleResize = () => {\n      // Skip for mobile\n      if (window.innerWidth <= 768) return;\n      \n      // Update measurements and apply current mode\n      updateMeasurements();\n      handleScroll();\n    };\n    \n    // Use ResizeObserver instead of window resize for better performance\n    const resizeObserver = new ResizeObserver(handleResize);\n    resizeObserver.observe(container);\n    \n    // Initial setup\n    handleResize();\n    handleScroll();\n    \n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n      resizeObserver.disconnect();\n      // Remove will-change to free up resources\n      sidebar.style.willChange = 'auto';\n    };\n  }, [isInitialized, topOffset, sidebarMode, isMobile, containerRef, sidebarRef, sidebarWrapperRef]);\n\n  // Mobile nav scroll behavior with auto-hide - optimized with throttling\n  useEffect(() => {\n    if (!isInitialized || !isMobile || !mobileNavRef.current) {\n      return;\n    }\n    \n    const mobileNav = mobileNavRef.current;\n    \n    // Add will-change to hint browser about transforms\n    mobileNav.style.willChange = 'transform, opacity, background-color';\n    \n    // Optimized scroll handler for mobile nav\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n      \n      // Show navbar when scrolling up or at the top of the page\n      if (currentScrollY < lastScrollY || currentScrollY < 50) {\n        setMobileNavVisible(true);\n      } else {\n        // Hide navbar when scrolling down past the threshold\n        setMobileNavVisible(false);\n      }\n      \n      // Update background opacity based on scroll position - one-time calculation\n      requestAnimationFrame(() => {\n        const bgOpacity = currentScrollY > 50 ? 0.95 : 0.7;\n        mobileNav.style.backgroundColor = `rgba(17, 17, 17, ${bgOpacity})`;\n        mobileNav.style.boxShadow = currentScrollY > 50 ? '0 2px 10px rgba(0, 0, 0, 0.1)' : 'none';\n      });\n      \n      // Store current scroll position\n      setLastScrollY(currentScrollY);\n    };\n    \n    // Throttled scroll event handling for better performance\n    let ticking = false;\n    let lastScrollTime = 0;\n    const THROTTLE_MS = 100; // Throttle to max 10 updates per second\n    \n    const scrollListener = () => {\n      const now = Date.now();\n      if (!ticking && now - lastScrollTime > THROTTLE_MS) {\n        requestAnimationFrame(() => {\n          handleScroll();\n          ticking = false;\n          lastScrollTime = now;\n        });\n        ticking = true;\n      }\n    };\n    \n    window.addEventListener('scroll', scrollListener, { passive: true });\n    \n    // Initial state - initialize once\n    mobileNav.style.backgroundColor = 'rgba(17, 17, 17, 0.7)';\n    mobileNav.style.boxShadow = 'none';\n    \n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n      // Remove will-change to free up resources when not needed\n      mobileNav.style.willChange = 'auto';\n    };\n  }, [isInitialized, isMobile, lastScrollY, mobileNavRef]);\n\n  // Stats section - extracted and memoized\n  const renderStats = useMemo(() => {\n    if (!showStats || !person.stats || person.stats.length === 0) return null;\n    \n    return (\n      <div \n        className=\"stats-container\"\n        style={{\n          display: 'flex',\n          justifyContent: isMobile ? 'center' : 'space-between',\n          flexWrap: 'wrap',\n          marginTop: '3rem',\n          width: '100%',\n          gap: isMobile ? '2rem' : 0,\n        }}\n      >\n        {person.stats.map((stat, statIdx) => (\n          <StatItem\n            key={statIdx}\n            stat={stat}\n            isMobile={isMobile}\n            highlightColor={highlightColor}\n            textColor={textColor}\n          />\n        ))}\n      </div>\n    );\n  }, [showStats, person.stats, isMobile, highlightColor, textColor]);\n\n  // Section renderers - separated for clarity and optimization\n  const renderAboutSection = useMemo(() => {\n    if (!person.bio) return null;\n    \n    return (\n      <>\n        {person.bio.map((paragraph, idx) => (\n          <SectionContent\n            key={idx}\n            content={paragraph}\n            textColor={textColor}\n            fontFamily={fontFamily}\n          />\n        ))}\n        \n        {renderStats}\n      </>\n    );\n  }, [person.bio, renderStats, textColor, fontFamily]);\n\n  const renderExperienceSection = useMemo(() => {\n    if (!person.experience) {\n      return (\n        <SectionContent\n          content=\"Throughout my career, I've specialized in developing software systems that seamlessly integrate front-end experiences with robust back-end architectures. My experience spans various domains, from interactive media to data visualization systems.\"\n          textColor={textColor}\n          fontFamily={fontFamily}\n        />\n      );\n    }\n    \n    return (\n      <>\n        {person.experience.map((item, expIdx) => (\n          <SectionContent\n            key={expIdx}\n            content={item.content}\n            textColor={textColor}\n            fontFamily={fontFamily}\n          />\n        ))}\n      </>\n    );\n  }, [person.experience, textColor, fontFamily]);\n\n  const renderProjectsSection = useMemo(() => {\n    if (!person.projects) return null;\n    \n    return (\n      <>\n        {person.projects.map((item, projIdx) => (\n          <SectionContent\n            key={projIdx}\n            content={item.content}\n            textColor={textColor}\n            fontFamily={fontFamily}\n          />\n        ))}\n      </>\n    );\n  }, [person.projects, textColor, fontFamily]);\n\n  // Main section renderer - unified logic for any section type using memoization\n  const getRenderedSection = useCallback((sectionId) => {\n    // Find section from navigationItems\n    const section = navigationItems.find(item => item.id === sectionId);\n    if (!section) return null;\n    \n    if (section.content) {\n      return (\n        <SectionContent\n          content={section.content}\n          textColor={textColor}\n          fontFamily={fontFamily}\n        />\n      );\n    }\n    \n    switch (sectionId) {\n      case 'about':\n        return renderAboutSection;\n      case 'experience':\n        return renderExperienceSection;\n      case 'projects':\n        return renderProjectsSection;\n      default:\n        return null;\n    }\n  }, [\n    navigationItems, \n    renderAboutSection, \n    renderExperienceSection, \n    renderProjectsSection, \n    textColor, \n    fontFamily\n  ]);\n\n  return (\n    <>\n      {/* Mobile navigation with event delegation */}\n      {isMobile && (\n        <div\n          ref={mobileNavRef}\n          className=\"mobile-nav\"\n          style={{\n            ...styles.mobileNav,\n            transform: mobileNavVisible ? 'translateY(0)' : 'translateY(-100%)',\n            opacity: mobileNavVisible ? 1 : 0,\n          }}\n        >\n          {navigationItems.map((navItem) => (\n            <MobileNavItem\n              key={navItem.id}\n              navItem={navItem}\n              activeSection={activeSection}\n              highlightColor={highlightColor}\n              textColor={textColor}\n              minLineWidth={minLineWidth}\n              maxLineWidth={maxLineWidth}\n            />\n          ))}\n        </div>\n      )}\n      \n      <motion.div \n        ref={containerRef}\n        className=\"profile-container\"\n        initial={{ opacity: 0, y: animationConfig?.initialY ?? 30 }}\n        animate={controls}\n        style={{\n          display: 'flex',\n          flexDirection: isMobile ? 'column' : 'row',\n          width: '100%',\n          maxWidth: '1300px',\n          margin: '0 auto',\n          minHeight: isMobile ? 'auto' : '70vh',\n          position: 'relative',\n          paddingTop: isMobile ? '80px' : 0, // Add padding for fixed mobile nav\n        }}\n      >\n        {/* Left sidebar wrapper - desktop only */}\n        {!isMobile && (\n          <div \n            ref={sidebarWrapperRef}\n            className=\"sidebar-wrapper\"\n            style={{\n              width: `${layoutValues.sidebarWidth}%`,\n              position: 'relative',\n            }}\n          >\n            {/* Profile sidebar */}\n            <div \n              ref={sidebarRef}\n              className=\"profile-sidebar\"\n              style={{\n                padding: '3rem 2rem 2rem 0',\n                display: 'flex',\n                flexDirection: 'column',\n                width: '100%',\n                position: 'relative',\n                top: 0,\n              }}\n            >\n              <ProfileInfo\n                person={person}\n                isMobile={isMobile}\n                highlightColor={highlightColor}\n                textColor={textColor}\n                fontFamily={fontFamily}\n              />\n              \n              {/* Navigation links with event delegation */}\n              {!isMobile && (\n                <div \n                  ref={navLinksRef}\n                  className=\"nav-links\" \n                  style={{ marginTop: '3rem' }}\n                >\n                  {navigationItems.map((navItem) => (\n                    <NavLink\n                      key={navItem.id}\n                      navItem={navItem}\n                      activeSection={activeSection}\n                      expandedNavItem={expandedNavItem}\n                      onMouseEnter={handleNavItemHover}\n                      onMouseLeave={handleNavItemLeave}\n                      highlightColor={highlightColor}\n                      textColor={textColor}\n                      minLineWidth={minLineWidth}\n                      maxLineWidth={maxLineWidth}\n                    />\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n        \n        {/* Profile Info for mobile */}\n        {isMobile && (\n          <ProfileInfo\n            person={person}\n            isMobile={isMobile}\n            highlightColor={highlightColor}\n            textColor={textColor}\n            fontFamily={fontFamily}\n          />\n        )}\n        \n        {/* Right content section */}\n        <div \n          ref={contentRef}\n          className=\"content-section\"\n          style={{\n            width: isMobile ? '100%' : `${layoutValues.contentWidth}%`,\n            padding: isMobile \n              ? '2rem 1.5rem' \n              : `3rem 0 2rem ${layoutValues.contentPadding}rem`,\n            marginLeft: isMobile ? 0 : 'auto',\n          }}\n        >\n          {/* Render sections based on navigationItems */}\n          {navigationItems.map((section, index) => {\n            if (index >= sectionRefs.length) return null;\n            \n            return (\n              <div \n                key={section.id}\n                ref={sectionRefs[index]}\n                data-section={section.id}\n                className=\"section\"\n                id={section.id}\n                style={{\n                  marginBottom: '3rem',\n                  scrollMarginTop: isMobile ? '80px' : '2rem',\n                }}\n              >\n                {getRenderedSection(section.id)}\n              </div>\n            );\n          })}\n          \n          {/* Additional sections */}\n          {additionalSections.map((section, index) => (\n            <div \n              key={`additional-${index}`}\n              className=\"section\"\n              style={{\n                marginBottom: '3rem',\n                scrollMarginTop: isMobile ? '80px' : '2rem',\n              }}\n            >\n              {section.title && (\n                <h3 style={{\n                  fontSize: '1.4rem',\n                  color: highlightColor,\n                  marginBottom: '1rem',\n                  fontWeight: '300',\n                }}>\n                  {section.title}\n                </h3>\n              )}\n              <SectionContent\n                content={section.content}\n                textColor={textColor}\n                fontFamily={fontFamily}\n              />\n            </div>\n          ))}\n        </div>\n      </motion.div>\n    </>\n  );\n};\n\n// Using memo to prevent unnecessary re-renders\nexport default React.memo(PersonProfileCard);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}