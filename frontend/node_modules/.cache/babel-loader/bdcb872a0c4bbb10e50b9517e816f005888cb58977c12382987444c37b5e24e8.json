{"ast":null,"code":"var _jsxFileName = \"/home/valeria/Documents/Crucible/frontend/src/components/sections/codex/creators/CreatorsCometShower.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './creatorsCometShower.css';\n\n// Individual Comet component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comet = ({\n  startX,\n  startY,\n  length,\n  angle,\n  speed,\n  size,\n  opacity,\n  coreColor,\n  glowColor,\n  trailColor,\n  lifespan,\n  id,\n  onComplete\n}) => {\n  _s();\n  const cometRef = useRef(null);\n  const [isVisible, setIsVisible] = useState(false);\n  const [isDone, setIsDone] = useState(false);\n  const startTimeRef = useRef(Date.now());\n  useEffect(() => {\n    // Appear with slight delay for staggered effect\n    const timeout = setTimeout(() => {\n      setIsVisible(true);\n    }, Math.random() * 1000);\n\n    // Set up lifespan\n    const lifespanTimer = setTimeout(() => {\n      setIsDone(true);\n\n      // Additional time for fade-out animation before calling onComplete\n      setTimeout(() => {\n        onComplete(id);\n      }, 500); // Match this to CSS fade-out duration\n    }, lifespan);\n    return () => {\n      clearTimeout(timeout);\n      clearTimeout(lifespanTimer);\n    };\n  }, [id, lifespan, onComplete]);\n\n  // Calculate position along trajectory\n  const calculatePosition = () => {\n    // Only animate while visible and not done\n    if (!isVisible || isDone) return {\n      opacity: 0\n    };\n\n    // Time elapsed since start\n    const elapsed = Date.now() - startTimeRef.current;\n\n    // Distance traveled based on speed and elapsed time\n    const distanceX = speed * elapsed * Math.cos(angle * Math.PI / 180);\n    const distanceY = speed * elapsed * Math.sin(angle * Math.PI / 180);\n\n    // Opacity fade in/out logic\n    let opacityFactor = 1;\n    const fadeInDuration = 500;\n    const fadeOutDuration = 500;\n    if (elapsed < fadeInDuration) {\n      // Fade in\n      opacityFactor = elapsed / fadeInDuration;\n    } else if (lifespan - elapsed < fadeOutDuration) {\n      // Fade out\n      opacityFactor = (lifespan - elapsed) / fadeOutDuration;\n    }\n    return {\n      transform: `translate(${distanceX}px, ${distanceY}px)`,\n      opacity: isVisible ? opacity * opacityFactor : 0\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: cometRef,\n    className: `creators-comet-shower__comet ${isDone ? 'creators-comet-shower__comet--done' : ''}`,\n    style: {\n      top: `${startY}px`,\n      left: `${startX}px`,\n      ...calculatePosition()\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"creators-comet-shower__comet-head\",\n      style: {\n        width: `${size}px`,\n        height: `${size}px`,\n        backgroundColor: coreColor,\n        boxShadow: `0 0 ${size * 2}px ${size / 2}px ${glowColor}`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"creators-comet-shower__comet-tail\",\n      style: {\n        width: `${length}px`,\n        background: `linear-gradient(to left, ${glowColor}, ${trailColor}, rgba(0,0,0,0))`,\n        transform: `rotate(${angle + 180}deg)`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Comet, \"wGwzLOOEJttKKH3DNFRwvvLgnag=\");\n_c = Comet;\nconst CreatorsCometShower = ({\n  density = 20,\n  // Number of comets\n  minSpeed = 0.05,\n  // Minimum comet speed\n  maxSpeed = 0.15,\n  // Maximum comet speed\n  minSize = 2,\n  // Minimum comet size in px\n  maxSize = 4,\n  // Maximum comet size in px\n  minLength = 80,\n  // Minimum comet tail length\n  maxLength = 150,\n  // Maximum comet tail length\n  minLifespan = 3000,\n  // Minimum comet lifespan\n  maxLifespan = 8000,\n  // Maximum comet lifespan\n  minOpacity = 0.6,\n  // Minimum comet opacity\n  maxOpacity = 1,\n  // Maximum comet opacity\n  maxY = 33,\n  // Maximum vertical percentage to fill (e.g., 33 means top 1/3 of container)\n  coreColor = 'rgba(255, 255, 255, 1)',\n  // Comet head color\n  glowColor = 'rgba(255, 255, 227, 0.9)',\n  // Comet glow color\n  trailColor = 'rgba(191, 173, 127, 0.5)',\n  // Comet trail color\n  active = true,\n  // Whether animation is active\n  continuous = true // Whether to continuously spawn new comets\n}) => {\n  _s2();\n  const containerRef = useRef(null);\n  const [comets, setComets] = useState([]);\n  const [containerDimensions, setContainerDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  const lastUpdateTimeRef = useRef(Date.now());\n  const activeCometCountRef = useRef(0);\n\n  // Initialize container dimensions and generate initial comets\n  useEffect(() => {\n    if (!containerRef.current) return;\n    const updateDimensions = () => {\n      const {\n        width,\n        height\n      } = containerRef.current.getBoundingClientRect();\n      setContainerDimensions({\n        width,\n        height\n      });\n    };\n\n    // Initial update\n    updateDimensions();\n\n    // Update on resize\n    window.addEventListener('resize', updateDimensions);\n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n    };\n  }, []);\n\n  // Function to create a single comet with random properties\n  const createComet = id => {\n    const {\n      width,\n      height\n    } = containerDimensions;\n    const maxYPixels = height * maxY / 100;\n\n    // Random starting position along top edge (with some buffer on sides)\n    const startX = Math.random() * (width * 1.2) - width * 0.1;\n    const startY = Math.random() * 100 - 150; // Start above the viewport for natural entry\n\n    // Random angle (downward trajectory)\n    // Angles between 30 and 150 degrees (where 90 is straight down)\n    const angle = 70 + Math.random() * 40;\n\n    // Random speed within bounds\n    const speed = minSpeed + Math.random() * (maxSpeed - minSpeed);\n\n    // Random size within bounds\n    const size = minSize + Math.random() * (maxSize - minSize);\n\n    // Random tail length proportional to speed\n    const length = minLength + Math.random() * (maxLength - minLength);\n\n    // Random opacity within bounds\n    const opacity = minOpacity + Math.random() * (maxOpacity - minOpacity);\n\n    // Random lifespan accounting for vertical target\n    // Calculate distance to maxY position\n    const distanceToMaxY = maxYPixels - startY;\n    const timeToMaxY = distanceToMaxY / (speed * Math.sin(angle * Math.PI / 180));\n    const minCalculatedLifespan = timeToMaxY * 0.8; // Ensure it lives long enough to reach target\n\n    // Use calculated minimum or specified minimum, whichever is greater\n    const calculatedMinLifespan = Math.max(minLifespan, minCalculatedLifespan);\n    const lifespan = calculatedMinLifespan + Math.random() * (maxLifespan - calculatedMinLifespan);\n    return {\n      id,\n      startX,\n      startY,\n      angle,\n      speed,\n      size,\n      length,\n      opacity,\n      coreColor,\n      glowColor,\n      trailColor,\n      lifespan\n    };\n  };\n\n  // Handle continuous comet generation or initial batch\n  useEffect(() => {\n    if (!active || containerDimensions.width === 0) return;\n\n    // Initial batch generation\n    if (comets.length === 0) {\n      const initialComets = Array.from({\n        length: density\n      }, (_, i) => createComet(`comet-${Date.now()}-${i}`));\n      setComets(initialComets);\n      activeCometCountRef.current = initialComets.length;\n    }\n\n    // Continuous generation\n    let intervalId;\n    if (continuous) {\n      intervalId = setInterval(() => {\n        // Only add new comets if we're below density\n        if (activeCometCountRef.current < density) {\n          const now = Date.now();\n          // Don't add too many at once (throttle)\n          if (now - lastUpdateTimeRef.current > 200) {\n            lastUpdateTimeRef.current = now;\n            const newComet = createComet(`comet-${now}`);\n            setComets(prevComets => [...prevComets, newComet]);\n            activeCometCountRef.current++;\n          }\n        }\n      }, 300); // Check every 300ms if we need more comets\n    }\n    return () => {\n      if (intervalId) clearInterval(intervalId);\n    };\n  }, [active, continuous, containerDimensions, density]);\n\n  // Handle comet completion\n  const handleCometComplete = id => {\n    setComets(prevComets => prevComets.filter(comet => comet.id !== id));\n    activeCometCountRef.current--;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"creators-comet-shower\",\n    children: comets.map(comet => /*#__PURE__*/_jsxDEV(Comet, {\n      ...comet,\n      onComplete: handleCometComplete\n    }, comet.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n};\n_s2(CreatorsCometShower, \"pkNC56U3jP5U7VY7jv44/dnILVE=\");\n_c2 = CreatorsCometShower;\nexport default CreatorsCometShower;\nvar _c, _c2;\n$RefreshReg$(_c, \"Comet\");\n$RefreshReg$(_c2, \"CreatorsCometShower\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Comet","startX","startY","length","angle","speed","size","opacity","coreColor","glowColor","trailColor","lifespan","id","onComplete","_s","cometRef","isVisible","setIsVisible","isDone","setIsDone","startTimeRef","Date","now","timeout","setTimeout","Math","random","lifespanTimer","clearTimeout","calculatePosition","elapsed","current","distanceX","cos","PI","distanceY","sin","opacityFactor","fadeInDuration","fadeOutDuration","transform","ref","className","style","top","left","children","width","height","backgroundColor","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","background","_c","CreatorsCometShower","density","minSpeed","maxSpeed","minSize","maxSize","minLength","maxLength","minLifespan","maxLifespan","minOpacity","maxOpacity","maxY","active","continuous","_s2","containerRef","comets","setComets","containerDimensions","setContainerDimensions","lastUpdateTimeRef","activeCometCountRef","updateDimensions","getBoundingClientRect","window","addEventListener","removeEventListener","createComet","maxYPixels","distanceToMaxY","timeToMaxY","minCalculatedLifespan","calculatedMinLifespan","max","initialComets","Array","from","_","i","intervalId","setInterval","newComet","prevComets","clearInterval","handleCometComplete","filter","comet","map","_c2","$RefreshReg$"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/sections/codex/creators/CreatorsCometShower.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './creatorsCometShower.css';\n\n// Individual Comet component\nconst Comet = ({\n  startX,\n  startY,\n  length,\n  angle,\n  speed,\n  size,\n  opacity,\n  coreColor,\n  glowColor,\n  trailColor,\n  lifespan,\n  id,\n  onComplete\n}) => {\n  const cometRef = useRef(null);\n  const [isVisible, setIsVisible] = useState(false);\n  const [isDone, setIsDone] = useState(false);\n  const startTimeRef = useRef(Date.now());\n  \n  useEffect(() => {\n    // Appear with slight delay for staggered effect\n    const timeout = setTimeout(() => {\n      setIsVisible(true);\n    }, Math.random() * 1000);\n\n    // Set up lifespan\n    const lifespanTimer = setTimeout(() => {\n      setIsDone(true);\n      \n      // Additional time for fade-out animation before calling onComplete\n      setTimeout(() => {\n        onComplete(id);\n      }, 500); // Match this to CSS fade-out duration\n    }, lifespan);\n    \n    return () => {\n      clearTimeout(timeout);\n      clearTimeout(lifespanTimer);\n    };\n  }, [id, lifespan, onComplete]);\n  \n  // Calculate position along trajectory\n  const calculatePosition = () => {\n    // Only animate while visible and not done\n    if (!isVisible || isDone) return { opacity: 0 };\n    \n    // Time elapsed since start\n    const elapsed = Date.now() - startTimeRef.current;\n    \n    // Distance traveled based on speed and elapsed time\n    const distanceX = (speed * elapsed * Math.cos(angle * Math.PI / 180));\n    const distanceY = (speed * elapsed * Math.sin(angle * Math.PI / 180));\n    \n    // Opacity fade in/out logic\n    let opacityFactor = 1;\n    const fadeInDuration = 500;\n    const fadeOutDuration = 500;\n    \n    if (elapsed < fadeInDuration) {\n      // Fade in\n      opacityFactor = elapsed / fadeInDuration;\n    } else if (lifespan - elapsed < fadeOutDuration) {\n      // Fade out\n      opacityFactor = (lifespan - elapsed) / fadeOutDuration;\n    }\n    \n    return {\n      transform: `translate(${distanceX}px, ${distanceY}px)`,\n      opacity: isVisible ? opacity * opacityFactor : 0\n    };\n  };\n  \n  return (\n    <div \n      ref={cometRef}\n      className={`creators-comet-shower__comet ${isDone ? 'creators-comet-shower__comet--done' : ''}`}\n      style={{\n        top: `${startY}px`,\n        left: `${startX}px`,\n        ...calculatePosition()\n      }}\n    >\n      <div \n        className=\"creators-comet-shower__comet-head\"\n        style={{ \n          width: `${size}px`, \n          height: `${size}px`,\n          backgroundColor: coreColor,\n          boxShadow: `0 0 ${size * 2}px ${size / 2}px ${glowColor}`\n        }}\n      />\n      <div \n        className=\"creators-comet-shower__comet-tail\"\n        style={{ \n          width: `${length}px`,\n          background: `linear-gradient(to left, ${glowColor}, ${trailColor}, rgba(0,0,0,0))`,\n          transform: `rotate(${angle + 180}deg)`\n        }}\n      />\n    </div>\n  );\n};\n\nconst CreatorsCometShower = ({\n  density = 20,          // Number of comets\n  minSpeed = 0.05,       // Minimum comet speed\n  maxSpeed = 0.15,       // Maximum comet speed\n  minSize = 2,           // Minimum comet size in px\n  maxSize = 4,           // Maximum comet size in px\n  minLength = 80,        // Minimum comet tail length\n  maxLength = 150,       // Maximum comet tail length\n  minLifespan = 3000,    // Minimum comet lifespan\n  maxLifespan = 8000,    // Maximum comet lifespan\n  minOpacity = 0.6,      // Minimum comet opacity\n  maxOpacity = 1,        // Maximum comet opacity\n  maxY = 33,             // Maximum vertical percentage to fill (e.g., 33 means top 1/3 of container)\n  coreColor = 'rgba(255, 255, 255, 1)',             // Comet head color\n  glowColor = 'rgba(255, 255, 227, 0.9)',           // Comet glow color\n  trailColor = 'rgba(191, 173, 127, 0.5)',          // Comet trail color\n  active = true,         // Whether animation is active\n  continuous = true      // Whether to continuously spawn new comets\n}) => {\n  const containerRef = useRef(null);\n  const [comets, setComets] = useState([]);\n  const [containerDimensions, setContainerDimensions] = useState({ width: 0, height: 0 });\n  const lastUpdateTimeRef = useRef(Date.now());\n  const activeCometCountRef = useRef(0);\n  \n  // Initialize container dimensions and generate initial comets\n  useEffect(() => {\n    if (!containerRef.current) return;\n    \n    const updateDimensions = () => {\n      const { width, height } = containerRef.current.getBoundingClientRect();\n      setContainerDimensions({ width, height });\n    };\n    \n    // Initial update\n    updateDimensions();\n    \n    // Update on resize\n    window.addEventListener('resize', updateDimensions);\n    \n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n    };\n  }, []);\n  \n  // Function to create a single comet with random properties\n  const createComet = (id) => {\n    const { width, height } = containerDimensions;\n    const maxYPixels = (height * maxY) / 100;\n    \n    // Random starting position along top edge (with some buffer on sides)\n    const startX = Math.random() * (width * 1.2) - width * 0.1;\n    const startY = Math.random() * 100 - 150; // Start above the viewport for natural entry\n    \n    // Random angle (downward trajectory)\n    // Angles between 30 and 150 degrees (where 90 is straight down)\n    const angle = 70 + Math.random() * 40;\n    \n    // Random speed within bounds\n    const speed = minSpeed + Math.random() * (maxSpeed - minSpeed);\n    \n    // Random size within bounds\n    const size = minSize + Math.random() * (maxSize - minSize);\n    \n    // Random tail length proportional to speed\n    const length = minLength + Math.random() * (maxLength - minLength);\n    \n    // Random opacity within bounds\n    const opacity = minOpacity + Math.random() * (maxOpacity - minOpacity);\n    \n    // Random lifespan accounting for vertical target\n    // Calculate distance to maxY position\n    const distanceToMaxY = maxYPixels - startY;\n    const timeToMaxY = distanceToMaxY / (speed * Math.sin(angle * Math.PI / 180));\n    const minCalculatedLifespan = timeToMaxY * 0.8; // Ensure it lives long enough to reach target\n    \n    // Use calculated minimum or specified minimum, whichever is greater\n    const calculatedMinLifespan = Math.max(minLifespan, minCalculatedLifespan);\n    const lifespan = calculatedMinLifespan + Math.random() * (maxLifespan - calculatedMinLifespan);\n    \n    return {\n      id,\n      startX,\n      startY,\n      angle,\n      speed,\n      size,\n      length,\n      opacity,\n      coreColor,\n      glowColor,\n      trailColor,\n      lifespan\n    };\n  };\n  \n  // Handle continuous comet generation or initial batch\n  useEffect(() => {\n    if (!active || containerDimensions.width === 0) return;\n    \n    // Initial batch generation\n    if (comets.length === 0) {\n      const initialComets = Array.from({ length: density }, (_, i) => \n        createComet(`comet-${Date.now()}-${i}`)\n      );\n      \n      setComets(initialComets);\n      activeCometCountRef.current = initialComets.length;\n    }\n    \n    // Continuous generation\n    let intervalId;\n    if (continuous) {\n      intervalId = setInterval(() => {\n        // Only add new comets if we're below density\n        if (activeCometCountRef.current < density) {\n          const now = Date.now();\n          // Don't add too many at once (throttle)\n          if (now - lastUpdateTimeRef.current > 200) {\n            lastUpdateTimeRef.current = now;\n            \n            const newComet = createComet(`comet-${now}`);\n            setComets(prevComets => [...prevComets, newComet]);\n            activeCometCountRef.current++;\n          }\n        }\n      }, 300); // Check every 300ms if we need more comets\n    }\n    \n    return () => {\n      if (intervalId) clearInterval(intervalId);\n    };\n  }, [active, continuous, containerDimensions, density]);\n  \n  // Handle comet completion\n  const handleCometComplete = (id) => {\n    setComets(prevComets => prevComets.filter(comet => comet.id !== id));\n    activeCometCountRef.current--;\n  };\n  \n  return (\n    <div \n      ref={containerRef}\n      className=\"creators-comet-shower\"\n    >\n      {comets.map(comet => (\n        <Comet\n          key={comet.id}\n          {...comet}\n          onComplete={handleCometComplete}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default CreatorsCometShower;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}