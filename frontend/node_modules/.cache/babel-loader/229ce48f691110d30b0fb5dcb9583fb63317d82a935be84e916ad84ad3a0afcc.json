{"ast":null,"code":"var _jsxFileName = \"/home/valeria/Documents/Crucible/frontend/src/components/core/effects/ScrollingTextAnimation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useMemo, useCallback, useState } from 'react';\nimport { motion, useScroll, useTransform, useSpring, useReducedMotion } from 'framer-motion';\nimport { createUseStyles } from 'react-jss';\n\n// Optimized styles with simplified GPU acceleration properties\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  animatedContainer: {\n    position: 'relative',\n    width: '100%',\n    textAlign: props => props.textAlign || 'center',\n    margin: props => props.margin || '0 0 3rem 0',\n    zIndex: 2,\n    willChange: 'transform, opacity',\n    // Streamlined GPU acceleration properties to avoid layer conflicts\n    transform: 'translate3d(0,0,0)',\n    backfaceVisibility: 'hidden',\n    '-webkit-font-smoothing': 'antialiased'\n  },\n  content: {\n    width: '100%'\n  },\n  divider: props => ({\n    width: props.dividerWidth || '150px',\n    height: props.dividerHeight || '1px',\n    background: props.dividerBackground || 'linear-gradient(to right, rgba(160, 142, 97, 0), rgba(160, 142, 97, 0.6), rgba(160, 142, 97, 0))',\n    margin: props.dividerMargin || '1rem auto',\n    display: props.showDivider ? 'block' : 'none'\n  })\n});\n\n/**\n * ScrollingTextAnimation Component\n * \n * A highly optimized, butter-smooth scroll-based animation component\n * for text elements with exceptional performance on both mobile and desktop.\n */\nconst ScrollingTextAnimation = ({\n  children,\n  scrollConfig = {},\n  textAlign = 'center',\n  margin = '0 0 3rem 0',\n  showDivider = true,\n  dividerWidth = '150px',\n  dividerHeight = '1px',\n  dividerBackground,\n  dividerMargin = '1rem auto',\n  style = {},\n  className = ''\n}) => {\n  _s();\n  // Set default scroll configuration with performance-optimized defaults\n  const {\n    startPosition = 0,\n    endPosition = 300,\n    initialY = -100,\n    finalY = 0,\n    clampValues = true,\n    opacityValues = [1, 0.95, 0.9],\n    opacityScrollPositions = [startPosition, endPosition, endPosition + 100],\n    reverseDirection = false,\n    // Enhanced spring configuration for smoother, higher framerate animations\n    springConfig = {\n      stiffness: 80,\n      // Lower stiffness for smoother motion\n      damping: 25,\n      // Balanced damping \n      mass: 0.1,\n      // Slightly higher mass for momentum\n      restDelta: 0.001,\n      // Higher precision for position\n      restSpeed: 0.001 // Higher precision for velocity\n    },\n    maxVelocity = 2000,\n    // Maximum velocity cap (pixels per second)\n    disableOnMobile = false\n  } = scrollConfig;\n\n  // Use Framer Motion's built-in reduced motion hook\n  const prefersReducedMotion = useReducedMotion();\n\n  // Single state to track if in view (more efficient than multiple states)\n  const [isInView, setIsInView] = useState(false);\n\n  // Ref for the container element\n  const containerRef = useRef(null);\n\n  // Check if we should use mobile mode (using a ref to avoid rerenders)\n  const isMobileRef = useRef(false);\n\n  // Initialize and update mobile detection\n  useEffect(() => {\n    if (typeof window === 'undefined') return;\n    const checkMobile = () => {\n      isMobileRef.current = window.innerWidth <= 768 || /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    };\n    checkMobile();\n    const handleResize = () => {\n      checkMobile();\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Determine if simplified animations should be used\n  const shouldUseSimplifiedAnimations = useMemo(() => {\n    return prefersReducedMotion || disableOnMobile && isMobileRef.current;\n  }, [prefersReducedMotion, disableOnMobile]);\n\n  // Optimized scroll tracking with improved performance\n  const {\n    scrollY\n  } = useScroll({\n    smooth: 0.05 // Smoother scrolling for high-framerate animations\n  });\n\n  // Create transformed Y value from scroll position\n  const rawTranslateY = useTransform(scrollY, [startPosition, endPosition], reverseDirection ? [finalY, initialY] : [initialY, finalY], {\n    clamp: clampValues\n  });\n\n  // Apply velocity limiting to the spring for more controlled animations\n  const translateY = useSpring(rawTranslateY, {\n    ...springConfig,\n    // Add velocity limiter function to cap maximum speed\n    velocity: current => Math.min(Math.max(current, -maxVelocity), maxVelocity)\n  });\n\n  // Create opacity animation with the same optimized approach\n  const rawOpacity = useTransform(scrollY, opacityScrollPositions, opacityValues, {\n    clamp: clampValues\n  });\n  const opacity = useSpring(rawOpacity, springConfig);\n\n  // Optimized intersection observer with frame synchronization\n  useEffect(() => {\n    if (!containerRef.current || typeof IntersectionObserver === 'undefined') return;\n    let animationFrameId = null;\n    const currentRef = containerRef.current;\n    const observer = new IntersectionObserver(entries => {\n      // Cancel any pending frame\n      if (animationFrameId) {\n        cancelAnimationFrame(animationFrameId);\n      }\n\n      // Schedule update on next animation frame for better synchronization\n      animationFrameId = requestAnimationFrame(() => {\n        if (entries[0]) {\n          setIsInView(entries[0].isIntersecting);\n        }\n      });\n    }, {\n      root: null,\n      rootMargin: '20% 0%',\n      // Larger margin to start animation earlier\n      threshold: 0.1\n    });\n    observer.observe(currentRef);\n    return () => {\n      if (animationFrameId) {\n        cancelAnimationFrame(animationFrameId);\n      }\n      observer.unobserve(currentRef);\n    };\n  }, []);\n\n  // Create styles for component\n  const styleProps = useMemo(() => ({\n    textAlign,\n    margin,\n    showDivider,\n    dividerWidth,\n    dividerHeight,\n    dividerBackground,\n    dividerMargin\n  }), [textAlign, margin, showDivider, dividerWidth, dividerHeight, dividerBackground, dividerMargin]);\n  const classes = useStyles(styleProps);\n\n  // Memoize animation style to prevent recalculations\n  const animationStyle = useMemo(() => {\n    // No animation if not in view\n    if (!isInView) {\n      return {\n        y: reverseDirection ? finalY : initialY,\n        opacity: opacityValues[0]\n      };\n    }\n\n    // Simplified animation for reduced motion or mobile\n    if (shouldUseSimplifiedAnimations) {\n      return {\n        y: finalY,\n        opacity: 1,\n        transition: {\n          duration: 0.5,\n          ease: [0.25, 0.1, 0.25, 1.0]\n        }\n      };\n    }\n\n    // Full high-performance animation\n    return {\n      y: translateY,\n      opacity: opacity\n    };\n  }, [isInView, shouldUseSimplifiedAnimations, translateY, opacity, reverseDirection, finalY, initialY, opacityValues]);\n\n  // Optimized transform template for GPU rendering\n  const optimizedTransformTemplate = useCallback((_, transform) => {\n    return `${transform} translateZ(0)`;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    ref: containerRef,\n    className: `${classes.animatedContainer} ${className}`,\n    style: {\n      ...style,\n      ...animationStyle\n    },\n    transformTemplate: optimizedTransformTemplate,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), showDivider && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.divider\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrollingTextAnimation, \"oDi5ALkAWsd+THqn4SYkMzfcyi0=\", false, function () {\n  return [useReducedMotion, useScroll, useTransform, useSpring, useTransform, useSpring, useStyles];\n});\n_c = ScrollingTextAnimation;\nexport default ScrollingTextAnimation;\nvar _c;\n$RefreshReg$(_c, \"ScrollingTextAnimation\");","map":{"version":3,"names":["React","useRef","useEffect","useMemo","useCallback","useState","motion","useScroll","useTransform","useSpring","useReducedMotion","createUseStyles","jsxDEV","_jsxDEV","useStyles","animatedContainer","position","width","textAlign","props","margin","zIndex","willChange","transform","backfaceVisibility","content","divider","dividerWidth","height","dividerHeight","background","dividerBackground","dividerMargin","display","showDivider","ScrollingTextAnimation","children","scrollConfig","style","className","_s","startPosition","endPosition","initialY","finalY","clampValues","opacityValues","opacityScrollPositions","reverseDirection","springConfig","stiffness","damping","mass","restDelta","restSpeed","maxVelocity","disableOnMobile","prefersReducedMotion","isInView","setIsInView","containerRef","isMobileRef","window","checkMobile","current","innerWidth","test","navigator","userAgent","handleResize","addEventListener","removeEventListener","shouldUseSimplifiedAnimations","scrollY","smooth","rawTranslateY","clamp","translateY","velocity","Math","min","max","rawOpacity","opacity","IntersectionObserver","animationFrameId","currentRef","observer","entries","cancelAnimationFrame","requestAnimationFrame","isIntersecting","root","rootMargin","threshold","observe","unobserve","styleProps","classes","animationStyle","y","transition","duration","ease","optimizedTransformTemplate","_","div","ref","transformTemplate","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/core/effects/ScrollingTextAnimation.jsx"],"sourcesContent":["import React, { useRef, useEffect, useMemo, useCallback, useState } from 'react';\nimport { motion, useScroll, useTransform, useSpring, useReducedMotion } from 'framer-motion';\nimport { createUseStyles } from 'react-jss';\n\n// Optimized styles with simplified GPU acceleration properties\nconst useStyles = createUseStyles({\n  animatedContainer: {\n    position: 'relative',\n    width: '100%',\n    textAlign: props => props.textAlign || 'center',\n    margin: props => props.margin || '0 0 3rem 0',\n    zIndex: 2,\n    willChange: 'transform, opacity',\n    // Streamlined GPU acceleration properties to avoid layer conflicts\n    transform: 'translate3d(0,0,0)',\n    backfaceVisibility: 'hidden',\n    '-webkit-font-smoothing': 'antialiased',\n  },\n  content: {\n    width: '100%',\n  },\n  divider: props => ({\n    width: props.dividerWidth || '150px',\n    height: props.dividerHeight || '1px',\n    background: props.dividerBackground || 'linear-gradient(to right, rgba(160, 142, 97, 0), rgba(160, 142, 97, 0.6), rgba(160, 142, 97, 0))',\n    margin: props.dividerMargin || '1rem auto',\n    display: props.showDivider ? 'block' : 'none'\n  })\n});\n\n/**\n * ScrollingTextAnimation Component\n * \n * A highly optimized, butter-smooth scroll-based animation component\n * for text elements with exceptional performance on both mobile and desktop.\n */\nconst ScrollingTextAnimation = ({\n  children,\n  scrollConfig = {},\n  textAlign = 'center',\n  margin = '0 0 3rem 0',\n  showDivider = true,\n  dividerWidth = '150px',\n  dividerHeight = '1px',\n  dividerBackground,\n  dividerMargin = '1rem auto',\n  style = {},\n  className = ''\n}) => {\n  // Set default scroll configuration with performance-optimized defaults\n  const {\n    startPosition = 0,\n    endPosition = 300,\n    initialY = -100,\n    finalY = 0,\n    clampValues = true,\n    opacityValues = [1, 0.95, 0.9],\n    opacityScrollPositions = [startPosition, endPosition, endPosition + 100],\n    reverseDirection = false,\n    // Enhanced spring configuration for smoother, higher framerate animations\n    springConfig = {\n      stiffness: 80,      // Lower stiffness for smoother motion\n      damping: 25,        // Balanced damping \n      mass: 0.1,          // Slightly higher mass for momentum\n      restDelta: 0.001,   // Higher precision for position\n      restSpeed: 0.001,   // Higher precision for velocity\n    },\n    maxVelocity = 2000,   // Maximum velocity cap (pixels per second)\n    disableOnMobile = false\n  } = scrollConfig;\n\n  // Use Framer Motion's built-in reduced motion hook\n  const prefersReducedMotion = useReducedMotion();\n  \n  // Single state to track if in view (more efficient than multiple states)\n  const [isInView, setIsInView] = useState(false);\n  \n  // Ref for the container element\n  const containerRef = useRef(null);\n  \n  // Check if we should use mobile mode (using a ref to avoid rerenders)\n  const isMobileRef = useRef(false);\n  \n  // Initialize and update mobile detection\n  useEffect(() => {\n    if (typeof window === 'undefined') return;\n    \n    const checkMobile = () => {\n      isMobileRef.current = \n        window.innerWidth <= 768 || \n        /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    };\n    \n    checkMobile();\n    \n    const handleResize = () => {\n      checkMobile();\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  \n  // Determine if simplified animations should be used\n  const shouldUseSimplifiedAnimations = useMemo(() => {\n    return prefersReducedMotion || (disableOnMobile && isMobileRef.current);\n  }, [prefersReducedMotion, disableOnMobile]);\n  \n  // Optimized scroll tracking with improved performance\n  const { scrollY } = useScroll({\n    smooth: 0.05  // Smoother scrolling for high-framerate animations\n  });\n  \n  // Create transformed Y value from scroll position\n  const rawTranslateY = useTransform(\n    scrollY,\n    [startPosition, endPosition],\n    reverseDirection ? [finalY, initialY] : [initialY, finalY],\n    { clamp: clampValues }\n  );\n  \n  // Apply velocity limiting to the spring for more controlled animations\n  const translateY = useSpring(rawTranslateY, {\n    ...springConfig,\n    // Add velocity limiter function to cap maximum speed\n    velocity: current => Math.min(Math.max(current, -maxVelocity), maxVelocity)\n  });\n  \n  // Create opacity animation with the same optimized approach\n  const rawOpacity = useTransform(\n    scrollY,\n    opacityScrollPositions,\n    opacityValues,\n    { clamp: clampValues }\n  );\n  \n  const opacity = useSpring(rawOpacity, springConfig);\n  \n  // Optimized intersection observer with frame synchronization\n  useEffect(() => {\n    if (!containerRef.current || typeof IntersectionObserver === 'undefined') return;\n    \n    let animationFrameId = null;\n    const currentRef = containerRef.current;\n    \n    const observer = new IntersectionObserver(\n      entries => {\n        // Cancel any pending frame\n        if (animationFrameId) {\n          cancelAnimationFrame(animationFrameId);\n        }\n        \n        // Schedule update on next animation frame for better synchronization\n        animationFrameId = requestAnimationFrame(() => {\n          if (entries[0]) {\n            setIsInView(entries[0].isIntersecting);\n          }\n        });\n      },\n      {\n        root: null,\n        rootMargin: '20% 0%', // Larger margin to start animation earlier\n        threshold: 0.1\n      }\n    );\n    \n    observer.observe(currentRef);\n    \n    return () => {\n      if (animationFrameId) {\n        cancelAnimationFrame(animationFrameId);\n      }\n      observer.unobserve(currentRef);\n    };\n  }, []);\n  \n  // Create styles for component\n  const styleProps = useMemo(() => ({\n    textAlign,\n    margin,\n    showDivider,\n    dividerWidth,\n    dividerHeight,\n    dividerBackground,\n    dividerMargin\n  }), [textAlign, margin, showDivider, dividerWidth, dividerHeight, dividerBackground, dividerMargin]);\n  \n  const classes = useStyles(styleProps);\n  \n  // Memoize animation style to prevent recalculations\n  const animationStyle = useMemo(() => {\n    // No animation if not in view\n    if (!isInView) {\n      return {\n        y: reverseDirection ? finalY : initialY,\n        opacity: opacityValues[0]\n      };\n    }\n    \n    // Simplified animation for reduced motion or mobile\n    if (shouldUseSimplifiedAnimations) {\n      return {\n        y: finalY,\n        opacity: 1,\n        transition: {\n          duration: 0.5,\n          ease: [0.25, 0.1, 0.25, 1.0]\n        }\n      };\n    }\n    \n    // Full high-performance animation\n    return {\n      y: translateY,\n      opacity: opacity\n    };\n  }, [isInView, shouldUseSimplifiedAnimations, translateY, opacity, reverseDirection, finalY, initialY, opacityValues]);\n  \n  // Optimized transform template for GPU rendering\n  const optimizedTransformTemplate = useCallback((_, transform) => {\n    return `${transform} translateZ(0)`;\n  }, []);\n  \n  return (\n    <motion.div \n      ref={containerRef}\n      className={`${classes.animatedContainer} ${className}`}\n      style={{ \n        ...style,\n        ...animationStyle,\n      }}\n      transformTemplate={optimizedTransformTemplate}\n    >\n      <div className={classes.content}>\n        {children}\n      </div>\n      {showDivider && <div className={classes.divider} />}\n    </motion.div>\n  );\n};\n\nexport default ScrollingTextAnimation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}