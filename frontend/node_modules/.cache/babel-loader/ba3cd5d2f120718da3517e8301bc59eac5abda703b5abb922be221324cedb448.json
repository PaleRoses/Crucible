{"ast":null,"code":"var _jsxFileName = \"/home/valeria/Documents/Crucible/frontend/src/components/layout/Background.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useMemo } from 'react';\nimport BouncyParallax from '../core/effects/genericeffects/BouncyParallax';\n\n/**\n * Star Component - Individual star with parallax effects\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Star = ({\n  star,\n  index\n}) => {\n  _s();\n  // Calculate scroll configuration based on star properties\n  const scrollConfig = useMemo(() => {\n    // Depth-based scroll effects (deeper stars move more)\n    const depthFactor = star.z * 1.5;\n    return {\n      // Start position based on star position in the list (staggered effect)\n      startPosition: Math.max(0, index * 5 - 200),\n      // Different end positions create layered effect\n      endPosition: 400 + index * 15,\n      // Stars move in varying distances based on their depth\n      initialY: 20 * depthFactor,\n      finalY: 0,\n      initialX: -15 * depthFactor,\n      finalX: 0,\n      // Deeper stars have more prominent scaling effects\n      initialScale: 0.8,\n      finalScale: 1 + star.z * 0.2,\n      // Opacity effects synchronize with the pulse behavior\n      opacityValues: [0.3 * star.baseOpacity, star.baseOpacity, star.baseOpacity],\n      opacityScrollPositions: [0, 200, 500],\n      // Spring configuration affects how \"bouncy\" the star feels\n      springConfig: {\n        stiffness: 40 + star.z * 20,\n        // Stiffer for closer stars\n        damping: 15 + star.z * 10,\n        // More damping for closer stars\n        mass: 0.3 + star.z * 0.4 // More mass for deeper stars\n      },\n      // Stars deeper in the background move in the opposite direction\n      reverseDirection: star.z < 0.3\n    };\n  }, [star, index]);\n\n  // Star styling\n  const starStyle = useMemo(() => {\n    // Base size from star properties\n    const size = star.size * 2;\n\n    // Dynamic styles based on star properties\n    return {\n      position: 'absolute',\n      left: `${star.x}px`,\n      top: `${star.y}px`,\n      width: `${size}px`,\n      height: `${size}px`,\n      borderRadius: '50%',\n      background: star.color.replace('alpha', star.baseOpacity),\n      boxShadow: `0 0 ${size * 2}px ${size * 0.8}px ${star.color.replace('alpha', star.baseOpacity * 0.5)}`,\n      zIndex: Math.floor(star.z * 10)\n    };\n  }, [star]);\n  return /*#__PURE__*/_jsxDEV(BouncyParallax, {\n    scrollConfig: scrollConfig,\n    style: starStyle,\n    className: \"star\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"star-core\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n/**\n * Background Component\n * \n * Creates a stellar background with stars that have parallax scrolling effects\n * using DOM elements instead of canvas for individual star control.\n */\n_s(Star, \"tVvqrJTk5Xp/FhnHBbTgHrukhvE=\");\n_c = Star;\nconst Background = () => {\n  _s2();\n  // State to store star data\n  const [stars, setStars] = useState([]);\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  const containerRef = useRef(null);\n\n  // Configuration parameters\n  const CONFIG = useMemo(() => ({\n    starCount: 50,\n    // Reduced for better DOM performance\n    starSizeMin: 1,\n    starSizeMax: 3,\n    starOpacityMin: 0.15,\n    starOpacityMax: 0.85,\n    sessionKey: 'parallax_star_background_config'\n  }), []);\n\n  // Color palette\n  const COLORS = useMemo(() => ({\n    stars: ['rgba(255, 243, 200, alpha)',\n    // Warm yellow\n    'rgba(255, 231, 164, alpha)',\n    // Golden\n    'rgba(252, 249, 231, alpha)' // Off-white gold\n    ],\n    background: {\n      topColor: 'rgb(8, 8, 12)',\n      bottomColor: 'rgb(15, 15, 20)'\n    }\n  }), []);\n\n  // Load or generate session-persistent configuration\n  const getSessionConfiguration = () => {\n    try {\n      // Try to load existing configuration from sessionStorage\n      const storedConfig = sessionStorage.getItem(CONFIG.sessionKey);\n      if (storedConfig) {\n        return JSON.parse(storedConfig);\n      }\n    } catch (error) {\n      console.warn('Could not load star configuration from session storage', error);\n    }\n\n    // Generate new configuration if none exists\n    const starSeeds = [];\n    for (let i = 0; i < CONFIG.starCount; i++) {\n      starSeeds.push({\n        xSeed: Math.random(),\n        ySeed: Math.random(),\n        zSeed: Math.random() * 0.8 + 0.1,\n        sizeSeed: Math.random(),\n        opacitySeed: Math.random(),\n        phaseSeed: Math.random() * Math.PI * 2,\n        colorIndex: Math.floor(Math.random() * COLORS.stars.length)\n      });\n    }\n\n    // Store new configuration in sessionStorage\n    const newConfig = {\n      starSeeds,\n      timestamp: Date.now()\n    };\n    try {\n      sessionStorage.setItem(CONFIG.sessionKey, JSON.stringify(newConfig));\n    } catch (error) {\n      console.warn('Could not save star configuration to session storage', error);\n    }\n    return newConfig;\n  };\n\n  // Initialize stars and handle resizing\n  useEffect(() => {\n    if (!containerRef.current) return;\n    const initializeStars = () => {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n\n      // Get or create session-persistent configuration\n      const sessionConfig = getSessionConfiguration();\n      const {\n        starSeeds\n      } = sessionConfig;\n\n      // Create stars using the persistent seeds\n      const newStars = starSeeds.map(seed => {\n        // Position - use seeds but adapt to current screen dimensions\n        const x = seed.xSeed * width;\n        const y = seed.ySeed * height;\n        const z = seed.zSeed; // Depth (0.1 to 0.9)\n\n        // Visual properties\n        const size = (seed.sizeSeed * (CONFIG.starSizeMax - CONFIG.starSizeMin) + CONFIG.starSizeMin) * z;\n        const baseOpacity = seed.opacitySeed * (CONFIG.starOpacityMax - CONFIG.starOpacityMin) + CONFIG.starOpacityMin;\n\n        // Color variation\n        const color = COLORS.stars[seed.colorIndex];\n        return {\n          x,\n          y,\n          z,\n          size,\n          baseOpacity,\n          pulsePhase: seed.phaseSeed,\n          color\n        };\n      });\n      setStars(newStars);\n      setDimensions({\n        width,\n        height\n      });\n    };\n\n    // Initialize stars\n    initializeStars();\n\n    // Handle resize\n    const handleResize = () => {\n      initializeStars();\n    };\n\n    // Add resize listener with throttling\n    let resizeTimer;\n    const throttledResize = () => {\n      if (!resizeTimer) {\n        resizeTimer = setTimeout(() => {\n          resizeTimer = null;\n          handleResize();\n        }, 200);\n      }\n    };\n    window.addEventListener('resize', throttledResize);\n    return () => {\n      window.removeEventListener('resize', throttledResize);\n      if (resizeTimer) clearTimeout(resizeTimer);\n    };\n  }, [CONFIG, COLORS.stars]);\n\n  // Create gradient background style\n  const backgroundStyle = useMemo(() => ({\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    overflow: 'hidden',\n    zIndex: -1,\n    pointerEvents: 'none',\n    background: `linear-gradient(to bottom, ${COLORS.background.topColor}, ${COLORS.background.bottomColor})`\n  }), [COLORS.background]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: backgroundStyle,\n    \"aria-hidden\": \"true\",\n    children: stars.map((star, index) => /*#__PURE__*/_jsxDEV(Star, {\n      star: star,\n      index: index\n    }, `star-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n};\n_s2(Background, \"n/mlJSDPsd/VQITP9amOtN1BnSg=\");\n_c2 = Background;\nexport default Background;\nvar _c, _c2;\n$RefreshReg$(_c, \"Star\");\n$RefreshReg$(_c2, \"Background\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useMemo","BouncyParallax","jsxDEV","_jsxDEV","Star","star","index","_s","scrollConfig","depthFactor","z","startPosition","Math","max","endPosition","initialY","finalY","initialX","finalX","initialScale","finalScale","opacityValues","baseOpacity","opacityScrollPositions","springConfig","stiffness","damping","mass","reverseDirection","starStyle","size","position","left","x","top","y","width","height","borderRadius","background","color","replace","boxShadow","zIndex","floor","style","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Background","_s2","stars","setStars","dimensions","setDimensions","containerRef","CONFIG","starCount","starSizeMin","starSizeMax","starOpacityMin","starOpacityMax","sessionKey","COLORS","topColor","bottomColor","getSessionConfiguration","storedConfig","sessionStorage","getItem","JSON","parse","error","console","warn","starSeeds","i","push","xSeed","random","ySeed","zSeed","sizeSeed","opacitySeed","phaseSeed","PI","colorIndex","length","newConfig","timestamp","Date","now","setItem","stringify","current","initializeStars","window","innerWidth","innerHeight","sessionConfig","newStars","map","seed","pulsePhase","handleResize","resizeTimer","throttledResize","setTimeout","addEventListener","removeEventListener","clearTimeout","backgroundStyle","overflow","pointerEvents","ref","_c2","$RefreshReg$"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/layout/Background.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useMemo } from 'react';\nimport BouncyParallax from '../core/effects/genericeffects/BouncyParallax';\n\n/**\n * Star Component - Individual star with parallax effects\n */\nconst Star = ({ star, index }) => {\n  // Calculate scroll configuration based on star properties\n  const scrollConfig = useMemo(() => {\n    // Depth-based scroll effects (deeper stars move more)\n    const depthFactor = star.z * 1.5;\n    \n    return {\n      // Start position based on star position in the list (staggered effect)\n      startPosition: Math.max(0, index * 5 - 200),\n      // Different end positions create layered effect\n      endPosition: 400 + index * 15,\n      // Stars move in varying distances based on their depth\n      initialY: 20 * depthFactor,\n      finalY: 0,\n      initialX: -15 * depthFactor,\n      finalX: 0,\n      // Deeper stars have more prominent scaling effects\n      initialScale: 0.8,\n      finalScale: 1 + (star.z * 0.2),\n      // Opacity effects synchronize with the pulse behavior\n      opacityValues: [0.3 * star.baseOpacity, star.baseOpacity, star.baseOpacity],\n      opacityScrollPositions: [0, 200, 500],\n      // Spring configuration affects how \"bouncy\" the star feels\n      springConfig: {\n        stiffness: 40 + (star.z * 20),  // Stiffer for closer stars\n        damping: 15 + (star.z * 10),     // More damping for closer stars\n        mass: 0.3 + (star.z * 0.4),      // More mass for deeper stars\n      },\n      // Stars deeper in the background move in the opposite direction\n      reverseDirection: star.z < 0.3\n    };\n  }, [star, index]);\n\n  // Star styling\n  const starStyle = useMemo(() => {\n    // Base size from star properties\n    const size = star.size * 2;\n    \n    // Dynamic styles based on star properties\n    return {\n      position: 'absolute',\n      left: `${star.x}px`,\n      top: `${star.y}px`,\n      width: `${size}px`,\n      height: `${size}px`,\n      borderRadius: '50%',\n      background: star.color.replace('alpha', star.baseOpacity),\n      boxShadow: `0 0 ${size * 2}px ${size * 0.8}px ${star.color.replace('alpha', star.baseOpacity * 0.5)}`,\n      zIndex: Math.floor(star.z * 10)\n    };\n  }, [star]);\n\n  return (\n    <BouncyParallax\n      scrollConfig={scrollConfig}\n      style={starStyle}\n      className=\"star\"\n    >\n      <div className=\"star-core\" />\n    </BouncyParallax>\n  );\n};\n\n/**\n * Background Component\n * \n * Creates a stellar background with stars that have parallax scrolling effects\n * using DOM elements instead of canvas for individual star control.\n */\nconst Background = () => {\n  // State to store star data\n  const [stars, setStars] = useState([]);\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n  const containerRef = useRef(null);\n  \n  // Configuration parameters\n  const CONFIG = useMemo(() => ({\n    starCount: 50,  // Reduced for better DOM performance\n    starSizeMin: 1,\n    starSizeMax: 3,\n    starOpacityMin: 0.15,\n    starOpacityMax: 0.85,\n    sessionKey: 'parallax_star_background_config'\n  }), []);\n\n  // Color palette\n  const COLORS = useMemo(() => ({\n    stars: [\n      'rgba(255, 243, 200, alpha)', // Warm yellow\n      'rgba(255, 231, 164, alpha)', // Golden\n      'rgba(252, 249, 231, alpha)'  // Off-white gold\n    ],\n    background: {\n      topColor: 'rgb(8, 8, 12)',\n      bottomColor: 'rgb(15, 15, 20)'\n    }\n  }), []);\n\n  // Load or generate session-persistent configuration\n  const getSessionConfiguration = () => {\n    try {\n      // Try to load existing configuration from sessionStorage\n      const storedConfig = sessionStorage.getItem(CONFIG.sessionKey);\n      \n      if (storedConfig) {\n        return JSON.parse(storedConfig);\n      }\n    } catch (error) {\n      console.warn('Could not load star configuration from session storage', error);\n    }\n    \n    // Generate new configuration if none exists\n    const starSeeds = [];\n    for (let i = 0; i < CONFIG.starCount; i++) {\n      starSeeds.push({\n        xSeed: Math.random(),\n        ySeed: Math.random(),\n        zSeed: Math.random() * 0.8 + 0.1,\n        sizeSeed: Math.random(),\n        opacitySeed: Math.random(),\n        phaseSeed: Math.random() * Math.PI * 2,\n        colorIndex: Math.floor(Math.random() * COLORS.stars.length)\n      });\n    }\n    \n    // Store new configuration in sessionStorage\n    const newConfig = { starSeeds, timestamp: Date.now() };\n    try {\n      sessionStorage.setItem(CONFIG.sessionKey, JSON.stringify(newConfig));\n    } catch (error) {\n      console.warn('Could not save star configuration to session storage', error);\n    }\n    \n    return newConfig;\n  };\n\n  // Initialize stars and handle resizing\n  useEffect(() => {\n    if (!containerRef.current) return;\n    \n    const initializeStars = () => {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      \n      // Get or create session-persistent configuration\n      const sessionConfig = getSessionConfiguration();\n      const { starSeeds } = sessionConfig;\n      \n      // Create stars using the persistent seeds\n      const newStars = starSeeds.map(seed => {\n        // Position - use seeds but adapt to current screen dimensions\n        const x = seed.xSeed * width;\n        const y = seed.ySeed * height;\n        const z = seed.zSeed; // Depth (0.1 to 0.9)\n        \n        // Visual properties\n        const size = (seed.sizeSeed * (CONFIG.starSizeMax - CONFIG.starSizeMin) + CONFIG.starSizeMin) * z;\n        const baseOpacity = seed.opacitySeed * (CONFIG.starOpacityMax - CONFIG.starOpacityMin) + CONFIG.starOpacityMin;\n        \n        // Color variation\n        const color = COLORS.stars[seed.colorIndex];\n        \n        return {\n          x,\n          y,\n          z,\n          size,\n          baseOpacity,\n          pulsePhase: seed.phaseSeed,\n          color\n        };\n      });\n      \n      setStars(newStars);\n      setDimensions({ width, height });\n    };\n    \n    // Initialize stars\n    initializeStars();\n    \n    // Handle resize\n    const handleResize = () => {\n      initializeStars();\n    };\n    \n    // Add resize listener with throttling\n    let resizeTimer;\n    const throttledResize = () => {\n      if (!resizeTimer) {\n        resizeTimer = setTimeout(() => {\n          resizeTimer = null;\n          handleResize();\n        }, 200);\n      }\n    };\n    \n    window.addEventListener('resize', throttledResize);\n    \n    return () => {\n      window.removeEventListener('resize', throttledResize);\n      if (resizeTimer) clearTimeout(resizeTimer);\n    };\n  }, [CONFIG, COLORS.stars]);\n\n  // Create gradient background style\n  const backgroundStyle = useMemo(() => ({\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    overflow: 'hidden',\n    zIndex: -1,\n    pointerEvents: 'none',\n    background: `linear-gradient(to bottom, ${COLORS.background.topColor}, ${COLORS.background.bottomColor})`\n  }), [COLORS.background]);\n\n  return (\n    <div\n      ref={containerRef}\n      style={backgroundStyle}\n      aria-hidden=\"true\"\n    >\n      {stars.map((star, index) => (\n        <Star \n          key={`star-${index}`} \n          star={star} \n          index={index} \n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Background;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}