{"ast":null,"code":"var _jsxFileName = \"/home/valeria/Documents/Crucible/frontend/src/components/core/effects/ScrollingTextAnimation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { motion, useScroll, useTransform } from 'framer-motion';\nimport { createUseStyles } from 'react-jss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  animatedContainer: {\n    position: 'relative',\n    width: '100%',\n    textAlign: props => props.textAlign || 'center',\n    margin: props => props.margin || '0 0 3rem 0',\n    zIndex: 2,\n    willChange: 'transform, opacity',\n    backfaceVisibility: 'hidden',\n    perspective: 1000,\n    transform: 'translateZ(0)',\n    '-webkit-font-smoothing': 'antialiased',\n    '-moz-osx-font-smoothing': 'grayscale',\n    '-webkit-transform-style': 'preserve-3d',\n    transformStyle: 'preserve-3d'\n  },\n  content: {\n    width: '100%'\n  },\n  divider: props => ({\n    width: props.dividerWidth || '150px',\n    height: props.dividerHeight || '1px',\n    background: props.dividerBackground || 'linear-gradient(to right, rgba(160, 142, 97, 0), rgba(160, 142, 97, 0.6), rgba(160, 142, 97, 0))',\n    margin: props.dividerMargin || '1rem auto',\n    display: props.showDivider ? 'block' : 'none'\n  })\n});\n\n/**\n * ScrollingTextAnimation Component\n * \n * A highly optimized, butter-smooth scroll-based animation component\n * for text elements with exceptional performance on both mobile and desktop.\n */\nconst ScrollingTextAnimation = ({\n  children,\n  scrollConfig = {},\n  textAlign = 'center',\n  margin = '0 0 3rem 0',\n  showDivider = true,\n  dividerWidth = '150px',\n  dividerHeight = '1px',\n  dividerBackground,\n  dividerMargin = '1rem auto',\n  style = {},\n  className = ''\n}) => {\n  _s();\n  // Set default scroll configuration with performance-optimized defaults\n  const {\n    startPosition = 0,\n    endPosition = 300,\n    initialY = 50,\n    // ⚡️ UPDATED: Smaller initial offset for subtler animation\n    finalY = 0,\n    clampValues = true,\n    opacityValues = [0.3, 1, 1],\n    // ⚡️ UPDATED: Start partially visible (0.3) for testing\n    opacityScrollPositions = [startPosition, startPosition + 150, endPosition],\n    reverseDirection = false,\n    throttleAmount = 16,\n    // ~60fps throttling for better performance\n    enableReducedMotion = true,\n    disableOnMobile = false,\n    debug = false // ⚡️ NEW: Debug mode for testing\n  } = scrollConfig;\n  const containerRef = useRef(null);\n  const [isInView, setIsInView] = useState(true); // ⚡️ UPDATED: Default to true for initial visibility\n  const [isMobile, setIsMobile] = useState(false);\n  const [prefersReducedMotion, setPrefersReducedMotion] = useState(false);\n\n  // Calculate the actual Y values considering direction\n  const yInputRange = [startPosition, endPosition];\n  const yOutputRange = reverseDirection ? [finalY, initialY] : [initialY, finalY];\n\n  // Detect mobile devices and motion preferences\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(typeof window !== 'undefined' && (window.innerWidth <= 768 || /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)));\n    };\n    const checkReducedMotion = () => {\n      setPrefersReducedMotion(typeof window !== 'undefined' && window.matchMedia('(prefers-reduced-motion: reduce)').matches);\n    };\n    checkMobile();\n    checkReducedMotion();\n    const handleResize = () => {\n      checkMobile();\n    };\n    if (typeof window !== 'undefined') {\n      window.addEventListener('resize', handleResize);\n      return () => {\n        window.removeEventListener('resize', handleResize);\n      };\n    }\n  }, []);\n\n  // ⚡️ PERFORMANCE IMPROVEMENT: Use scrollYProgress with better offsets\n  const {\n    scrollYProgress\n  } = useScroll({\n    target: containerRef,\n    offset: [\"start end-=10%\", \"end start+=10%\"],\n    // ⚡️ UPDATED: More precise offset range\n    smooth: 8 // ⚡️ UPDATED: Slightly reduced smoothing for more responsive feel\n  });\n\n  // ⚡️ PERFORMANCE IMPROVEMENT: Direct transform approach with smoother curve\n  const translateY = useTransform(scrollYProgress, [0, 0.6],\n  // Animation completes within 60% of scroll range\n  yOutputRange, {\n    clamp: clampValues\n  });\n\n  // ⚡️ PERFORMANCE IMPROVEMENT: Improved opacity transition\n  const opacity = useTransform(scrollYProgress, [0, 0.3, 0.6],\n  // Faster fade-in complete by 30%, maintain through 60%\n  opacityValues, {\n    clamp: clampValues\n  });\n\n  // Optimized intersection observer setup\n  useEffect(() => {\n    if (!containerRef.current || typeof IntersectionObserver === 'undefined') return;\n\n    // Skip intersection observer in debug mode\n    if (debug) {\n      setIsInView(true);\n      return;\n    }\n    const currentRef = containerRef.current;\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        setIsInView(entry.isIntersecting);\n\n        // Unobserve once element is in view for performance\n        if (entry.isIntersecting) {\n          observer.unobserve(currentRef);\n        }\n      });\n    }, {\n      root: null,\n      rootMargin: '200px 0px',\n      // Start animation earlier\n      threshold: 0.1\n    });\n    observer.observe(currentRef);\n    return () => {\n      observer.unobserve(currentRef);\n    };\n  }, [debug]);\n\n  // Determine if we should use simplified animations\n  const shouldUseSimplifiedAnimations = enableReducedMotion && prefersReducedMotion || disableOnMobile && isMobile || debug; // ⚡️ UPDATED: Use simplified in debug mode\n\n  // Create styles for component\n  const styleProps = {\n    textAlign,\n    margin,\n    showDivider,\n    dividerWidth,\n    dividerHeight,\n    dividerBackground,\n    dividerMargin\n  };\n  const classes = useStyles(styleProps);\n\n  // ⚡️ PERFORMANCE IMPROVEMENT: Simplified animation logic\n  const getAnimationStyle = useCallback(() => {\n    // Debug mode: just show a static element for testing\n    if (debug) {\n      return {\n        y: 0,\n        opacity: 1\n      };\n    }\n    if (!isInView) {\n      return {\n        y: reverseDirection ? finalY : initialY,\n        opacity: opacityValues[0]\n      };\n    }\n    if (shouldUseSimplifiedAnimations) {\n      return {\n        y: finalY,\n        opacity: 1,\n        transition: {\n          duration: 0.6,\n          ease: [0.23, 1, 0.32, 1] // Improved easing curve\n        }\n      };\n    }\n    return {\n      y: translateY,\n      opacity: opacity\n    };\n  }, [isInView, shouldUseSimplifiedAnimations, translateY, opacity, reverseDirection, finalY, initialY, opacityValues, debug]);\n  const animationStyle = getAnimationStyle();\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    ref: containerRef,\n    className: `${classes.animatedContainer} ${className}`,\n    style: {\n      ...style,\n      ...animationStyle\n    },\n    initial: false,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), showDivider && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.divider\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrollingTextAnimation, \"3PeUaC6jbNcJ/l/JYBtkEzaw6NE=\", false, function () {\n  return [useScroll, useTransform, useTransform, useStyles];\n});\n_c = ScrollingTextAnimation;\nexport default ScrollingTextAnimation;\nvar _c;\n$RefreshReg$(_c, \"ScrollingTextAnimation\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","motion","useScroll","useTransform","createUseStyles","jsxDEV","_jsxDEV","useStyles","animatedContainer","position","width","textAlign","props","margin","zIndex","willChange","backfaceVisibility","perspective","transform","transformStyle","content","divider","dividerWidth","height","dividerHeight","background","dividerBackground","dividerMargin","display","showDivider","ScrollingTextAnimation","children","scrollConfig","style","className","_s","startPosition","endPosition","initialY","finalY","clampValues","opacityValues","opacityScrollPositions","reverseDirection","throttleAmount","enableReducedMotion","disableOnMobile","debug","containerRef","isInView","setIsInView","isMobile","setIsMobile","prefersReducedMotion","setPrefersReducedMotion","yInputRange","yOutputRange","checkMobile","window","innerWidth","test","navigator","userAgent","checkReducedMotion","matchMedia","matches","handleResize","addEventListener","removeEventListener","scrollYProgress","target","offset","smooth","translateY","clamp","opacity","current","IntersectionObserver","currentRef","observer","entries","forEach","entry","isIntersecting","unobserve","root","rootMargin","threshold","observe","shouldUseSimplifiedAnimations","styleProps","classes","getAnimationStyle","y","transition","duration","ease","animationStyle","div","ref","initial","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/core/effects/ScrollingTextAnimation.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { motion, useScroll, useTransform } from 'framer-motion';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  animatedContainer: {\n    position: 'relative',\n    width: '100%',\n    textAlign: props => props.textAlign || 'center',\n    margin: props => props.margin || '0 0 3rem 0',\n    zIndex: 2,\n    willChange: 'transform, opacity',\n    backfaceVisibility: 'hidden',\n    perspective: 1000,\n    transform: 'translateZ(0)',\n    '-webkit-font-smoothing': 'antialiased',\n    '-moz-osx-font-smoothing': 'grayscale',\n    '-webkit-transform-style': 'preserve-3d',\n    transformStyle: 'preserve-3d',\n  },\n  content: {\n    width: '100%',\n  },\n  divider: props => ({\n    width: props.dividerWidth || '150px',\n    height: props.dividerHeight || '1px',\n    background: props.dividerBackground || 'linear-gradient(to right, rgba(160, 142, 97, 0), rgba(160, 142, 97, 0.6), rgba(160, 142, 97, 0))',\n    margin: props.dividerMargin || '1rem auto',\n    display: props.showDivider ? 'block' : 'none'\n  })\n});\n\n/**\n * ScrollingTextAnimation Component\n * \n * A highly optimized, butter-smooth scroll-based animation component\n * for text elements with exceptional performance on both mobile and desktop.\n */\nconst ScrollingTextAnimation = ({\n  children,\n  scrollConfig = {},\n  textAlign = 'center',\n  margin = '0 0 3rem 0',\n  showDivider = true,\n  dividerWidth = '150px',\n  dividerHeight = '1px',\n  dividerBackground,\n  dividerMargin = '1rem auto',\n  style = {},\n  className = ''\n}) => {\n  // Set default scroll configuration with performance-optimized defaults\n  const {\n    startPosition = 0,\n    endPosition = 300,\n    initialY = 50,          // ⚡️ UPDATED: Smaller initial offset for subtler animation\n    finalY = 0,\n    clampValues = true,\n    opacityValues = [0.3, 1, 1],  // ⚡️ UPDATED: Start partially visible (0.3) for testing\n    opacityScrollPositions = [startPosition, startPosition + 150, endPosition],\n    reverseDirection = false,\n    throttleAmount = 16,    // ~60fps throttling for better performance\n    enableReducedMotion = true,\n    disableOnMobile = false,\n    debug = false           // ⚡️ NEW: Debug mode for testing\n  } = scrollConfig;\n\n  const containerRef = useRef(null);\n  const [isInView, setIsInView] = useState(true);  // ⚡️ UPDATED: Default to true for initial visibility\n  const [isMobile, setIsMobile] = useState(false);\n  const [prefersReducedMotion, setPrefersReducedMotion] = useState(false);\n  \n  // Calculate the actual Y values considering direction\n  const yInputRange = [startPosition, endPosition];\n  const yOutputRange = reverseDirection ? [finalY, initialY] : [initialY, finalY];\n  \n  // Detect mobile devices and motion preferences\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(\n        typeof window !== 'undefined' && \n        (window.innerWidth <= 768 || \n         /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent))\n      );\n    };\n    \n    const checkReducedMotion = () => {\n      setPrefersReducedMotion(\n        typeof window !== 'undefined' && \n        window.matchMedia('(prefers-reduced-motion: reduce)').matches\n      );\n    };\n    \n    checkMobile();\n    checkReducedMotion();\n    \n    const handleResize = () => {\n      checkMobile();\n    };\n    \n    if (typeof window !== 'undefined') {\n      window.addEventListener('resize', handleResize);\n      \n      return () => {\n        window.removeEventListener('resize', handleResize);\n      };\n    }\n  }, []);\n  \n  // ⚡️ PERFORMANCE IMPROVEMENT: Use scrollYProgress with better offsets\n  const { scrollYProgress } = useScroll({\n    target: containerRef,\n    offset: [\"start end-=10%\", \"end start+=10%\"],  // ⚡️ UPDATED: More precise offset range\n    smooth: 8  // ⚡️ UPDATED: Slightly reduced smoothing for more responsive feel\n  });\n  \n  // ⚡️ PERFORMANCE IMPROVEMENT: Direct transform approach with smoother curve\n  const translateY = useTransform(\n    scrollYProgress,\n    [0, 0.6],  // Animation completes within 60% of scroll range\n    yOutputRange,\n    { clamp: clampValues }\n  );\n  \n  // ⚡️ PERFORMANCE IMPROVEMENT: Improved opacity transition\n  const opacity = useTransform(\n    scrollYProgress,\n    [0, 0.3, 0.6],  // Faster fade-in complete by 30%, maintain through 60%\n    opacityValues,\n    { clamp: clampValues }\n  );\n  \n  // Optimized intersection observer setup\n  useEffect(() => {\n    if (!containerRef.current || typeof IntersectionObserver === 'undefined') return;\n    \n    // Skip intersection observer in debug mode\n    if (debug) {\n      setIsInView(true);\n      return;\n    }\n    \n    const currentRef = containerRef.current;\n    \n    const observer = new IntersectionObserver(\n      entries => {\n        entries.forEach(entry => {\n          setIsInView(entry.isIntersecting);\n          \n          // Unobserve once element is in view for performance\n          if (entry.isIntersecting) {\n            observer.unobserve(currentRef);\n          }\n        });\n      },\n      {\n        root: null,\n        rootMargin: '200px 0px',  // Start animation earlier\n        threshold: 0.1\n      }\n    );\n    \n    observer.observe(currentRef);\n    \n    return () => {\n      observer.unobserve(currentRef);\n    };\n  }, [debug]);\n  \n  // Determine if we should use simplified animations\n  const shouldUseSimplifiedAnimations = \n    (enableReducedMotion && prefersReducedMotion) || \n    (disableOnMobile && isMobile) ||\n    debug;  // ⚡️ UPDATED: Use simplified in debug mode\n  \n  // Create styles for component\n  const styleProps = {\n    textAlign,\n    margin,\n    showDivider,\n    dividerWidth,\n    dividerHeight,\n    dividerBackground,\n    dividerMargin\n  };\n  \n  const classes = useStyles(styleProps);\n  \n  // ⚡️ PERFORMANCE IMPROVEMENT: Simplified animation logic\n  const getAnimationStyle = useCallback(() => {\n    // Debug mode: just show a static element for testing\n    if (debug) {\n      return {\n        y: 0,\n        opacity: 1\n      };\n    }\n    \n    if (!isInView) {\n      return {\n        y: reverseDirection ? finalY : initialY,\n        opacity: opacityValues[0],\n      };\n    }\n    \n    if (shouldUseSimplifiedAnimations) {\n      return {\n        y: finalY,\n        opacity: 1,\n        transition: {\n          duration: 0.6,\n          ease: [0.23, 1, 0.32, 1],  // Improved easing curve\n        }\n      };\n    }\n    \n    return {\n      y: translateY,\n      opacity: opacity,\n    };\n  }, [isInView, shouldUseSimplifiedAnimations, translateY, opacity, reverseDirection, finalY, initialY, opacityValues, debug]);\n  \n  const animationStyle = getAnimationStyle();\n  \n  return (\n    <motion.div \n      ref={containerRef}\n      className={`${classes.animatedContainer} ${className}`}\n      style={{ \n        ...style,\n        ...animationStyle,\n      }}\n      initial={false}\n    >\n      <div className={classes.content}>\n        {children}\n      </div>\n      {showDivider && <div className={classes.divider} />}\n    </motion.div>\n  );\n};\n\nexport default ScrollingTextAnimation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}