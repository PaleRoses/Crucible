{"ast":null,"code":"import React,{useState,useEffect,useRef,useCallback}from'react';/**\n * MeteorShower Component - Enhanced Version\n * \n * Creates an animated meteor shower effect where meteors arc across the sky\n * with comet-like trails and fade away naturally.\n * Features staggered appearance and configurable journey completion.\n * \n * @param {Object} props - Component props\n * @param {string|number} [props.height='100vh'] - Height of the container\n * @param {number} [props.zIndex=5] - Z-index for the container\n * @param {boolean} [props.active=true] - Whether the animation is active\n * @param {number} [props.meteorDensity=15] - Number of meteors to maintain on screen\n * @param {number} [props.meteorMinSize=1] - Minimum size of meteors\n * @param {number} [props.meteorMaxSize=3] - Maximum size of meteors\n * @param {number} [props.meteorSpeed=0.08] - Base speed of meteors\n * @param {number} [props.trailLength=180] - Length of meteor trails\n * @param {number} [props.trailSegments=20] - Number of segments in each trail\n * @param {string} [props.coreColor='rgba(255, 255, 255, 1)'] - Core color for meteors\n * @param {string} [props.glowColor='rgba(255, 253, 227, 0.9)'] - Glow color for meteors\n * @param {string} [props.trailColor='rgba(191, 173, 127, 0.8)'] - Trail color for meteors\n * @param {boolean} [props.enableParallax=false] - Enable parallax effect on scroll\n * @param {number} [props.parallaxIntensity=0.2] - Intensity of parallax effect\n * @param {boolean} [props.staggered=true] - Enable staggered meteor appearance\n * @param {number} [props.minStaggerDelay=200] - Minimum delay between meteor spawns (ms)\n * @param {number} [props.maxStaggerDelay=2000] - Maximum delay between meteor spawns (ms)\n * @param {number} [props.journeyCompletion=0.9] - When meteors complete their journey (0-1, where 1 is the container height)\n * @param {string} [props.mode='arc'] - Animation mode: 'arc' (curved paths) or 'linear' (straight angled paths)\n * @param {string} [props.direction='both'] - Direction for linear mode: 'left', 'right', 'both', or 'top'\n * @param {number} [props.baseAngle=30] - Base angle for linear meteors (degrees)\n * @param {number} [props.angleVariation=15] - Random variation to apply to the base angle (±degrees)\n * @param {boolean} [props.debug=false] - Enable debug visualization\n */import{jsx as _jsx}from\"react/jsx-runtime\";const MeteorShower=_ref=>{let{height='100vh',zIndex=5,active=true,meteorDensity=15,meteorMinSize=1,meteorMaxSize=3,meteorSpeed=0.08,trailLength=180,trailSegments=20,coreColor='rgba(255, 255, 255, 1)',glowColor='rgba(255, 253, 227, 0.9)',trailColor='rgba(191, 173, 127, 0.8)',enableParallax=false,parallaxIntensity=0.2,staggered=true,minStaggerDelay=200,maxStaggerDelay=2000,journeyCompletion=0.9,// Default: complete at 90% of container height\nmode='arc',// 'arc' or 'linear'\ndirection='both',// 'left', 'right', 'both', or 'top'\nbaseAngle=30,// Base angle for linear meteors (degrees)\nangleVariation=15,// Variation to apply to the angle (±degrees)\ndebug=false}=_ref;const containerRef=useRef(null);const canvasRef=useRef(null);const meteorsRef=useRef([]);const animationFrameRef=useRef(null);const lastTimestampRef=useRef(0);const scrollPositionRef=useRef(0);const nextSpawnTimeRef=useRef(0);const[dimensions,setDimensions]=useState({width:0,height:0});const[isInitialized,setIsInitialized]=useState(false);// Calculate path parameters for a meteor based on selected mode\nconst calculateMeteorPath=(width,height)=>{if(mode==='arc'){// Original arc path logic\n// Start point: somewhere along the top of the canvas with randomization\nconst startX=Math.random()*width*1.5-width*0.25;// Control how far meteors can start from outside the visible area\nconst startY=Math.random()*-100-50;// Randomize arc curvature and direction\nconst curveDirection=Math.random()>0.5?1:-1;const curveIntensity=Math.random()*0.4+0.2;// Calculate control points for quadratic path\n// End point: adjusted to complete journey according to journeyCompletion parameter\nconst endX=startX+curveDirection*width*curveIntensity;const endY=height*journeyCompletion;// Control point: creates the arc shape\nconst controlX=(startX+endX)/2+curveDirection*width*curveIntensity;const controlY=(startY+endY)*0.5;return{pathType:'arc',start:{x:startX,y:startY},control:{x:controlX,y:controlY},end:{x:endX,y:endY}};}else if(mode==='linear'){// New linear path logic for traditional meteor shower\n// Determine direction (from left, right, top, or random)\nlet meteorDirection=direction;if(direction==='both'){meteorDirection=Math.random()>0.5?'left':'right';}// Calculate angle with variation (convert to radians)\nlet angle;if(direction==='top'){// For 'top' direction, maintain consistent 30 degree downward angle to the right\n// with minimal variation to keep them all falling in a similar direction\nangle=(30+(Math.random()*2-1)*5)*Math.PI/180;}else{angle=(baseAngle+(Math.random()*2-1)*angleVariation)*Math.PI/180;}// Set starting positions based on direction\nlet startX;if(meteorDirection==='left'){// Start from top-left portion of the screen\nstartX=Math.random()*(width*0.3)-width*0.1;}else if(meteorDirection==='right'){// Start from top-right portion of the screen\nstartX=width-Math.random()*(width*0.3)+width*0.1;}else if(direction==='top'){// For 'top' direction, distribute meteors across the top with emphasis on left and center\nconst position=Math.random();if(position<0.5){// 50% chance: top-left\nstartX=Math.random()*(width*0.35);}else if(position<0.85){// 35% chance: top-center\nstartX=width*0.35+Math.random()*(width*0.35);}else{// 15% chance: top-right\nstartX=width*0.7+Math.random()*(width*0.3);}}// Start slightly above the screen\nconst startY=Math.random()*-100-50;// Calculate distance meteor will travel based on angle and screen dimensions\nconst distanceToTravel=height*journeyCompletion/Math.cos(angle);// Calculate end position using angle\nlet endX,endY;if(meteorDirection==='left'||direction==='top'){// Meteor moves from left to right (or top to bottom-right for 'top' direction)\nendX=startX+distanceToTravel*Math.sin(angle);endY=startY+distanceToTravel*Math.cos(angle);}else{// Meteor moves from right to left\nendX=startX-distanceToTravel*Math.sin(angle);endY=startY+distanceToTravel*Math.cos(angle);}return{pathType:'linear',start:{x:startX,y:startY},end:{x:endX,y:endY},direction:meteorDirection};}};// Calculate position along a path\nconst getPathPoint=(t,path)=>{if(path.pathType==='arc'){// Quadratic bezier curve for arc mode\nreturn getQuadraticBezierPoint(t,path.start,path.control,path.end);}else{// Linear interpolation for linear mode\nreturn{x:path.start.x+(path.end.x-path.start.x)*t,y:path.start.y+(path.end.y-path.start.y)*t};}};// Calculate position along a quadratic bezier curve\nconst getQuadraticBezierPoint=(t,p0,p1,p2)=>{const x=Math.pow(1-t,2)*p0.x+2*(1-t)*t*p1.x+Math.pow(t,2)*p2.x;const y=Math.pow(1-t,2)*p0.y+2*(1-t)*t*p1.y+Math.pow(t,2)*p2.y;return{x,y};};// Update canvas dimensions on resize\nuseEffect(()=>{const updateDimensions=()=>{if(canvasRef.current&&containerRef.current){const container=containerRef.current;const rect=container.getBoundingClientRect();const width=rect.width;const containerHeight=typeof height==='string'&&height.endsWith('vh')?parseInt(height,10)/100*window.innerHeight:parseInt(height,10)||window.innerHeight;if(debug){console.log('Setting canvas dimensions:',width,containerHeight);}setDimensions({width,height:containerHeight});canvasRef.current.width=width;canvasRef.current.height=containerHeight;setIsInitialized(true);}};setTimeout(updateDimensions,100);window.addEventListener('resize',updateDimensions);return()=>{window.removeEventListener('resize',updateDimensions);};},[height,debug]);// Handle parallax effect on scroll if enabled\nuseEffect(()=>{if(!enableParallax)return;const handleScroll=()=>{scrollPositionRef.current=window.scrollY;};window.addEventListener('scroll',handleScroll);return()=>{window.removeEventListener('scroll',handleScroll);};},[enableParallax]);// Memoize the path calculation and position functions to avoid dependency issues\nconst calculateMeteorPathMemoized=useCallback(calculateMeteorPath,[mode,direction,baseAngle,angleVariation,journeyCompletion]);const getPathPointMemoized=useCallback(getPathPoint,[]);// Memoize the meteor initialization function\nconst initializeMeteorMemoized=useCallback(()=>{const width=dimensions.width;const height=dimensions.height;if(!width||!height)return null;// Calculate path based on mode\nconst path=calculateMeteorPathMemoized(width,height);// Randomize meteor properties\nconst baseSpeed=meteorSpeed*(Math.random()*0.5+0.75);return{path,progress:0,size:Math.random()*(meteorMaxSize-meteorMinSize)+meteorMinSize,speed:baseSpeed,active:true,positions:new Array(trailSegments).fill({x:path.start.x,y:path.start.y}),opacity:Math.random()*0.3+0.7,fadeThreshold:0.7+Math.random()*0.2,// When to start fading (70-90% of journey)\npulsePhase:Math.random()*Math.PI*2,pulseSpeed:Math.random()*0.01+0.005};},[dimensions,meteorSpeed,meteorMinSize,meteorMaxSize,trailSegments,calculateMeteorPathMemoized]);// Main animation loop\nuseEffect(()=>{if(!active||!dimensions.width||!dimensions.height||!isInitialized){if(debug){console.log('Animation not starting. Active:',active,'Dimensions:',dimensions,'Initialized:',isInitialized);}return;}if(debug){console.log('Starting animation with dimensions:',dimensions);}// Animation function\nconst animate=timestamp=>{if(!canvasRef.current)return;const ctx=canvasRef.current.getContext('2d');const width=dimensions.width;const height=dimensions.height;// Initialize lastTimestamp on first run\nif(lastTimestampRef.current===0){lastTimestampRef.current=timestamp;nextSpawnTimeRef.current=timestamp;}// Calculate delta time (capped to prevent jumps after tab switching)\nconst deltaTime=Math.min(timestamp-lastTimestampRef.current,50);lastTimestampRef.current=timestamp;// Clear canvas\nctx.clearRect(0,0,width,height);// Debug mode - draw canvas bounds\nif(debug){ctx.strokeStyle='rgba(255, 0, 0, 0.5)';ctx.lineWidth=2;ctx.strokeRect(0,0,width,height);ctx.fillStyle='rgba(255, 255, 255, 0.8)';ctx.font='12px monospace';ctx.fillText(`Canvas: ${width}×${height}`,10,20);ctx.fillText(`Meteors: ${meteorsRef.current.length}/${meteorDensity}`,10,40);ctx.fillText(`Mode: ${mode}`,10,60);ctx.fillText(`Direction: ${direction}`,10,80);if(staggered){ctx.fillText(`Next Spawn: ${Math.max(0,(nextSpawnTimeRef.current-timestamp)/1000).toFixed(2)}s`,10,100);}}// Apply parallax offset\nlet parallaxOffset=0;if(enableParallax){parallaxOffset=scrollPositionRef.current*parallaxIntensity;}// Spawn new meteors if needed, with staggering if enabled\nif(meteorsRef.current.length<meteorDensity){const canSpawnNow=!staggered||timestamp>=nextSpawnTimeRef.current;if(canSpawnNow){const newMeteor=initializeMeteorMemoized();if(newMeteor){meteorsRef.current.push(newMeteor);// If staggering is enabled, set the next spawn time\nif(staggered){const delay=Math.random()*(maxStaggerDelay-minStaggerDelay)+minStaggerDelay;nextSpawnTimeRef.current=timestamp+delay;}}}}// Update and draw meteors\nmeteorsRef.current=meteorsRef.current.filter(meteor=>{// Skip if not active\nif(!meteor.active)return false;// Update progress based on speed and delta time\nmeteor.progress+=meteor.speed*(deltaTime/1000);// Calculate current position along the path\nconst currentPos=getPathPointMemoized(Math.min(1,meteor.progress),meteor.path);// Update position history (for trail)\nmeteor.positions.unshift({x:currentPos.x,y:currentPos.y});meteor.positions=meteor.positions.slice(0,trailSegments);// Check if meteor has completed its path\nif(meteor.progress>=1){return false;}// Calculate opacity based on progress\n// Start fading out after reaching the fadeThreshold\nlet currentOpacity=meteor.opacity;if(meteor.progress>meteor.fadeThreshold){// Map progress from fadeThreshold-1.0 to 1.0-0.0 for opacity\nconst fadeProgress=(meteor.progress-meteor.fadeThreshold)/(1-meteor.fadeThreshold);currentOpacity=meteor.opacity*(1-fadeProgress);}// Apply pulse/flicker effect\nconst timeFactor=timestamp*0.001;const pulseEffect=Math.sin(timeFactor*meteor.pulseSpeed+meteor.pulsePhase)*0.2+0.8;// Adjust for parallax if enabled\nconst adjustY=enableParallax?parallaxOffset*(meteor.size/meteorMaxSize):0;// Draw trail segments\nfor(let i=0;i<meteor.positions.length-1;i++){if(!meteor.positions[i]||!meteor.positions[i+1])continue;// Calculate segment opacity (decreases along the trail)\nconst segmentOpacity=currentOpacity*(1-i/meteor.positions.length)*pulseEffect;// Skip if nearly invisible\nif(segmentOpacity<0.02)continue;// Calculate segment width (decreases along the trail)\nconst segmentWidth=meteor.size*(1-i/meteor.positions.length*0.7);// Set shadow/glow effect\nctx.shadowColor=glowColor;ctx.shadowBlur=meteor.size*3*pulseEffect;// Draw line segment\nctx.beginPath();ctx.moveTo(meteor.positions[i].x,meteor.positions[i].y+adjustY);ctx.lineTo(meteor.positions[i+1].x,meteor.positions[i+1].y+adjustY);// Set line style\nctx.lineCap='round';ctx.lineWidth=segmentWidth;ctx.strokeStyle=trailColor.replace(/[\\d.]+\\)$/,segmentOpacity+')');ctx.stroke();}// Draw meteor head (brightest part)\nif(meteor.positions[0]){// Set shadow/glow for head\nctx.shadowColor=glowColor;ctx.shadowBlur=meteor.size*5*pulseEffect;// Draw outer glow\nctx.beginPath();ctx.arc(meteor.positions[0].x,meteor.positions[0].y+adjustY,meteor.size*1.5,0,Math.PI*2);ctx.fillStyle=glowColor.replace(/[\\d.]+\\)$/,currentOpacity*0.7*pulseEffect+')');ctx.fill();// Draw inner core\nctx.beginPath();ctx.arc(meteor.positions[0].x,meteor.positions[0].y+adjustY,meteor.size*0.7,0,Math.PI*2);ctx.fillStyle=coreColor.replace(/[\\d.]+\\)$/,currentOpacity*pulseEffect+')');ctx.fill();}return true;});// Continue animation\nanimationFrameRef.current=requestAnimationFrame(animate);};// Start animation\nanimationFrameRef.current=requestAnimationFrame(animate);// Cleanup\nreturn()=>{if(animationFrameRef.current){cancelAnimationFrame(animationFrameRef.current);}};},[active,isInitialized,dimensions,meteorDensity,meteorMinSize,meteorMaxSize,meteorSpeed,trailLength,trailSegments,coreColor,glowColor,trailColor,enableParallax,parallaxIntensity,staggered,minStaggerDelay,maxStaggerDelay,journeyCompletion,mode,direction,baseAngle,angleVariation,debug,getPathPointMemoized,initializeMeteorMemoized]);return/*#__PURE__*/_jsx(\"div\",{ref:containerRef,style:{position:'absolute',top:0,left:0,width:'100%',height:height,overflow:'hidden',pointerEvents:'none',zIndex:zIndex},children:/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,style:{position:'absolute',top:0,left:0,width:'100%',height:'100%'}})});};/**\n * GoldenMeteorShower Component\n * \n * A preset version of the MeteorShower with a golden/amber color scheme.\n * \n * @param {Object} props - Same props as MeteorShower with presets\n */export const GoldenMeteorShower=props=>{const goldenPreset={coreColor:'rgba(255, 255, 255, 1)',glowColor:'rgba(255, 253, 227, 0.9)',trailColor:'rgba(191, 173, 127, 0.8)',meteorMinSize:1,meteorMaxSize:3,meteorSpeed:0.08,trailLength:180,trailSegments:20,journeyCompletion:0.9,staggered:true,minStaggerDelay:200,maxStaggerDelay:2000};return/*#__PURE__*/_jsx(MeteorShower,{...goldenPreset,...props});};/**\n * CelestialMeteorShower Component\n * \n * A preset version of the MeteorShower with a bluish-purple color scheme.\n * \n * @param {Object} props - Same props as MeteorShower with presets\n */export const CelestialMeteorShower=props=>{const celestialPreset={coreColor:'rgba(255, 255, 255, 1)',glowColor:'rgba(220, 225, 255, 0.9)',trailColor:'rgba(150, 160, 255, 0.8)',meteorMinSize:1,meteorMaxSize:3,meteorSpeed:0.08,trailLength:180,trailSegments:20,journeyCompletion:0.9,staggered:true,minStaggerDelay:300,maxStaggerDelay:1800};return/*#__PURE__*/_jsx(MeteorShower,{...celestialPreset,...props});};/**\n * EmeraldMeteorShower Component\n * \n * A preset version of the MeteorShower with a green color scheme.\n * \n * @param {Object} props - Same props as MeteorShower with presets\n */export const EmeraldMeteorShower=props=>{const emeraldPreset={coreColor:'rgba(255, 255, 255, 1)',glowColor:'rgba(215, 255, 230, 0.9)',trailColor:'rgba(100, 220, 150, 0.8)',meteorMinSize:1,meteorMaxSize:3,meteorSpeed:0.08,trailLength:180,trailSegments:20,journeyCompletion:0.9,staggered:true,minStaggerDelay:250,maxStaggerDelay:1500};return/*#__PURE__*/_jsx(MeteorShower,{...emeraldPreset,...props});};/**\n * RubyMeteorShower Component\n * \n * A preset version of the MeteorShower with a red color scheme.\n * \n * @param {Object} props - Same props as MeteorShower with presets\n */export const RubyMeteorShower=props=>{const rubyPreset={coreColor:'rgba(255, 255, 255, 1)',glowColor:'rgba(255, 200, 200, 0.9)',trailColor:'rgba(220, 100, 100, 0.8)',meteorMinSize:1,meteorMaxSize:3,meteorSpeed:0.08,trailLength:180,trailSegments:20,journeyCompletion:0.9,staggered:true,minStaggerDelay:350,maxStaggerDelay:2200};return/*#__PURE__*/_jsx(MeteorShower,{...rubyPreset,...props});};/**\n * ClassicMeteorShower Component\n * \n * A preset version of the MeteorShower with linear paths for a more traditional meteor shower effect.\n * \n * @param {Object} props - Same props as MeteorShower with presets\n */export const ClassicMeteorShower=props=>{const classicPreset={mode:'linear',direction:'both',baseAngle:30,angleVariation:15,meteorMinSize:1,meteorMaxSize:3,meteorSpeed:0.12,trailLength:200,trailSegments:25,journeyCompletion:0.95,staggered:true,minStaggerDelay:100,maxStaggerDelay:1000};return/*#__PURE__*/_jsx(MeteorShower,{...classicPreset,...props});};/**\n * TopMeteorShower Component\n * \n * A preset version of the MeteorShower with meteors falling from the top of the screen\n * at a consistent 30-degree angle, distributed with emphasis on left and center areas.\n * \n * @param {Object} props - Same props as MeteorShower with presets\n */export const TopMeteorShower=props=>{const topPreset={mode:'linear',direction:'top',meteorMinSize:1,meteorMaxSize:3,meteorSpeed:0.12,trailLength:200,trailSegments:25,journeyCompletion:0.95,staggered:true,minStaggerDelay:100,maxStaggerDelay:1000};return/*#__PURE__*/_jsx(MeteorShower,{...topPreset,...props});};export default MeteorShower;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsx","_jsx","MeteorShower","_ref","height","zIndex","active","meteorDensity","meteorMinSize","meteorMaxSize","meteorSpeed","trailLength","trailSegments","coreColor","glowColor","trailColor","enableParallax","parallaxIntensity","staggered","minStaggerDelay","maxStaggerDelay","journeyCompletion","mode","direction","baseAngle","angleVariation","debug","containerRef","canvasRef","meteorsRef","animationFrameRef","lastTimestampRef","scrollPositionRef","nextSpawnTimeRef","dimensions","setDimensions","width","isInitialized","setIsInitialized","calculateMeteorPath","startX","Math","random","startY","curveDirection","curveIntensity","endX","endY","controlX","controlY","pathType","start","x","y","control","end","meteorDirection","angle","PI","position","distanceToTravel","cos","sin","getPathPoint","t","path","getQuadraticBezierPoint","p0","p1","p2","pow","updateDimensions","current","container","rect","getBoundingClientRect","containerHeight","endsWith","parseInt","window","innerHeight","console","log","setTimeout","addEventListener","removeEventListener","handleScroll","scrollY","calculateMeteorPathMemoized","getPathPointMemoized","initializeMeteorMemoized","baseSpeed","progress","size","speed","positions","Array","fill","opacity","fadeThreshold","pulsePhase","pulseSpeed","animate","timestamp","ctx","getContext","deltaTime","min","clearRect","strokeStyle","lineWidth","strokeRect","fillStyle","font","fillText","length","max","toFixed","parallaxOffset","canSpawnNow","newMeteor","push","delay","filter","meteor","currentPos","unshift","slice","currentOpacity","fadeProgress","timeFactor","pulseEffect","adjustY","i","segmentOpacity","segmentWidth","shadowColor","shadowBlur","beginPath","moveTo","lineTo","lineCap","replace","stroke","arc","requestAnimationFrame","cancelAnimationFrame","ref","style","top","left","overflow","pointerEvents","children","GoldenMeteorShower","props","goldenPreset","CelestialMeteorShower","celestialPreset","EmeraldMeteorShower","emeraldPreset","RubyMeteorShower","rubyPreset","ClassicMeteorShower","classicPreset","TopMeteorShower","topPreset"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/core/effects/cosmiceffects/MeteorShower.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\n\n/**\n * MeteorShower Component - Enhanced Version\n * \n * Creates an animated meteor shower effect where meteors arc across the sky\n * with comet-like trails and fade away naturally.\n * Features staggered appearance and configurable journey completion.\n * \n * @param {Object} props - Component props\n * @param {string|number} [props.height='100vh'] - Height of the container\n * @param {number} [props.zIndex=5] - Z-index for the container\n * @param {boolean} [props.active=true] - Whether the animation is active\n * @param {number} [props.meteorDensity=15] - Number of meteors to maintain on screen\n * @param {number} [props.meteorMinSize=1] - Minimum size of meteors\n * @param {number} [props.meteorMaxSize=3] - Maximum size of meteors\n * @param {number} [props.meteorSpeed=0.08] - Base speed of meteors\n * @param {number} [props.trailLength=180] - Length of meteor trails\n * @param {number} [props.trailSegments=20] - Number of segments in each trail\n * @param {string} [props.coreColor='rgba(255, 255, 255, 1)'] - Core color for meteors\n * @param {string} [props.glowColor='rgba(255, 253, 227, 0.9)'] - Glow color for meteors\n * @param {string} [props.trailColor='rgba(191, 173, 127, 0.8)'] - Trail color for meteors\n * @param {boolean} [props.enableParallax=false] - Enable parallax effect on scroll\n * @param {number} [props.parallaxIntensity=0.2] - Intensity of parallax effect\n * @param {boolean} [props.staggered=true] - Enable staggered meteor appearance\n * @param {number} [props.minStaggerDelay=200] - Minimum delay between meteor spawns (ms)\n * @param {number} [props.maxStaggerDelay=2000] - Maximum delay between meteor spawns (ms)\n * @param {number} [props.journeyCompletion=0.9] - When meteors complete their journey (0-1, where 1 is the container height)\n * @param {string} [props.mode='arc'] - Animation mode: 'arc' (curved paths) or 'linear' (straight angled paths)\n * @param {string} [props.direction='both'] - Direction for linear mode: 'left', 'right', 'both', or 'top'\n * @param {number} [props.baseAngle=30] - Base angle for linear meteors (degrees)\n * @param {number} [props.angleVariation=15] - Random variation to apply to the base angle (±degrees)\n * @param {boolean} [props.debug=false] - Enable debug visualization\n */\nconst MeteorShower = ({\n  height = '100vh',\n  zIndex = 5,\n  active = true,\n  meteorDensity = 15,\n  meteorMinSize = 1,\n  meteorMaxSize = 3,\n  meteorSpeed = 0.08,\n  trailLength = 180,\n  trailSegments = 20,\n  coreColor = 'rgba(255, 255, 255, 1)',\n  glowColor = 'rgba(255, 253, 227, 0.9)',\n  trailColor = 'rgba(191, 173, 127, 0.8)',\n  enableParallax = false,\n  parallaxIntensity = 0.2,\n  staggered = true,\n  minStaggerDelay = 200,\n  maxStaggerDelay = 2000,\n  journeyCompletion = 0.9, // Default: complete at 90% of container height\n  mode = 'arc', // 'arc' or 'linear'\n  direction = 'both', // 'left', 'right', 'both', or 'top'\n  baseAngle = 30, // Base angle for linear meteors (degrees)\n  angleVariation = 15, // Variation to apply to the angle (±degrees)\n  debug = false\n}) => {\n  const containerRef = useRef(null);\n  const canvasRef = useRef(null);\n  const meteorsRef = useRef([]);\n  const animationFrameRef = useRef(null);\n  const lastTimestampRef = useRef(0);\n  const scrollPositionRef = useRef(0);\n  const nextSpawnTimeRef = useRef(0);\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n  const [isInitialized, setIsInitialized] = useState(false);\n  \n  // Calculate path parameters for a meteor based on selected mode\n  const calculateMeteorPath = (width, height) => {\n    if (mode === 'arc') {\n      // Original arc path logic\n      // Start point: somewhere along the top of the canvas with randomization\n      const startX = Math.random() * width * 1.5 - width * 0.25;\n      \n      // Control how far meteors can start from outside the visible area\n      const startY = Math.random() * -100 - 50;\n      \n      // Randomize arc curvature and direction\n      const curveDirection = Math.random() > 0.5 ? 1 : -1;\n      const curveIntensity = Math.random() * 0.4 + 0.2;\n      \n      // Calculate control points for quadratic path\n      // End point: adjusted to complete journey according to journeyCompletion parameter\n      const endX = startX + (curveDirection * width * curveIntensity);\n      const endY = height * journeyCompletion;\n      \n      // Control point: creates the arc shape\n      const controlX = (startX + endX) / 2 + (curveDirection * width * curveIntensity);\n      const controlY = (startY + endY) * 0.5;\n      \n      return {\n        pathType: 'arc',\n        start: { x: startX, y: startY },\n        control: { x: controlX, y: controlY },\n        end: { x: endX, y: endY }\n      };\n    } else if (mode === 'linear') {\n      // New linear path logic for traditional meteor shower\n      \n      // Determine direction (from left, right, top, or random)\n      let meteorDirection = direction;\n      if (direction === 'both') {\n        meteorDirection = Math.random() > 0.5 ? 'left' : 'right';\n      }\n      \n      // Calculate angle with variation (convert to radians)\n      let angle;\n      \n      if (direction === 'top') {\n        // For 'top' direction, maintain consistent 30 degree downward angle to the right\n        // with minimal variation to keep them all falling in a similar direction\n        angle = ((30 + (Math.random() * 2 - 1) * 5) * Math.PI) / 180;\n      } else {\n        angle = ((baseAngle + (Math.random() * 2 - 1) * angleVariation) * Math.PI) / 180;\n      }\n      \n      // Set starting positions based on direction\n      let startX;\n      if (meteorDirection === 'left') {\n        // Start from top-left portion of the screen\n        startX = Math.random() * (width * 0.3) - (width * 0.1);\n      } else if (meteorDirection === 'right') {\n        // Start from top-right portion of the screen\n        startX = width - Math.random() * (width * 0.3) + (width * 0.1);\n      } else if (direction === 'top') {\n        // For 'top' direction, distribute meteors across the top with emphasis on left and center\n        const position = Math.random();\n        if (position < 0.5) {\n          // 50% chance: top-left\n          startX = Math.random() * (width * 0.35);\n        } else if (position < 0.85) {\n          // 35% chance: top-center\n          startX = width * 0.35 + Math.random() * (width * 0.35);\n        } else {\n          // 15% chance: top-right\n          startX = width * 0.7 + Math.random() * (width * 0.3);\n        }\n      }\n      \n      // Start slightly above the screen\n      const startY = Math.random() * -100 - 50;\n      \n      // Calculate distance meteor will travel based on angle and screen dimensions\n      const distanceToTravel = (height * journeyCompletion) / Math.cos(angle);\n      \n      // Calculate end position using angle\n      let endX, endY;\n      if (meteorDirection === 'left' || direction === 'top') {\n        // Meteor moves from left to right (or top to bottom-right for 'top' direction)\n        endX = startX + distanceToTravel * Math.sin(angle);\n        endY = startY + distanceToTravel * Math.cos(angle);\n      } else {\n        // Meteor moves from right to left\n        endX = startX - distanceToTravel * Math.sin(angle);\n        endY = startY + distanceToTravel * Math.cos(angle);\n      }\n      \n      return {\n        pathType: 'linear',\n        start: { x: startX, y: startY },\n        end: { x: endX, y: endY },\n        direction: meteorDirection\n      };\n    }\n  };\n  \n  // Calculate position along a path\n  const getPathPoint = (t, path) => {\n    if (path.pathType === 'arc') {\n      // Quadratic bezier curve for arc mode\n      return getQuadraticBezierPoint(t, path.start, path.control, path.end);\n    } else {\n      // Linear interpolation for linear mode\n      return {\n        x: path.start.x + (path.end.x - path.start.x) * t,\n        y: path.start.y + (path.end.y - path.start.y) * t\n      };\n    }\n  };\n  \n  // Calculate position along a quadratic bezier curve\n  const getQuadraticBezierPoint = (t, p0, p1, p2) => {\n    const x = Math.pow(1 - t, 2) * p0.x + 2 * (1 - t) * t * p1.x + Math.pow(t, 2) * p2.x;\n    const y = Math.pow(1 - t, 2) * p0.y + 2 * (1 - t) * t * p1.y + Math.pow(t, 2) * p2.y;\n    return { x, y };\n  };\n  \n  // Update canvas dimensions on resize\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (canvasRef.current && containerRef.current) {\n        const container = containerRef.current;\n        const rect = container.getBoundingClientRect();\n        const width = rect.width;\n        const containerHeight = typeof height === 'string' && height.endsWith('vh') \n          ? (parseInt(height, 10) / 100) * window.innerHeight\n          : parseInt(height, 10) || window.innerHeight;\n          \n        if (debug) {\n          console.log('Setting canvas dimensions:', width, containerHeight);\n        }\n        \n        setDimensions({ width, height: containerHeight });\n        canvasRef.current.width = width;\n        canvasRef.current.height = containerHeight;\n        setIsInitialized(true);\n      }\n    };\n    \n    setTimeout(updateDimensions, 100);\n    window.addEventListener('resize', updateDimensions);\n    \n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n    };\n  }, [height, debug]);\n  \n  // Handle parallax effect on scroll if enabled\n  useEffect(() => {\n    if (!enableParallax) return;\n    \n    const handleScroll = () => {\n      scrollPositionRef.current = window.scrollY;\n    };\n    \n    window.addEventListener('scroll', handleScroll);\n    \n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [enableParallax]);\n  \n  // Memoize the path calculation and position functions to avoid dependency issues\n  const calculateMeteorPathMemoized = useCallback(calculateMeteorPath, [\n    mode, direction, baseAngle, angleVariation, journeyCompletion\n  ]);\n  \n  const getPathPointMemoized = useCallback(getPathPoint, []);\n  \n  // Memoize the meteor initialization function\n  const initializeMeteorMemoized = useCallback(() => {\n    const width = dimensions.width;\n    const height = dimensions.height;\n    \n    if (!width || !height) return null;\n    \n    // Calculate path based on mode\n    const path = calculateMeteorPathMemoized(width, height);\n    \n    // Randomize meteor properties\n    const baseSpeed = meteorSpeed * (Math.random() * 0.5 + 0.75);\n    \n    return {\n      path,\n      progress: 0,\n      size: Math.random() * (meteorMaxSize - meteorMinSize) + meteorMinSize,\n      speed: baseSpeed,\n      active: true,\n      positions: new Array(trailSegments).fill({ x: path.start.x, y: path.start.y }),\n      opacity: Math.random() * 0.3 + 0.7,\n      fadeThreshold: 0.7 + Math.random() * 0.2, // When to start fading (70-90% of journey)\n      pulsePhase: Math.random() * Math.PI * 2,\n      pulseSpeed: Math.random() * 0.01 + 0.005\n    };\n  }, [\n    dimensions, \n    meteorSpeed, \n    meteorMinSize, \n    meteorMaxSize, \n    trailSegments,\n    calculateMeteorPathMemoized\n  ]);\n  \n  // Main animation loop\n  useEffect(() => {\n    if (!active || !dimensions.width || !dimensions.height || !isInitialized) {\n      if (debug) {\n        console.log('Animation not starting. Active:', active, 'Dimensions:', dimensions, 'Initialized:', isInitialized);\n      }\n      return;\n    }\n    \n    if (debug) {\n      console.log('Starting animation with dimensions:', dimensions);\n    }\n    \n    // Animation function\n    const animate = (timestamp) => {\n      if (!canvasRef.current) return;\n      \n      const ctx = canvasRef.current.getContext('2d');\n      const width = dimensions.width;\n      const height = dimensions.height;\n      \n      // Initialize lastTimestamp on first run\n      if (lastTimestampRef.current === 0) {\n        lastTimestampRef.current = timestamp;\n        nextSpawnTimeRef.current = timestamp;\n      }\n      \n      // Calculate delta time (capped to prevent jumps after tab switching)\n      const deltaTime = Math.min(timestamp - lastTimestampRef.current, 50);\n      lastTimestampRef.current = timestamp;\n      \n      // Clear canvas\n      ctx.clearRect(0, 0, width, height);\n      \n      // Debug mode - draw canvas bounds\n      if (debug) {\n        ctx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n        ctx.lineWidth = 2;\n        ctx.strokeRect(0, 0, width, height);\n        \n        ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n        ctx.font = '12px monospace';\n        ctx.fillText(`Canvas: ${width}×${height}`, 10, 20);\n        ctx.fillText(`Meteors: ${meteorsRef.current.length}/${meteorDensity}`, 10, 40);\n        ctx.fillText(`Mode: ${mode}`, 10, 60);\n        ctx.fillText(`Direction: ${direction}`, 10, 80);\n        if (staggered) {\n          ctx.fillText(`Next Spawn: ${Math.max(0, (nextSpawnTimeRef.current - timestamp) / 1000).toFixed(2)}s`, 10, 100);\n        }\n      }\n      \n      // Apply parallax offset\n      let parallaxOffset = 0;\n      if (enableParallax) {\n        parallaxOffset = scrollPositionRef.current * parallaxIntensity;\n      }\n      \n      // Spawn new meteors if needed, with staggering if enabled\n      if (meteorsRef.current.length < meteorDensity) {\n        const canSpawnNow = !staggered || timestamp >= nextSpawnTimeRef.current;\n        \n        if (canSpawnNow) {\n          const newMeteor = initializeMeteorMemoized();\n          if (newMeteor) {\n            meteorsRef.current.push(newMeteor);\n            \n            // If staggering is enabled, set the next spawn time\n            if (staggered) {\n              const delay = Math.random() * (maxStaggerDelay - minStaggerDelay) + minStaggerDelay;\n              nextSpawnTimeRef.current = timestamp + delay;\n            }\n          }\n        }\n      }\n      \n      // Update and draw meteors\n      meteorsRef.current = meteorsRef.current.filter(meteor => {\n        // Skip if not active\n        if (!meteor.active) return false;\n        \n        // Update progress based on speed and delta time\n        meteor.progress += meteor.speed * (deltaTime / 1000);\n        \n        // Calculate current position along the path\n        const currentPos = getPathPointMemoized(Math.min(1, meteor.progress), meteor.path);\n        \n        // Update position history (for trail)\n        meteor.positions.unshift({ x: currentPos.x, y: currentPos.y });\n        meteor.positions = meteor.positions.slice(0, trailSegments);\n        \n        // Check if meteor has completed its path\n        if (meteor.progress >= 1) {\n          return false;\n        }\n        \n        // Calculate opacity based on progress\n        // Start fading out after reaching the fadeThreshold\n        let currentOpacity = meteor.opacity;\n        if (meteor.progress > meteor.fadeThreshold) {\n          // Map progress from fadeThreshold-1.0 to 1.0-0.0 for opacity\n          const fadeProgress = (meteor.progress - meteor.fadeThreshold) / (1 - meteor.fadeThreshold);\n          currentOpacity = meteor.opacity * (1 - fadeProgress);\n        }\n        \n        // Apply pulse/flicker effect\n        const timeFactor = timestamp * 0.001;\n        const pulseEffect = Math.sin(timeFactor * meteor.pulseSpeed + meteor.pulsePhase) * 0.2 + 0.8;\n        \n        // Adjust for parallax if enabled\n        const adjustY = enableParallax ? parallaxOffset * (meteor.size / meteorMaxSize) : 0;\n        \n        // Draw trail segments\n        for (let i = 0; i < meteor.positions.length - 1; i++) {\n          if (!meteor.positions[i] || !meteor.positions[i+1]) continue;\n          \n          // Calculate segment opacity (decreases along the trail)\n          const segmentOpacity = currentOpacity * (1 - i / meteor.positions.length) * pulseEffect;\n          \n          // Skip if nearly invisible\n          if (segmentOpacity < 0.02) continue;\n          \n          // Calculate segment width (decreases along the trail)\n          const segmentWidth = meteor.size * (1 - i / meteor.positions.length * 0.7);\n          \n          // Set shadow/glow effect\n          ctx.shadowColor = glowColor;\n          ctx.shadowBlur = meteor.size * 3 * pulseEffect;\n          \n          // Draw line segment\n          ctx.beginPath();\n          ctx.moveTo(meteor.positions[i].x, meteor.positions[i].y + adjustY);\n          ctx.lineTo(meteor.positions[i+1].x, meteor.positions[i+1].y + adjustY);\n          \n          // Set line style\n          ctx.lineCap = 'round';\n          ctx.lineWidth = segmentWidth;\n          ctx.strokeStyle = trailColor.replace(/[\\d.]+\\)$/, segmentOpacity + ')');\n          ctx.stroke();\n        }\n        \n        // Draw meteor head (brightest part)\n        if (meteor.positions[0]) {\n          // Set shadow/glow for head\n          ctx.shadowColor = glowColor;\n          ctx.shadowBlur = meteor.size * 5 * pulseEffect;\n          \n          // Draw outer glow\n          ctx.beginPath();\n          ctx.arc(meteor.positions[0].x, meteor.positions[0].y + adjustY, meteor.size * 1.5, 0, Math.PI * 2);\n          ctx.fillStyle = glowColor.replace(/[\\d.]+\\)$/, currentOpacity * 0.7 * pulseEffect + ')');\n          ctx.fill();\n          \n          // Draw inner core\n          ctx.beginPath();\n          ctx.arc(meteor.positions[0].x, meteor.positions[0].y + adjustY, meteor.size * 0.7, 0, Math.PI * 2);\n          ctx.fillStyle = coreColor.replace(/[\\d.]+\\)$/, currentOpacity * pulseEffect + ')');\n          ctx.fill();\n        }\n        \n        return true;\n      });\n      \n      // Continue animation\n      animationFrameRef.current = requestAnimationFrame(animate);\n    };\n    \n    // Start animation\n    animationFrameRef.current = requestAnimationFrame(animate);\n    \n    // Cleanup\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [\n    active,\n    isInitialized,\n    dimensions,\n    meteorDensity,\n    meteorMinSize,\n    meteorMaxSize,\n    meteorSpeed,\n    trailLength,\n    trailSegments,\n    coreColor,\n    glowColor,\n    trailColor,\n    enableParallax,\n    parallaxIntensity,\n    staggered,\n    minStaggerDelay,\n    maxStaggerDelay,\n    journeyCompletion,\n    mode,\n    direction,\n    baseAngle,\n    angleVariation,\n    debug,\n    getPathPointMemoized,\n    initializeMeteorMemoized\n  ]);\n  \n  return (\n    <div \n      ref={containerRef}\n      style={{ \n        position: 'absolute',\n        top: 0, \n        left: 0, \n        width: '100%', \n        height: height,\n        overflow: 'hidden', \n        pointerEvents: 'none', \n        zIndex: zIndex\n      }}\n    >\n      <canvas \n        ref={canvasRef} \n        style={{ \n          position: 'absolute', \n          top: 0, \n          left: 0, \n          width: '100%', \n          height: '100%'\n        }} \n      />\n    </div>\n  );\n};\n\n/**\n * GoldenMeteorShower Component\n * \n * A preset version of the MeteorShower with a golden/amber color scheme.\n * \n * @param {Object} props - Same props as MeteorShower with presets\n */\nexport const GoldenMeteorShower = (props) => {\n  const goldenPreset = {\n    coreColor: 'rgba(255, 255, 255, 1)',\n    glowColor: 'rgba(255, 253, 227, 0.9)',\n    trailColor: 'rgba(191, 173, 127, 0.8)',\n    meteorMinSize: 1,\n    meteorMaxSize: 3,\n    meteorSpeed: 0.08,\n    trailLength: 180,\n    trailSegments: 20,\n    journeyCompletion: 0.9,\n    staggered: true,\n    minStaggerDelay: 200,\n    maxStaggerDelay: 2000,\n  };\n  \n  return <MeteorShower {...goldenPreset} {...props} />;\n};\n\n/**\n * CelestialMeteorShower Component\n * \n * A preset version of the MeteorShower with a bluish-purple color scheme.\n * \n * @param {Object} props - Same props as MeteorShower with presets\n */\nexport const CelestialMeteorShower = (props) => {\n  const celestialPreset = {\n    coreColor: 'rgba(255, 255, 255, 1)',\n    glowColor: 'rgba(220, 225, 255, 0.9)',\n    trailColor: 'rgba(150, 160, 255, 0.8)',\n    meteorMinSize: 1,\n    meteorMaxSize: 3,\n    meteorSpeed: 0.08,\n    trailLength: 180,\n    trailSegments: 20,\n    journeyCompletion: 0.9,\n    staggered: true,\n    minStaggerDelay: 300,\n    maxStaggerDelay: 1800,\n  };\n  \n  return <MeteorShower {...celestialPreset} {...props} />;\n};\n\n/**\n * EmeraldMeteorShower Component\n * \n * A preset version of the MeteorShower with a green color scheme.\n * \n * @param {Object} props - Same props as MeteorShower with presets\n */\nexport const EmeraldMeteorShower = (props) => {\n  const emeraldPreset = {\n    coreColor: 'rgba(255, 255, 255, 1)',\n    glowColor: 'rgba(215, 255, 230, 0.9)',\n    trailColor: 'rgba(100, 220, 150, 0.8)',\n    meteorMinSize: 1,\n    meteorMaxSize: 3,\n    meteorSpeed: 0.08,\n    trailLength: 180,\n    trailSegments: 20,\n    journeyCompletion: 0.9,\n    staggered: true,\n    minStaggerDelay: 250,\n    maxStaggerDelay: 1500,\n  };\n  \n  return <MeteorShower {...emeraldPreset} {...props} />;\n};\n\n/**\n * RubyMeteorShower Component\n * \n * A preset version of the MeteorShower with a red color scheme.\n * \n * @param {Object} props - Same props as MeteorShower with presets\n */\nexport const RubyMeteorShower = (props) => {\n  const rubyPreset = {\n    coreColor: 'rgba(255, 255, 255, 1)',\n    glowColor: 'rgba(255, 200, 200, 0.9)',\n    trailColor: 'rgba(220, 100, 100, 0.8)',\n    meteorMinSize: 1,\n    meteorMaxSize: 3,\n    meteorSpeed: 0.08,\n    trailLength: 180,\n    trailSegments: 20,\n    journeyCompletion: 0.9,\n    staggered: true,\n    minStaggerDelay: 350,\n    maxStaggerDelay: 2200,\n  };\n  \n  return <MeteorShower {...rubyPreset} {...props} />;\n};\n\n/**\n * ClassicMeteorShower Component\n * \n * A preset version of the MeteorShower with linear paths for a more traditional meteor shower effect.\n * \n * @param {Object} props - Same props as MeteorShower with presets\n */\nexport const ClassicMeteorShower = (props) => {\n  const classicPreset = {\n    mode: 'linear',\n    direction: 'both',\n    baseAngle: 30,\n    angleVariation: 15,\n    meteorMinSize: 1,\n    meteorMaxSize: 3,\n    meteorSpeed: 0.12,\n    trailLength: 200,\n    trailSegments: 25,\n    journeyCompletion: 0.95,\n    staggered: true,\n    minStaggerDelay: 100,\n    maxStaggerDelay: 1000,\n  };\n  \n  return <MeteorShower {...classicPreset} {...props} />;\n};\n/**\n * TopMeteorShower Component\n * \n * A preset version of the MeteorShower with meteors falling from the top of the screen\n * at a consistent 30-degree angle, distributed with emphasis on left and center areas.\n * \n * @param {Object} props - Same props as MeteorShower with presets\n */\nexport const TopMeteorShower = (props) => {\n  const topPreset = {\n    mode: 'linear',\n    direction: 'top',\n    meteorMinSize: 1,\n    meteorMaxSize: 3,\n    meteorSpeed: 0.12,\n    trailLength: 200,\n    trailSegments: 25,\n    journeyCompletion: 0.95,\n    staggered: true,\n    minStaggerDelay: 100,\n    maxStaggerDelay: 1000,\n  };\n  \n  return <MeteorShower {...topPreset} {...props} />;\n};\n\nexport default MeteorShower;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}