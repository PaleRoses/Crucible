{"ast":null,"code":"var _jsxFileName = \"/home/valeria/Documents/Crucible/frontend/src/components/layout/Background.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useCallback, useMemo } from 'react';\nimport { useScroll, useSpring } from 'framer-motion';\n\n// Import CosmicStars component\nimport CosmicStars from '../core/effects/cosmiceffects/CosmicStars';\n\n/**\n * Background Component\n * \n * Coordinates cosmic effects components and manages scroll-based state persistence.\n * Acts as the coordinator for cosmic visual effects while maintaining a consistent\n * experience across page reloads.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Background = ({\n  config = {}\n}) => {\n  _s();\n  // Refs for DOM elements and animation state\n  const containerRef = useRef(null);\n  const lastScrollYRef = useRef(0);\n\n  // Use refs instead of state to prevent re-renders\n  const isInitializedRef = useRef(false);\n\n  // Store dimensions in a ref to avoid re-renders when they change\n  const dimensionsRef = useRef({\n    width: 0,\n    height: 0,\n    pixelRatio: 1\n  });\n\n  // Get scroll position using framer-motion\n  const {\n    scrollY\n  } = useScroll({\n    smooth: 0.05 // Smoother scrolling for high-framerate animations\n  });\n\n  // Use spring physics for smoother scrolling effect\n  const springScrollY = useSpring(scrollY, {\n    stiffness: 1,\n    damping: 5,\n    mass: 0.5,\n    restDelta: 0.001,\n    restSpeed: 0.001\n  });\n\n  // Track spring scrollY value without causing re-renders\n  const springScrollYRef = useRef(0);\n  useEffect(() => {\n    const unsubscribe = springScrollY.onChange(value => {\n      springScrollYRef.current = value;\n    });\n    return () => unsubscribe();\n  }, [springScrollY]);\n\n  // Configuration - wrapped in useMemo to prevent recreation on each render\n  // Merge default config with user-provided config\n  const CONFIG = useMemo(() => ({\n    // Background container settings\n    backgroundColor: 'rgb(8, 8, 12)',\n    // Star configuration\n    starCount: 100,\n    starSizeMin: 1.0,\n    starSizeMax: 1.9,\n    starOpacityMin: 0.2,\n    starOpacityMax: 0.55,\n    starColors: ['rgba(255, 243, 200, alpha)',\n    // Warm yellow\n    'rgba(255, 231, 164, alpha)',\n    // Golden\n    'rgba(252, 249, 231, alpha)' // Off-white gold\n    ],\n    // Parallax and movement parameters\n    parallaxEnabled: true,\n    parallaxFactor: 0.2,\n    // Trail effect parameters\n    trailEnabled: true,\n    trailLength: 2,\n    trailOpacityFactor: 0.5,\n    // Twinkling effect parameters\n    twinkleEnabled: true,\n    twinkleProbability: 0.01,\n    twinkleDuration: [2000, 4000],\n    // Drift movement parameters\n    driftEnabled: true,\n    driftSpeed: 0.01,\n    driftSpeedVariation: 0.005,\n    // Enhanced persistence settings\n    persistenceEnabled: true,\n    persistenceInterval: 3000,\n    persistenceMaxAge: 7 * 24 * 60 * 60 * 1000,\n    // 7 days before regenerating\n\n    // Session persistence keys\n    sessionKey: 'cosmic_background_config',\n    scrollPositionKey: 'cosmic_background_scroll',\n    lastVisitKey: 'cosmic_background_last_visit',\n    // Visibility and component flags\n    showStars: true,\n    showNebula: false,\n    showDust: false,\n    showMeteors: false,\n    // Override with user config\n    ...config\n  }), [config]);\n\n  // Initialize dimensions\n  useEffect(() => {\n    const updateDimensions = () => {\n      dimensionsRef.current = {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        pixelRatio: window.devicePixelRatio || 1\n      };\n    };\n\n    // Initial dimension calculation\n    updateDimensions();\n\n    // Listen for resize events\n    window.addEventListener('resize', updateDimensions);\n\n    // Set as initialized\n    isInitializedRef.current = true;\n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n    };\n  }, []);\n\n  // Save the current scroll position\n  const saveScrollPosition = useCallback(() => {\n    if (!CONFIG.persistenceEnabled) return;\n    try {\n      // Record current time\n      const currentTime = Date.now();\n\n      // Save current scroll position for quick access\n      sessionStorage.setItem(CONFIG.scrollPositionKey, springScrollYRef.current.toString());\n\n      // Save last visit time\n      sessionStorage.setItem(CONFIG.lastVisitKey, currentTime.toString());\n    } catch (error) {\n      console.warn('Could not save scroll position to session storage', error);\n    }\n  }, [CONFIG.persistenceEnabled, CONFIG.scrollPositionKey, CONFIG.lastVisitKey]);\n\n  // Load the saved scroll position\n  const loadScrollPosition = useCallback(() => {\n    if (!CONFIG.persistenceEnabled) return null;\n    try {\n      const scrollPosition = sessionStorage.getItem(CONFIG.scrollPositionKey);\n      if (scrollPosition) {\n        return parseFloat(scrollPosition);\n      }\n    } catch (error) {\n      console.warn('Could not load scroll position from session storage', error);\n    }\n    return null;\n  }, [CONFIG.persistenceEnabled, CONFIG.scrollPositionKey]);\n\n  // Load scroll position on mount\n  useEffect(() => {\n    const savedScrollPosition = loadScrollPosition();\n    if (savedScrollPosition !== null) {\n      springScrollYRef.current = savedScrollPosition;\n    }\n  }, [loadScrollPosition]);\n\n  // Add navigation event handlers to save state when user leaves\n  useEffect(() => {\n    if (!CONFIG.persistenceEnabled) return;\n    const handleVisibilityChange = () => {\n      if (document.visibilityState === 'hidden') {\n        saveScrollPosition();\n      }\n    };\n    const handleBeforeUnload = () => {\n      saveScrollPosition();\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n      saveScrollPosition();\n    };\n  }, [CONFIG.persistenceEnabled, saveScrollPosition]);\n\n  // Create configuration for CosmicStars\n  const starsConfig = useMemo(() => ({\n    active: CONFIG.showStars,\n    zIndex: 1,\n    starCount: CONFIG.starCount,\n    starSizeMin: CONFIG.starSizeMin,\n    starSizeMax: CONFIG.starSizeMax,\n    starOpacityMin: CONFIG.starOpacityMin,\n    starOpacityMax: CONFIG.starOpacityMax,\n    colors: CONFIG.starColors,\n    enableParallax: CONFIG.parallaxEnabled,\n    parallaxFactor: CONFIG.parallaxFactor,\n    trailEnabled: CONFIG.trailEnabled,\n    trailLength: CONFIG.trailLength,\n    trailOpacityFactor: CONFIG.trailOpacityFactor,\n    twinkleEnabled: CONFIG.twinkleEnabled,\n    twinkleProbability: CONFIG.twinkleProbability,\n    twinkleDuration: CONFIG.twinkleDuration,\n    driftEnabled: CONFIG.driftEnabled,\n    driftSpeed: CONFIG.driftSpeed,\n    driftSpeedVariation: CONFIG.driftSpeedVariation,\n    backgroundColor: CONFIG.backgroundColor\n  }), [CONFIG]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100vw',\n      height: '100vh',\n      overflow: 'hidden',\n      backgroundColor: CONFIG.backgroundColor,\n      zIndex: -1,\n      pointerEvents: 'none'\n    },\n    \"aria-hidden\": \"true\",\n    children: CONFIG.showStars && /*#__PURE__*/_jsxDEV(CosmicStars, {\n      ...starsConfig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 28\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n_s(Background, \"ouEgbGE8COImLcGBzJtf1RWP+hE=\", false, function () {\n  return [useScroll, useSpring];\n});\n_c = Background;\nexport default Background;\nvar _c;\n$RefreshReg$(_c, \"Background\");","map":{"version":3,"names":["React","useRef","useEffect","useCallback","useMemo","useScroll","useSpring","CosmicStars","jsxDEV","_jsxDEV","Background","config","_s","containerRef","lastScrollYRef","isInitializedRef","dimensionsRef","width","height","pixelRatio","scrollY","smooth","springScrollY","stiffness","damping","mass","restDelta","restSpeed","springScrollYRef","unsubscribe","onChange","value","current","CONFIG","backgroundColor","starCount","starSizeMin","starSizeMax","starOpacityMin","starOpacityMax","starColors","parallaxEnabled","parallaxFactor","trailEnabled","trailLength","trailOpacityFactor","twinkleEnabled","twinkleProbability","twinkleDuration","driftEnabled","driftSpeed","driftSpeedVariation","persistenceEnabled","persistenceInterval","persistenceMaxAge","sessionKey","scrollPositionKey","lastVisitKey","showStars","showNebula","showDust","showMeteors","updateDimensions","window","innerWidth","innerHeight","devicePixelRatio","addEventListener","removeEventListener","saveScrollPosition","currentTime","Date","now","sessionStorage","setItem","toString","error","console","warn","loadScrollPosition","scrollPosition","getItem","parseFloat","savedScrollPosition","handleVisibilityChange","document","visibilityState","handleBeforeUnload","starsConfig","active","zIndex","colors","enableParallax","ref","style","position","top","left","overflow","pointerEvents","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/layout/Background.jsx"],"sourcesContent":["import React, { useRef, useEffect, useCallback, useMemo } from 'react';\nimport { useScroll, useSpring } from 'framer-motion';\n\n// Import CosmicStars component\nimport CosmicStars from '../core/effects/cosmiceffects/CosmicStars';\n\n/**\n * Background Component\n * \n * Coordinates cosmic effects components and manages scroll-based state persistence.\n * Acts as the coordinator for cosmic visual effects while maintaining a consistent\n * experience across page reloads.\n */\nconst Background = ({ config = {} }) => {\n  // Refs for DOM elements and animation state\n  const containerRef = useRef(null);\n  const lastScrollYRef = useRef(0);\n  \n  // Use refs instead of state to prevent re-renders\n  const isInitializedRef = useRef(false);\n  \n  // Store dimensions in a ref to avoid re-renders when they change\n  const dimensionsRef = useRef({ width: 0, height: 0, pixelRatio: 1 });\n  \n  // Get scroll position using framer-motion\n  const { scrollY } = useScroll({\n    smooth: 0.05  // Smoother scrolling for high-framerate animations\n  });\n  \n  // Use spring physics for smoother scrolling effect\n  const springScrollY = useSpring(scrollY, {\n    stiffness: 1,\n    damping: 5,\n    mass: 0.5,\n    restDelta: 0.001,\n    restSpeed: 0.001\n  });\n  \n  // Track spring scrollY value without causing re-renders\n  const springScrollYRef = useRef(0);\n  useEffect(() => {\n    const unsubscribe = springScrollY.onChange(value => {\n      springScrollYRef.current = value;\n    });\n    return () => unsubscribe();\n  }, [springScrollY]);\n  \n  // Configuration - wrapped in useMemo to prevent recreation on each render\n  // Merge default config with user-provided config\n  const CONFIG = useMemo(() => ({\n    // Background container settings\n    backgroundColor: 'rgb(8, 8, 12)',\n    \n    // Star configuration\n    starCount: 100,\n    starSizeMin: 1.0,\n    starSizeMax: 1.9,\n    starOpacityMin: 0.2,\n    starOpacityMax: 0.55,\n    starColors: [\n      'rgba(255, 243, 200, alpha)', // Warm yellow\n      'rgba(255, 231, 164, alpha)', // Golden\n      'rgba(252, 249, 231, alpha)'  // Off-white gold\n    ],\n    \n    // Parallax and movement parameters\n    parallaxEnabled: true,\n    parallaxFactor: 0.2,\n    \n    // Trail effect parameters\n    trailEnabled: true,\n    trailLength: 2,\n    trailOpacityFactor: 0.5,\n    \n    // Twinkling effect parameters\n    twinkleEnabled: true,\n    twinkleProbability: 0.01,\n    twinkleDuration: [2000, 4000],\n    \n    // Drift movement parameters\n    driftEnabled: true,\n    driftSpeed: 0.01,\n    driftSpeedVariation: 0.005,\n    \n    // Enhanced persistence settings\n    persistenceEnabled: true,\n    persistenceInterval: 3000,\n    persistenceMaxAge: 7 * 24 * 60 * 60 * 1000, // 7 days before regenerating\n    \n    // Session persistence keys\n    sessionKey: 'cosmic_background_config',\n    scrollPositionKey: 'cosmic_background_scroll',\n    lastVisitKey: 'cosmic_background_last_visit',\n    \n    // Visibility and component flags\n    showStars: true,\n    showNebula: false,\n    showDust: false,\n    showMeteors: false,\n    \n    // Override with user config\n    ...config\n  }), [config]);\n  \n  // Initialize dimensions\n  useEffect(() => {\n    const updateDimensions = () => {\n      dimensionsRef.current = {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        pixelRatio: window.devicePixelRatio || 1\n      };\n    };\n    \n    // Initial dimension calculation\n    updateDimensions();\n    \n    // Listen for resize events\n    window.addEventListener('resize', updateDimensions);\n    \n    // Set as initialized\n    isInitializedRef.current = true;\n    \n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n    };\n  }, []);\n  \n  // Save the current scroll position\n  const saveScrollPosition = useCallback(() => {\n    if (!CONFIG.persistenceEnabled) return;\n    \n    try {\n      // Record current time\n      const currentTime = Date.now();\n      \n      // Save current scroll position for quick access\n      sessionStorage.setItem(CONFIG.scrollPositionKey, springScrollYRef.current.toString());\n      \n      // Save last visit time\n      sessionStorage.setItem(CONFIG.lastVisitKey, currentTime.toString());\n    } catch (error) {\n      console.warn('Could not save scroll position to session storage', error);\n    }\n  }, [CONFIG.persistenceEnabled, CONFIG.scrollPositionKey, CONFIG.lastVisitKey]);\n  \n  // Load the saved scroll position\n  const loadScrollPosition = useCallback(() => {\n    if (!CONFIG.persistenceEnabled) return null;\n    \n    try {\n      const scrollPosition = sessionStorage.getItem(CONFIG.scrollPositionKey);\n      if (scrollPosition) {\n        return parseFloat(scrollPosition);\n      }\n    } catch (error) {\n      console.warn('Could not load scroll position from session storage', error);\n    }\n    \n    return null;\n  }, [CONFIG.persistenceEnabled, CONFIG.scrollPositionKey]);\n  \n  // Load scroll position on mount\n  useEffect(() => {\n    const savedScrollPosition = loadScrollPosition();\n    if (savedScrollPosition !== null) {\n      springScrollYRef.current = savedScrollPosition;\n    }\n  }, [loadScrollPosition]);\n  \n  // Add navigation event handlers to save state when user leaves\n  useEffect(() => {\n    if (!CONFIG.persistenceEnabled) return;\n    \n    const handleVisibilityChange = () => {\n      if (document.visibilityState === 'hidden') {\n        saveScrollPosition();\n      }\n    };\n    \n    const handleBeforeUnload = () => {\n      saveScrollPosition();\n    };\n    \n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    \n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n      saveScrollPosition();\n    };\n  }, [CONFIG.persistenceEnabled, saveScrollPosition]);\n  \n  // Create configuration for CosmicStars\n  const starsConfig = useMemo(() => ({\n    active: CONFIG.showStars,\n    zIndex: 1,\n    starCount: CONFIG.starCount,\n    starSizeMin: CONFIG.starSizeMin,\n    starSizeMax: CONFIG.starSizeMax,\n    starOpacityMin: CONFIG.starOpacityMin,\n    starOpacityMax: CONFIG.starOpacityMax,\n    colors: CONFIG.starColors,\n    enableParallax: CONFIG.parallaxEnabled,\n    parallaxFactor: CONFIG.parallaxFactor,\n    trailEnabled: CONFIG.trailEnabled,\n    trailLength: CONFIG.trailLength,\n    trailOpacityFactor: CONFIG.trailOpacityFactor,\n    twinkleEnabled: CONFIG.twinkleEnabled,\n    twinkleProbability: CONFIG.twinkleProbability,\n    twinkleDuration: CONFIG.twinkleDuration,\n    driftEnabled: CONFIG.driftEnabled,\n    driftSpeed: CONFIG.driftSpeed,\n    driftSpeedVariation: CONFIG.driftSpeedVariation,\n    backgroundColor: CONFIG.backgroundColor\n  }), [CONFIG]);\n  \n  return (\n    <div\n      ref={containerRef}\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        overflow: 'hidden',\n        backgroundColor: CONFIG.backgroundColor,\n        zIndex: -1,\n        pointerEvents: 'none'\n      }}\n      aria-hidden=\"true\"\n    >\n      {/* Include CosmicStars component */}\n      {CONFIG.showStars && <CosmicStars {...starsConfig} />}\n      \n      {/* \n        Additional cosmic components will be added here later:\n        \n        {CONFIG.showNebula && <CosmicNebula zIndex={2} cloudOpacity={0.12} />}\n        {CONFIG.showDust && <CosmicDust zIndex={4} particleDensity={100} />}\n        {CONFIG.showMeteors && <MeteorShower zIndex={5} />}\n      */}\n    </div>\n  );\n};\n\nexport default Background;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}