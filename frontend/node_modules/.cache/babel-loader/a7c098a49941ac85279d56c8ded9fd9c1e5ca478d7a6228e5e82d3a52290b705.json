{"ast":null,"code":"var _jsxFileName = \"/home/valeria/Documents/Crucible/frontend/src/components/sections/codex/creators/creatorshowcase/EvolutionSimulatorConceptShowcase.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport Background from '../../../../core/Background';\nimport MeteorShower from '../../../../core/effects/cosmiceffects/MeteorShower';\nimport RevealText from '../../../../core/effects/RevealText';\nimport { createUseStyles } from 'react-jss';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  // Main container and layout\n  evolutionSimulator: {\n    position: 'relative',\n    width: '100%',\n    height: '100vh',\n    overflow: 'hidden',\n    color: '#e0e0e0',\n    fontFamily: '\"Garamond\", \"Adobe Caslon Pro\", serif',\n    display: 'flex',\n    flexDirection: 'column',\n    background: '#0a0a0f'\n  },\n  // Enhanced Navbar\n  navbar: {\n    position: 'relative',\n    width: '100%',\n    backgroundColor: 'rgba(15, 15, 20, 0.85)',\n    borderBottom: '1px solid rgba(191, 173, 127, 0.4)',\n    padding: '0.5rem 1rem',\n    zIndex: 100,\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    boxShadow: '0 4px 15px rgba(0, 0, 0, 0.3)'\n  },\n  title: {\n    color: '#bfad7f',\n    fontSize: '1.5rem',\n    margin: 0,\n    fontWeight: 300,\n    letterSpacing: '0.05em',\n    textShadow: '0 2px 5px rgba(0, 0, 0, 0.5)',\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.5rem'\n  },\n  logoIcon: {\n    width: '24px',\n    height: '24px',\n    borderRadius: '50%',\n    background: 'linear-gradient(135deg, #bfad7f 0%, #7D6B9E 100%)',\n    display: 'inline-block'\n  },\n  // Navigation Elements\n  navControls: {\n    display: 'flex',\n    gap: '1rem',\n    alignItems: 'center',\n    flexWrap: 'wrap'\n  },\n  dropdown: {\n    position: 'relative',\n    marginRight: '0.5rem'\n  },\n  dropdownButton: {\n    backgroundColor: 'rgba(30, 30, 40, 0.6)',\n    border: '1px solid rgba(191, 173, 127, 0.3)',\n    color: '#e0e0e0',\n    padding: '0.4rem 0.8rem',\n    borderRadius: '4px',\n    fontFamily: 'inherit',\n    fontSize: '0.9rem',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.5rem',\n    '&:hover': {\n      backgroundColor: 'rgba(191, 173, 127, 0.2)',\n      borderColor: 'rgba(191, 173, 127, 0.6)'\n    }\n  },\n  dropdownContent: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    backgroundColor: 'rgba(20, 20, 25, 0.95)',\n    minWidth: '200px',\n    maxHeight: '70vh',\n    overflowY: 'auto',\n    borderRadius: '4px',\n    padding: '0.5rem',\n    boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5)',\n    zIndex: 101,\n    border: '1px solid rgba(191, 173, 127, 0.3)'\n  },\n  menuItem: {\n    padding: '0.5rem 0.75rem',\n    cursor: 'pointer',\n    borderRadius: '3px',\n    transition: 'all 0.15s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(191, 173, 127, 0.2)'\n    }\n  },\n  menuItemActive: {\n    backgroundColor: 'rgba(191, 173, 127, 0.3)',\n    fontWeight: 'bold'\n  },\n  menuItemTitle: {\n    fontSize: '0.95rem',\n    color: '#bfad7f'\n  },\n  menuItemDescription: {\n    fontSize: '0.8rem',\n    color: 'rgba(224, 224, 224, 0.7)',\n    marginTop: '0.25rem'\n  },\n  // Main content area\n  contentContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '1.5rem',\n    flex: 1,\n    overflow: 'auto',\n    gap: '1.5rem'\n  },\n  // Section Headings\n  sectionHeading: {\n    color: '#b54b4b',\n    // Dark reddish color as shown in the image\n    fontSize: '1.2rem',\n    marginBottom: '1rem',\n    fontWeight: 'normal'\n  },\n  // Network Visualization Controls\n  visualizationControls: {\n    display: 'flex',\n    gap: '1rem',\n    marginBottom: '1rem'\n  },\n  controlButton: {\n    backgroundColor: 'rgba(20, 20, 25, 0.7)',\n    border: '1px solid rgba(181, 75, 75, 0.5)',\n    borderRadius: '4px',\n    color: '#e0e0e0',\n    padding: '0.6rem 1.5rem',\n    fontFamily: 'inherit',\n    fontSize: '0.9rem',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(181, 75, 75, 0.2)',\n      borderColor: 'rgba(181, 75, 75, 0.7)'\n    }\n  },\n  activeControlButton: {\n    backgroundColor: 'rgba(181, 75, 75, 0.3)',\n    borderColor: 'rgba(181, 75, 75, 0.8)'\n  },\n  // Trait probability controls\n  traitProbabilitiesContainer: {\n    marginBottom: '1.5rem'\n  },\n  emergenceProbabilitiesButton: {\n    backgroundColor: 'rgba(20, 20, 25, 0.7)',\n    border: '1px solid rgba(181, 75, 75, 0.5)',\n    borderRadius: '4px',\n    color: '#e0e0e0',\n    padding: '0.6rem 1.5rem',\n    fontFamily: 'inherit',\n    fontSize: '0.9rem',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(181, 75, 75, 0.2)',\n      borderColor: 'rgba(181, 75, 75, 0.7)'\n    }\n  },\n  // Environmental conditions\n  environmentalConditions: {\n    marginBottom: '1.5rem'\n  },\n  environmentalSlidersContainer: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\n    gap: '1rem'\n  },\n  environmentSlider: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '0.35rem'\n  },\n  sliderLabel: {\n    fontSize: '0.9rem',\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  sliderValue: {\n    color: '#bfad7f'\n  },\n  sliderTrack: {\n    width: '100%',\n    height: '4px',\n    backgroundColor: '#333',\n    borderRadius: '2px',\n    position: 'relative'\n  },\n  sliderThumb: {\n    width: '14px',\n    height: '14px',\n    borderRadius: '50%',\n    backgroundColor: '#b54b4b',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translate(-50%, -50%)',\n    cursor: 'pointer'\n  },\n  // Network visualization area\n  visualizationContainer: {\n    position: 'relative',\n    height: '500px',\n    backgroundColor: 'rgba(20, 20, 25, 0.4)',\n    borderRadius: '6px',\n    overflow: 'hidden',\n    border: '1px solid rgba(181, 75, 75, 0.3)',\n    marginBottom: '1.5rem',\n    cursor: 'grab',\n    '&:active': {\n      cursor: 'grabbing'\n    }\n  },\n  networkCanvas: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%'\n  },\n  // Tabs for different controls\n  navTabs: {\n    display: 'flex',\n    gap: '0.25rem',\n    marginLeft: 'auto'\n  },\n  navTab: {\n    padding: '0.4rem 0.8rem',\n    backgroundColor: 'transparent',\n    border: 'none',\n    borderBottom: '2px solid transparent',\n    color: 'rgba(224, 224, 224, 0.7)',\n    cursor: 'pointer',\n    fontSize: '0.9rem',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      color: '#bfad7f',\n      borderBottomColor: 'rgba(191, 173, 127, 0.3)'\n    }\n  },\n  navTabActive: {\n    color: '#bfad7f',\n    borderBottomColor: '#bfad7f'\n  },\n  // View controls\n  viewControls: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.75rem'\n  },\n  viewButton: {\n    backgroundColor: 'rgba(30, 30, 40, 0.6)',\n    border: '1px solid rgba(191, 173, 127, 0.3)',\n    color: '#e0e0e0',\n    width: '32px',\n    height: '32px',\n    borderRadius: '4px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(191, 173, 127, 0.2)',\n      borderColor: 'rgba(191, 173, 127, 0.6)'\n    }\n  },\n  // Category filters\n  categoryFilters: {\n    position: 'absolute',\n    bottom: '1rem',\n    left: '50%',\n    transform: 'translateX(-50%)',\n    backgroundColor: 'rgba(15, 15, 20, 0.8)',\n    borderRadius: '30px',\n    padding: '0.5rem 1rem',\n    display: 'flex',\n    gap: '0.5rem',\n    zIndex: 50,\n    boxShadow: '0 4px 15px rgba(0, 0, 0, 0.3)',\n    border: '1px solid rgba(191, 173, 127, 0.2)'\n  },\n  categoryButton: {\n    background: 'transparent',\n    border: 'none',\n    color: 'rgba(224, 224, 224, 0.7)',\n    padding: '0.35rem 0.75rem',\n    borderRadius: '20px',\n    fontSize: '0.85rem',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      color: '#e0e0e0',\n      backgroundColor: 'rgba(191, 173, 127, 0.1)'\n    }\n  },\n  categoryButtonActive: {\n    backgroundColor: 'rgba(191, 173, 127, 0.3)',\n    color: '#e0e0e0'\n  },\n  // Tooltip styling\n  tooltip: {\n    position: 'fixed',\n    backgroundColor: 'rgba(20, 20, 25, 0.95)',\n    border: '1px solid rgba(191, 173, 127, 0.3)',\n    borderRadius: '4px',\n    padding: '0.75rem',\n    maxWidth: '300px',\n    pointerEvents: 'none',\n    zIndex: 200,\n    boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5)'\n  },\n  // Media queries for responsive design\n  '@media (max-width: 768px)': {\n    navbar: {\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      padding: '0.75rem'\n    },\n    navControls: {\n      marginTop: '0.75rem',\n      width: '100%',\n      justifyContent: 'space-between'\n    },\n    environmentalSlidersContainer: {\n      gridTemplateColumns: '1fr'\n    }\n  }\n});\n\n// Enhanced Evolution Simulator Component\nconst EnhancedEvolutionSimulator = () => {\n  _s();\n  var _bodyShapes$find, _traitCategories$find;\n  const classes = useStyles();\n\n  // State hooks\n  const [cursorPosition, setCursorPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedBodyShape, setSelectedBodyShape] = useState('quadrupedal');\n  const [showBodyShapeMenu, setShowBodyShapeMenu] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [showCategoryMenu, setShowCategoryMenu] = useState(false);\n  const [selectedTraits, setSelectedTraits] = useState({});\n  const [showTraitMenus, setShowTraitMenus] = useState({});\n  const [viewMode, setViewMode] = useState('all');\n  const [showEnvironmentPanel, setShowEnvironmentPanel] = useState(false);\n  const [activeTab, setActiveTab] = useState('traits');\n  const [zoom, setZoom] = useState(1);\n  const [panOffset, setPanOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({\n    x: 0,\n    y: 0\n  });\n  const [hoveredElement, setHoveredElement] = useState(null);\n  const [visualizationType, setVisualizationType] = useState('direct');\n  const [showEmergenceProbabilities, setShowEmergenceProbabilities] = useState(false);\n\n  // Environment stressors state - modified to match the image\n  const [environment, setEnvironment] = useState({\n    eldritch_influence: 0.5,\n    corruption_level: 0.5,\n    resource_scarcity: 0.5,\n    ambient_magic: 0.5,\n    darkness: 0.5\n  });\n\n  // Simulation metrics state\n  const [totalEffectiveStress, setTotalEffectiveStress] = useState(0);\n  const [adaptationProbability, setAdaptationProbability] = useState(0);\n\n  // Refs\n  const canvasRef = useRef(null);\n  const containerRef = useRef(null);\n  const networkRef = useRef(null);\n  const animationFrameRef = useRef(null);\n\n  // Define body shapes data\n  const bodyShapes = [{\n    id: 'bipedal',\n    name: 'Bipedal',\n    description: 'Upright forms with manipulative upper limbs'\n  }, {\n    id: 'quadrupedal',\n    name: 'Quadrupedal',\n    description: 'Four-limbed forms optimized for stability and movement'\n  }, {\n    id: 'serpentine',\n    name: 'Serpentine',\n    description: 'Elongated, limbless forms specialized for flexibility'\n  }, {\n    id: 'amorphous',\n    name: 'Amorphous',\n    description: 'Malleable forms without fixed structure'\n  }, {\n    id: 'insectoid',\n    name: 'Multi-limbed',\n    description: 'Multi-limbed, segmented forms'\n  }, {\n    id: 'avian',\n    name: 'Avian',\n    description: 'Forms optimized for flight and aerial movement'\n  }, {\n    id: 'aquatic',\n    name: 'Aquatic',\n    description: 'Forms specialized for water environments'\n  }];\n\n  // Trait categories\n  const traitCategories = [{\n    id: 'locomotion',\n    name: 'Locomotion',\n    color: '#7D6B9E'\n  }, {\n    id: 'metabolism',\n    name: 'Metabolism',\n    color: '#5C9D8B'\n  }, {\n    id: 'sensory',\n    name: 'Sensory Acuity',\n    color: '#C99846'\n  }, {\n    id: 'etheric',\n    name: 'Etheric Adaptation',\n    color: '#B54B4B'\n  }, {\n    id: 'thermal',\n    name: 'Thermal Regulation',\n    color: '#A67C52'\n  }];\n\n  // Network Nodes - Central trait node and connected traits\n  const networkNodes = [{\n    id: 'multiple_eyes',\n    name: 'Multiple Eyes',\n    type: 'central',\n    color: '#b54b4b',\n    x: 0,\n    y: 0\n  }, {\n    id: 'necrotic_tissue',\n    name: 'Necrotic Tissue',\n    type: 'major',\n    color: '#5C8B4B',\n    x: -120,\n    y: 120\n  }, {\n    id: 'void_resonance',\n    name: 'Void Resonance',\n    type: 'major',\n    color: '#7D6B9E',\n    x: 120,\n    y: 120\n  }, {\n    id: 'parasitic_bond',\n    name: 'Parasitic Bond',\n    type: 'major',\n    color: '#A67C52',\n    x: -100,\n    y: 240\n  }, {\n    id: 'chitinous_exoskeleton',\n    name: 'Chitinous Exoskeleton',\n    type: 'major',\n    color: '#4682B4',\n    x: 100,\n    y: 240\n  }, {\n    id: 'reality_perception',\n    name: 'Reality Perception',\n    type: 'minor',\n    color: '#b54b4b',\n    x: -60,\n    y: -100\n  }, {\n    id: 'mesmerizing_gaze',\n    name: 'Mesmerizing Gaze',\n    type: 'minor',\n    color: '#b54b4b',\n    x: 60,\n    y: -100\n  }, {\n    id: 'reality_distortion',\n    name: 'Reality Distortion',\n    type: 'minor',\n    color: '#7D6B9E',\n    x: 130,\n    y: -60\n  }, {\n    id: 'void_echo',\n    name: 'Void Echo',\n    type: 'minor',\n    color: '#7D6B9E',\n    x: 180,\n    y: 120\n  }, {\n    id: 'blade_plates',\n    name: 'Blade-edged Plates',\n    type: 'minor',\n    color: '#4682B4',\n    x: 170,\n    y: 200\n  }, {\n    id: 'adaptive_chitin',\n    name: 'Adaptive Chitin',\n    type: 'minor',\n    color: '#4682B4',\n    x: 120,\n    y: 300\n  }, {\n    id: 'essence_siphon',\n    name: 'Essence Siphon',\n    type: 'minor',\n    color: '#A67C52',\n    x: -120,\n    y: 300\n  }, {\n    id: 'mind_colonization',\n    name: 'Mind Colonization',\n    type: 'minor',\n    color: '#A67C52',\n    x: -170,\n    y: 200\n  }, {\n    id: 'pestilential_miasma',\n    name: 'Pestilential Miasma',\n    type: 'minor',\n    color: '#5C8B4B',\n    x: -180,\n    y: 120\n  }, {\n    id: 'regenerative_rot',\n    name: 'Regenerative Rot',\n    type: 'minor',\n    color: '#5C8B4B',\n    x: -130,\n    y: -60\n  }, {\n    id: 'necrotic_explosion',\n    name: 'Necrotic Explosion',\n    type: 'minor',\n    color: '#5C8B4B',\n    x: -200,\n    y: -20\n  }, {\n    id: 'nightmare_manipulation',\n    name: 'Nightmare Manipulation',\n    type: 'minor',\n    color: '#7D6B9E',\n    x: 200,\n    y: -20\n  }];\n\n  // Connection data for the network\n  const networkConnections = [{\n    source: 'multiple_eyes',\n    target: 'necrotic_tissue'\n  }, {\n    source: 'multiple_eyes',\n    target: 'void_resonance'\n  }, {\n    source: 'multiple_eyes',\n    target: 'parasitic_bond'\n  }, {\n    source: 'multiple_eyes',\n    target: 'chitinous_exoskeleton'\n  }, {\n    source: 'multiple_eyes',\n    target: 'reality_perception'\n  }, {\n    source: 'multiple_eyes',\n    target: 'mesmerizing_gaze'\n  }, {\n    source: 'reality_perception',\n    target: 'regenerative_rot'\n  }, {\n    source: 'mesmerizing_gaze',\n    target: 'reality_distortion'\n  }, {\n    source: 'void_resonance',\n    target: 'void_echo'\n  }, {\n    source: 'void_resonance',\n    target: 'reality_distortion'\n  }, {\n    source: 'necrotic_tissue',\n    target: 'regenerative_rot'\n  }, {\n    source: 'necrotic_tissue',\n    target: 'pestilential_miasma'\n  }, {\n    source: 'necrotic_tissue',\n    target: 'necrotic_explosion'\n  }, {\n    source: 'parasitic_bond',\n    target: 'mind_colonization'\n  }, {\n    source: 'parasitic_bond',\n    target: 'essence_siphon'\n  }, {\n    source: 'chitinous_exoskeleton',\n    target: 'blade_plates'\n  }, {\n    source: 'chitinous_exoskeleton',\n    target: 'adaptive_chitin'\n  }, {\n    source: 'reality_distortion',\n    target: 'nightmare_manipulation'\n  }];\n\n  // Get traits based on selected body shape and category\n  const getTraitsByCategory = categoryId => {\n    const allTraits = getTraitsByBodyShape(selectedBodyShape);\n    return allTraits[categoryId] || [];\n  };\n\n  // Function to get traits based on selected body shape\n  const getTraitsByBodyShape = bodyShapeId => {\n    // Base traits for all body shapes\n    const baseTraits = {\n      locomotion: [{\n        id: 'running',\n        name: 'Swift Limbs',\n        tier: 1,\n        affinities: {\n          terrain_harshness: 0.7,\n          pressure_gravity: 0.4,\n          temperature: 0.2,\n          resource_scarcity: -0.3,\n          light_conditions: 0.1,\n          ether_density: 0\n        },\n        description: 'Limbs designed for quick locomotion across varied terrain.',\n        compatible: ['quadrupedal', 'bipedal', 'insectoid']\n      }, {\n        id: 'climbing',\n        name: 'Grasping Appendages',\n        tier: 1,\n        affinities: {\n          terrain_harshness: 0.8,\n          pressure_gravity: 0.3,\n          resource_scarcity: -0.2,\n          temperature: 0,\n          light_conditions: 0.1,\n          ether_density: 0\n        },\n        description: 'Specialized limb structures with superior grip for vertical movement.',\n        compatible: ['bipedal', 'quadrupedal', 'insectoid']\n      }, {\n        id: 'webbed',\n        name: 'Webbed Appendages',\n        tier: 1,\n        affinities: {\n          terrain_harshness: -0.4,\n          pressure_gravity: 0.1,\n          resource_scarcity: -0.1,\n          temperature: -0.2,\n          light_conditions: 0,\n          ether_density: 0\n        },\n        description: 'Limbs with membrane structures optimized for aquatic movement.',\n        compatible: ['aquatic', 'bipedal', 'quadrupedal']\n      }],\n      metabolism: [{\n        id: 'carnivore',\n        name: 'Carnivore Digestion',\n        tier: 1,\n        affinities: {\n          resource_scarcity: 0.5,\n          temperature: 0.3,\n          terrain_harshness: 0.1,\n          light_conditions: 0,\n          pressure_gravity: 0,\n          ether_density: 0\n        },\n        description: 'Specialized digestive system optimized for meat processing.',\n        compatible: ['all']\n      }, {\n        id: 'omnivore',\n        name: 'Omnivore Adaptation',\n        tier: 1,\n        affinities: {\n          resource_scarcity: 0.6,\n          terrain_harshness: 0.2,\n          temperature: 0.1,\n          light_conditions: 0,\n          pressure_gravity: 0,\n          ether_density: 0\n        },\n        description: 'Versatile digestive system capable of processing diverse food sources.',\n        compatible: ['all']\n      }],\n      sensory: [{\n        id: 'acute_vision',\n        name: 'Acute Vision',\n        tier: 1,\n        affinities: {\n          light_conditions: 0.8,\n          terrain_harshness: 0.3,\n          resource_scarcity: 0.2,\n          temperature: 0,\n          pressure_gravity: 0,\n          ether_density: 0\n        },\n        description: 'Highly developed visual organs with exceptional acuity.',\n        compatible: ['all']\n      }, {\n        id: 'sonar_mapping',\n        name: 'Echolocation',\n        tier: 1,\n        affinities: {\n          light_conditions: -0.8,\n          terrain_harshness: 0.5,\n          pressure_gravity: 0.1,\n          temperature: 0,\n          resource_scarcity: 0,\n          ether_density: 0.2\n        },\n        description: 'Ability to emit and detect sound waves for environmental mapping.',\n        compatible: ['all']\n      }],\n      etheric: [{\n        id: 'ether_sensing',\n        name: 'Ether Sensing',\n        tier: 1,\n        affinities: {\n          ether_density: 0.8,\n          light_conditions: 0.2,\n          terrain_harshness: 0,\n          temperature: 0,\n          resource_scarcity: 0,\n          pressure_gravity: 0.1\n        },\n        description: 'Specialized organs that can detect and interpret etheric energy patterns.',\n        compatible: ['all']\n      }, {\n        id: 'ether_channeling',\n        name: 'Ether Channeling',\n        tier: 1,\n        affinities: {\n          ether_density: 0.9,\n          temperature: 0.3,\n          light_conditions: 0.3,\n          terrain_harshness: 0,\n          resource_scarcity: -0.2,\n          pressure_gravity: 0.1\n        },\n        description: 'Biological structures capable of directing and manipulating etheric energies.',\n        compatible: ['all']\n      }],\n      thermal: [{\n        id: 'thick_blubber',\n        name: 'Thick Blubber',\n        tier: 1,\n        affinities: {\n          temperature: -0.8,\n          pressure_gravity: 0.3,\n          resource_scarcity: -0.4,\n          terrain_harshness: 0.1,\n          light_conditions: 0,\n          ether_density: 0\n        },\n        description: 'Dense fatty tissue layer providing insulation in cold environments.',\n        compatible: ['all']\n      }, {\n        id: 'reflective_scales',\n        name: 'Reflective Scales',\n        tier: 1,\n        affinities: {\n          temperature: 0.7,\n          light_conditions: 0.6,\n          terrain_harshness: 0.3,\n          resource_scarcity: -0.2,\n          pressure_gravity: 0,\n          ether_density: 0.1\n        },\n        description: 'Light-reflecting scales that help regulate heat absorption.',\n        compatible: ['all']\n      }]\n    };\n\n    // Add additional traits based on selected body shape\n    // This would be expanded with more traits specific to each body shape\n\n    return baseTraits;\n  };\n\n  // Initialize selected traits on body shape change\n  useEffect(() => {\n    const initialTraits = {};\n    traitCategories.forEach(category => {\n      const traits = getTraitsByCategory(category.id);\n      const compatibleTraits = traits.filter(trait => trait.compatible.includes('all') || trait.compatible.includes(selectedBodyShape));\n      if (compatibleTraits.length > 0) {\n        initialTraits[category.id] = compatibleTraits[0].id;\n      }\n    });\n    setSelectedTraits(initialTraits);\n  }, [selectedBodyShape]);\n\n  // Setup the main visualization canvas\n  useEffect(() => {\n    if (!canvasRef.current || !containerRef.current) return;\n    const canvas = canvasRef.current;\n    const container = containerRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Set up canvas dimensions\n    const updateCanvasDimensions = () => {\n      const rect = container.getBoundingClientRect();\n      canvas.width = rect.width;\n      canvas.height = rect.height;\n      networkRef.current = {\n        width: rect.width,\n        height: rect.height,\n        centerX: rect.width / 2,\n        centerY: rect.height / 2\n      };\n    };\n    updateCanvasDimensions();\n    window.addEventListener('resize', updateCanvasDimensions);\n\n    // Animation function for the network visualization\n    const animate = () => {\n      if (!networkRef.current) return;\n\n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Apply zoom and pan transformations\n      ctx.save();\n      ctx.translate(panOffset.x, panOffset.y);\n      ctx.scale(zoom, zoom);\n      const {\n        centerX,\n        centerY\n      } = networkRef.current;\n\n      // Function to calculate node positions relative to canvas center\n      const getNodePosition = node => {\n        return {\n          x: centerX + node.x,\n          y: centerY + node.y\n        };\n      };\n\n      // Draw connections between nodes\n      ctx.lineWidth = 1;\n      networkConnections.forEach(connection => {\n        const sourceNode = networkNodes.find(n => n.id === connection.source);\n        const targetNode = networkNodes.find(n => n.id === connection.target);\n        if (sourceNode && targetNode) {\n          const sourcePos = getNodePosition(sourceNode);\n          const targetPos = getNodePosition(targetNode);\n\n          // Define gradient based on node colors\n          const gradient = ctx.createLinearGradient(sourcePos.x, sourcePos.y, targetPos.x, targetPos.y);\n          gradient.addColorStop(0, sourceNode.color);\n          gradient.addColorStop(1, targetNode.color);\n\n          // Draw connection line\n          ctx.beginPath();\n          ctx.moveTo(sourcePos.x, sourcePos.y);\n\n          // Create curved connections for better visibility\n          const midX = (sourcePos.x + targetPos.x) / 2;\n          const midY = (sourcePos.y + targetPos.y) / 2;\n          const curveOffset = 20;\n\n          // Add slight curve to connections for aesthetics\n          const dx = targetPos.x - sourcePos.x;\n          const dy = targetPos.y - sourcePos.y;\n          const normalX = -dy / Math.sqrt(dx * dx + dy * dy);\n          const normalY = dx / Math.sqrt(dx * dx + dy * dy);\n          const controlX = midX + normalX * curveOffset;\n          const controlY = midY + normalY * curveOffset;\n          ctx.quadraticCurveTo(controlX, controlY, targetPos.x, targetPos.y);\n          ctx.strokeStyle = gradient;\n          ctx.globalAlpha = 0.7;\n          ctx.stroke();\n          ctx.globalAlpha = 1;\n        }\n      });\n\n      // Draw nodes\n      networkNodes.forEach(node => {\n        const pos = getNodePosition(node);\n        const radius = node.type === 'central' ? 40 : node.type === 'major' ? 30 : 20;\n\n        // Draw node background\n        ctx.beginPath();\n        ctx.arc(pos.x, pos.y, radius, 0, Math.PI * 2);\n        ctx.fillStyle = node.color;\n        ctx.fill();\n\n        // Draw node border\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = '#000';\n        ctx.stroke();\n\n        // Add inner circle for central and major nodes\n        if (node.type === 'central' || node.type === 'major') {\n          ctx.beginPath();\n          ctx.arc(pos.x, pos.y, radius * 0.7, 0, Math.PI * 2);\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = '#000';\n          ctx.stroke();\n        }\n\n        // Add node labels (not directly on the nodes, but next to them)\n        ctx.font = node.type === 'central' ? 'bold 14px Arial' : '12px Arial';\n        ctx.fillStyle = '#fff';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n\n        // Position labels based on node position relative to center\n        let textX = pos.x;\n        let textY = pos.y;\n\n        // Adjust label position based on node position\n        if (node.y < -50) {\n          // Top nodes\n          textY = pos.y - radius - 10;\n        } else if (node.y > 50) {\n          // Bottom nodes\n          textY = pos.y + radius + 10;\n        } else if (node.x < 0) {\n          // Left nodes\n          textX = pos.x - radius - 10;\n          ctx.textAlign = 'right';\n        } else if (node.x > 0) {\n          // Right nodes\n          textX = pos.x + radius + 10;\n          ctx.textAlign = 'left';\n        }\n\n        // Add text stroke for better visibility\n        ctx.strokeStyle = 'rgba(0, 0, 0, 0.8)';\n        ctx.lineWidth = 3;\n        ctx.strokeText(node.name, textX, textY);\n        ctx.fillText(node.name, textX, textY);\n      });\n      ctx.restore();\n\n      // Continue animation\n      animationFrameRef.current = requestAnimationFrame(animate);\n    };\n\n    // Start animation loop\n    animate();\n\n    // Set loaded after a delay\n    const timer = setTimeout(() => {\n      setIsLoaded(true);\n    }, 1000);\n\n    // Cleanup on unmount\n    return () => {\n      window.removeEventListener('resize', updateCanvasDimensions);\n      clearTimeout(timer);\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [visualizationType, zoom, panOffset, showEmergenceProbabilities]);\n\n  // Calculate stress and adaptation probability when environment changes\n  useEffect(() => {\n    // Using simplified stress calculation\n    const stressFromEnvironment = Object.values(environment).reduce((sum, value) => sum + Math.abs(value), 0) / 5;\n    setTotalEffectiveStress(stressFromEnvironment);\n\n    // Simplified adaptation probability calculation\n    const probability = 1 / (1 + Math.exp(-10 * (stressFromEnvironment - 0.5)));\n    setAdaptationProbability(probability);\n  }, [environment, selectedBodyShape, selectedTraits]);\n\n  // Handle mouse move for background effect\n  const handleMouseMove = e => {\n    setCursorPosition({\n      x: e.clientX,\n      y: e.clientY\n    });\n\n    // Handle dragging\n    if (isDragging) {\n      const dx = e.clientX - dragStart.x;\n      const dy = e.clientY - dragStart.y;\n      setPanOffset({\n        x: panOffset.x + dx,\n        y: panOffset.y + dy\n      });\n      setDragStart({\n        x: e.clientX,\n        y: e.clientY\n      });\n    }\n  };\n\n  // Handle mouse down for drag start\n  const handleMouseDown = e => {\n    setIsDragging(true);\n    setDragStart({\n      x: e.clientX,\n      y: e.clientY\n    });\n\n    // Change cursor style\n    if (containerRef.current) {\n      containerRef.current.style.cursor = 'grabbing';\n    }\n  };\n\n  // Handle mouse up for drag end\n  const handleMouseUp = () => {\n    setIsDragging(false);\n\n    // Reset cursor style\n    if (containerRef.current) {\n      containerRef.current.style.cursor = 'grab';\n    }\n  };\n\n  // Handle mouse wheel for zoom\n  const handleWheel = e => {\n    e.preventDefault();\n    const zoomFactor = 0.1;\n    const newZoom = e.deltaY < 0 ? Math.min(zoom + zoomFactor, 3) : Math.max(zoom - zoomFactor, 0.5);\n    setZoom(newZoom);\n  };\n\n  // Update environmental stressor\n  const handleEnvironmentChange = (stressor, value) => {\n    setEnvironment(prev => ({\n      ...prev,\n      [stressor]: parseFloat(value)\n    }));\n  };\n\n  // Handle body shape selection\n  const handleBodyShapeSelect = shapeId => {\n    setSelectedBodyShape(shapeId);\n    setShowBodyShapeMenu(false);\n  };\n\n  // Handle trait selection\n  const handleTraitSelect = (categoryId, traitId) => {\n    setSelectedTraits(prev => ({\n      ...prev,\n      [categoryId]: traitId\n    }));\n    setShowTraitMenus(prev => ({\n      ...prev,\n      [categoryId]: false\n    }));\n  };\n\n  // Toggle trait menu visibility\n  const handleTraitMenuToggle = categoryId => {\n    setShowTraitMenus(prev => ({\n      ...prev,\n      [categoryId]: !prev[categoryId]\n    }));\n\n    // Close other menus\n    setShowBodyShapeMenu(false);\n    setShowCategoryMenu(false);\n    Object.keys(showTraitMenus).forEach(key => {\n      if (key !== categoryId) {\n        setShowTraitMenus(prev => ({\n          ...prev,\n          [key]: false\n        }));\n      }\n    });\n  };\n\n  // Reset view\n  const handleResetView = () => {\n    setZoom(1);\n    setPanOffset({\n      x: 0,\n      y: 0\n    });\n  };\n\n  // Get selected trait name\n  const getSelectedTraitName = categoryId => {\n    const traitId = selectedTraits[categoryId];\n    if (!traitId) return 'Select...';\n    const traits = getTraitsByCategory(categoryId);\n    const trait = traits.find(t => t.id === traitId);\n    return trait ? trait.name : 'Select...';\n  };\n\n  // Render dropdown menu\n  const renderDropdownMenu = (isOpen, title, items, selectedId, onSelect, renderItem) => {\n    if (!isOpen) return null;\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      className: classes.dropdownContent,\n      initial: {\n        opacity: 0,\n        y: -10\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      exit: {\n        opacity: 0,\n        y: -10\n      },\n      transition: {\n        duration: 0.2\n      },\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `\n              ${classes.menuItem} \n              ${item.id === selectedId ? classes.menuItemActive : ''}\n            `,\n        onClick: () => onSelect(item.id),\n        children: renderItem ? renderItem(item) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.menuItemTitle,\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 998,\n            columnNumber: 17\n          }, this), item.description && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.menuItemDescription,\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1000,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 988,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 980,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render environmental slider\n  const renderEnvironmentalSlider = (stressor, label) => {\n    const value = environment[stressor];\n    const percentage = value * 100;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.environmentSlider,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.sliderLabel,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1018,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.sliderValue,\n          children: value.toFixed(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1019,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1017,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.sliderTrack,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.1\",\n          value: value,\n          onChange: e => handleEnvironmentChange(stressor, e.target.value),\n          style: {\n            width: '100%',\n            position: 'absolute',\n            opacity: 0,\n            height: '100%',\n            cursor: 'pointer'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.sliderThumb,\n          style: {\n            left: `${percentage}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1021,\n        columnNumber: 9\n      }, this)]\n    }, stressor, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1016,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.evolutionSimulator,\n    onMouseMove: handleMouseMove,\n    children: [/*#__PURE__*/_jsxDEV(Background, {\n      cursorPosition: cursorPosition,\n      setCursorPosition: setCursorPosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1052,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeteorShower, {\n      height: \"100vh\",\n      zIndex: 2,\n      trailColor: \"rgba(191, 173, 127, 0.8)\",\n      glowColor: \"rgba(207, 185, 130, 0.6)\",\n      coreColor: \"rgba(255, 248, 220, 1)\",\n      meteorDensity: 15,\n      meteorMinSize: 1,\n      meteorMaxSize: 2,\n      meteorSpeed: 0.08,\n      trailLength: 300,\n      trailSegments: 80,\n      enableParallax: true,\n      parallaxIntensity: 0.15,\n      mode: \"arc\",\n      staggered: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1054,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.navbar,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: classes.title,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.logoIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1075,\n          columnNumber: 11\n        }, this), \"Crescent Evolution System\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1074,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.navControls,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.dropdown,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.dropdownButton,\n            onClick: () => {\n              setShowBodyShapeMenu(!showBodyShapeMenu);\n              setShowCategoryMenu(false);\n              setShowTraitMenus({});\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Body Shape: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1090,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: ((_bodyShapes$find = bodyShapes.find(shape => shape.id === selectedBodyShape)) === null || _bodyShapes$find === void 0 ? void 0 : _bodyShapes$find.name) || 'Select...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1091,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '0.8rem',\n                marginLeft: '4px'\n              },\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1094,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1082,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n            children: renderDropdownMenu(showBodyShapeMenu, 'Select Body Shape', bodyShapes, selectedBodyShape, handleBodyShapeSelect)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1097,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1081,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.dropdown,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.dropdownButton,\n            onClick: () => {\n              setShowCategoryMenu(!showCategoryMenu);\n              setShowBodyShapeMenu(false);\n              setShowTraitMenus({});\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Filter: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: selectedCategory ? (_traitCategories$find = traitCategories.find(cat => cat.id === selectedCategory)) === null || _traitCategories$find === void 0 ? void 0 : _traitCategories$find.name : 'All Categories'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '0.8rem',\n                marginLeft: '4px'\n              },\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n            children: renderDropdownMenu(showCategoryMenu, 'Filter by Category', [{\n              id: null,\n              name: 'All Categories'\n            }, ...traitCategories], selectedCategory, categoryId => {\n              setSelectedCategory(categoryId);\n              setShowCategoryMenu(false);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1109,\n          columnNumber: 11\n        }, this), activeTab === 'traits' && traitCategories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.dropdown,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.dropdownButton,\n            style: {\n              borderColor: `${category.color}50`\n            },\n            onClick: () => handleTraitMenuToggle(category.id),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [category.name, \": \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: getSelectedTraitName(category.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '0.8rem',\n                marginLeft: '4px'\n              },\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1153,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n            children: renderDropdownMenu(showTraitMenus[category.id], `Select ${category.name} Trait`, getTraitsByCategory(category.id).filter(trait => trait.compatible.includes('all') || trait.compatible.includes(selectedBodyShape)), selectedTraits[category.id], traitId => handleTraitSelect(category.id, traitId), trait => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.menuItemTitle,\n                children: trait.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1167,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.menuItemDescription,\n                children: trait.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1168,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1156,\n            columnNumber: 15\n          }, this)]\n        }, category.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1143,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1079,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.navTabs,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${classes.navTab} ${activeTab === 'traits' ? classes.navTabActive : ''}`,\n          onClick: () => setActiveTab('traits'),\n          children: \"Traits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${classes.navTab} ${activeTab === 'environment' ? classes.navTabActive : ''}`,\n          onClick: () => setActiveTab('environment'),\n          children: \"Environment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${classes.navTab} ${activeTab === 'synthesis' ? classes.navTabActive : ''}`,\n          onClick: () => setActiveTab('synthesis'),\n          children: \"Synthesis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.viewControls,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.viewButton,\n          onClick: () => setZoom(Math.min(zoom + 0.1, 3)),\n          title: \"Zoom In\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.viewButton,\n          onClick: () => setZoom(Math.max(zoom - 0.1, 0.5)),\n          title: \"Zoom Out\",\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.viewButton,\n          onClick: handleResetView,\n          title: \"Reset View\",\n          children: \"\\u21BB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1073,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.contentContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: classes.sectionHeading,\n          children: \"Network Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.visualizationControls,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${classes.controlButton} ${visualizationType === 'direct' ? classes.activeControlButton : ''}`,\n            onClick: () => setVisualizationType('direct'),\n            children: \"Direct Connections\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${classes.controlButton} ${visualizationType === 'evolutionary' ? classes.activeControlButton : ''}`,\n            onClick: () => setVisualizationType('evolutionary'),\n            children: \"Evolutionary Tree\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${classes.controlButton} ${visualizationType === 'category' ? classes.activeControlButton : ''}`,\n            onClick: () => setVisualizationType('category'),\n            children: \"Trait Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: containerRef,\n          className: classes.visualizationContainer,\n          onMouseDown: handleMouseDown,\n          onMouseUp: handleMouseUp,\n          onMouseLeave: handleMouseUp,\n          onWheel: handleWheel,\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            className: classes.networkCanvas\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1261,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.traitProbabilitiesContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: classes.sectionHeading,\n          children: \"Trait Probabilities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.emergenceProbabilitiesButton,\n          onClick: () => setShowEmergenceProbabilities(!showEmergenceProbabilities),\n          children: \"Show Emergence Probabilities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.environmentalConditions,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: classes.sectionHeading,\n          children: \"Environmental Conditions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.environmentalSlidersContainer,\n          children: [renderEnvironmentalSlider('eldritch_influence', 'Eldritch Influence'), renderEnvironmentalSlider('corruption_level', 'Corruption Level'), renderEnvironmentalSlider('resource_scarcity', 'Resource Scarcity'), renderEnvironmentalSlider('ambient_magic', 'Ambient Magic'), renderEnvironmentalSlider('darkness', 'Darkness')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1047,\n    columnNumber: 5\n  }, this);\n};\n_s(EnhancedEvolutionSimulator, \"5amKegEEeI0rB5UD2dk4TaNpnOM=\", false, function () {\n  return [useStyles];\n});\n_c = EnhancedEvolutionSimulator;\nexport default EnhancedEvolutionSimulator;\nvar _c;\n$RefreshReg$(_c, \"EnhancedEvolutionSimulator\");","map":{"version":3,"names":["React","useState","useEffect","useRef","motion","AnimatePresence","Background","MeteorShower","RevealText","createUseStyles","jsxDEV","_jsxDEV","Fragment","_Fragment","useStyles","evolutionSimulator","position","width","height","overflow","color","fontFamily","display","flexDirection","background","navbar","backgroundColor","borderBottom","padding","zIndex","flexWrap","justifyContent","alignItems","boxShadow","title","fontSize","margin","fontWeight","letterSpacing","textShadow","gap","logoIcon","borderRadius","navControls","dropdown","marginRight","dropdownButton","border","cursor","transition","borderColor","dropdownContent","top","left","minWidth","maxHeight","overflowY","menuItem","menuItemActive","menuItemTitle","menuItemDescription","marginTop","contentContainer","flex","sectionHeading","marginBottom","visualizationControls","controlButton","activeControlButton","traitProbabilitiesContainer","emergenceProbabilitiesButton","environmentalConditions","environmentalSlidersContainer","gridTemplateColumns","environmentSlider","sliderLabel","sliderValue","sliderTrack","sliderThumb","transform","visualizationContainer","networkCanvas","navTabs","marginLeft","navTab","borderBottomColor","navTabActive","viewControls","viewButton","categoryFilters","bottom","categoryButton","categoryButtonActive","tooltip","maxWidth","pointerEvents","EnhancedEvolutionSimulator","_s","_bodyShapes$find","_traitCategories$find","classes","cursorPosition","setCursorPosition","x","y","isLoaded","setIsLoaded","selectedBodyShape","setSelectedBodyShape","showBodyShapeMenu","setShowBodyShapeMenu","selectedCategory","setSelectedCategory","showCategoryMenu","setShowCategoryMenu","selectedTraits","setSelectedTraits","showTraitMenus","setShowTraitMenus","viewMode","setViewMode","showEnvironmentPanel","setShowEnvironmentPanel","activeTab","setActiveTab","zoom","setZoom","panOffset","setPanOffset","isDragging","setIsDragging","dragStart","setDragStart","hoveredElement","setHoveredElement","visualizationType","setVisualizationType","showEmergenceProbabilities","setShowEmergenceProbabilities","environment","setEnvironment","eldritch_influence","corruption_level","resource_scarcity","ambient_magic","darkness","totalEffectiveStress","setTotalEffectiveStress","adaptationProbability","setAdaptationProbability","canvasRef","containerRef","networkRef","animationFrameRef","bodyShapes","id","name","description","traitCategories","networkNodes","type","networkConnections","source","target","getTraitsByCategory","categoryId","allTraits","getTraitsByBodyShape","bodyShapeId","baseTraits","locomotion","tier","affinities","terrain_harshness","pressure_gravity","temperature","light_conditions","ether_density","compatible","metabolism","sensory","etheric","thermal","initialTraits","forEach","category","traits","compatibleTraits","filter","trait","includes","length","current","canvas","container","ctx","getContext","updateCanvasDimensions","rect","getBoundingClientRect","centerX","centerY","window","addEventListener","animate","clearRect","save","translate","scale","getNodePosition","node","lineWidth","connection","sourceNode","find","n","targetNode","sourcePos","targetPos","gradient","createLinearGradient","addColorStop","beginPath","moveTo","midX","midY","curveOffset","dx","dy","normalX","Math","sqrt","normalY","controlX","controlY","quadraticCurveTo","strokeStyle","globalAlpha","stroke","pos","radius","arc","PI","fillStyle","fill","font","textAlign","textBaseline","textX","textY","strokeText","fillText","restore","requestAnimationFrame","timer","setTimeout","removeEventListener","clearTimeout","cancelAnimationFrame","stressFromEnvironment","Object","values","reduce","sum","value","abs","probability","exp","handleMouseMove","e","clientX","clientY","handleMouseDown","style","handleMouseUp","handleWheel","preventDefault","zoomFactor","newZoom","deltaY","min","max","handleEnvironmentChange","stressor","prev","parseFloat","handleBodyShapeSelect","shapeId","handleTraitSelect","traitId","handleTraitMenuToggle","keys","key","handleResetView","getSelectedTraitName","t","renderDropdownMenu","isOpen","items","selectedId","onSelect","renderItem","div","className","initial","opacity","exit","duration","children","map","item","onClick","fileName","_jsxFileName","lineNumber","columnNumber","renderEnvironmentalSlider","label","percentage","toFixed","step","onChange","onMouseMove","trailColor","glowColor","coreColor","meteorDensity","meteorMinSize","meteorMaxSize","meteorSpeed","trailLength","trailSegments","enableParallax","parallaxIntensity","mode","staggered","shape","cat","ref","onMouseDown","onMouseUp","onMouseLeave","onWheel","_c","$RefreshReg$"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/sections/codex/creators/creatorshowcase/EvolutionSimulatorConceptShowcase.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport Background from '../../../../core/Background';\nimport MeteorShower from '../../../../core/effects/cosmiceffects/MeteorShower';\nimport RevealText from '../../../../core/effects/RevealText';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  // Main container and layout\n  evolutionSimulator: {\n    position: 'relative',\n    width: '100%',\n    height: '100vh',\n    overflow: 'hidden',\n    color: '#e0e0e0',\n    fontFamily: '\"Garamond\", \"Adobe Caslon Pro\", serif',\n    display: 'flex',\n    flexDirection: 'column',\n    background: '#0a0a0f'\n  },\n  \n  // Enhanced Navbar\n  navbar: {\n    position: 'relative',\n    width: '100%',\n    backgroundColor: 'rgba(15, 15, 20, 0.85)',\n    borderBottom: '1px solid rgba(191, 173, 127, 0.4)',\n    padding: '0.5rem 1rem',\n    zIndex: 100,\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    boxShadow: '0 4px 15px rgba(0, 0, 0, 0.3)'\n  },\n  title: {\n    color: '#bfad7f',\n    fontSize: '1.5rem',\n    margin: 0,\n    fontWeight: 300,\n    letterSpacing: '0.05em',\n    textShadow: '0 2px 5px rgba(0, 0, 0, 0.5)',\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.5rem'\n  },\n  logoIcon: {\n    width: '24px',\n    height: '24px',\n    borderRadius: '50%',\n    background: 'linear-gradient(135deg, #bfad7f 0%, #7D6B9E 100%)',\n    display: 'inline-block'\n  },\n  \n  // Navigation Elements\n  navControls: {\n    display: 'flex',\n    gap: '1rem',\n    alignItems: 'center',\n    flexWrap: 'wrap'\n  },\n  dropdown: {\n    position: 'relative',\n    marginRight: '0.5rem'\n  },\n  dropdownButton: {\n    backgroundColor: 'rgba(30, 30, 40, 0.6)',\n    border: '1px solid rgba(191, 173, 127, 0.3)',\n    color: '#e0e0e0',\n    padding: '0.4rem 0.8rem',\n    borderRadius: '4px',\n    fontFamily: 'inherit',\n    fontSize: '0.9rem',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.5rem',\n    '&:hover': {\n      backgroundColor: 'rgba(191, 173, 127, 0.2)',\n      borderColor: 'rgba(191, 173, 127, 0.6)'\n    }\n  },\n  dropdownContent: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    backgroundColor: 'rgba(20, 20, 25, 0.95)',\n    minWidth: '200px',\n    maxHeight: '70vh',\n    overflowY: 'auto',\n    borderRadius: '4px',\n    padding: '0.5rem',\n    boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5)',\n    zIndex: 101,\n    border: '1px solid rgba(191, 173, 127, 0.3)'\n  },\n  menuItem: {\n    padding: '0.5rem 0.75rem',\n    cursor: 'pointer',\n    borderRadius: '3px',\n    transition: 'all 0.15s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(191, 173, 127, 0.2)'\n    }\n  },\n  menuItemActive: {\n    backgroundColor: 'rgba(191, 173, 127, 0.3)',\n    fontWeight: 'bold'\n  },\n  menuItemTitle: {\n    fontSize: '0.95rem',\n    color: '#bfad7f'\n  },\n  menuItemDescription: {\n    fontSize: '0.8rem',\n    color: 'rgba(224, 224, 224, 0.7)',\n    marginTop: '0.25rem'\n  },\n  \n  // Main content area\n  contentContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '1.5rem',\n    flex: 1,\n    overflow: 'auto',\n    gap: '1.5rem'\n  },\n  \n  // Section Headings\n  sectionHeading: {\n    color: '#b54b4b', // Dark reddish color as shown in the image\n    fontSize: '1.2rem',\n    marginBottom: '1rem',\n    fontWeight: 'normal'\n  },\n  \n  // Network Visualization Controls\n  visualizationControls: {\n    display: 'flex',\n    gap: '1rem',\n    marginBottom: '1rem'\n  },\n  controlButton: {\n    backgroundColor: 'rgba(20, 20, 25, 0.7)',\n    border: '1px solid rgba(181, 75, 75, 0.5)',\n    borderRadius: '4px',\n    color: '#e0e0e0',\n    padding: '0.6rem 1.5rem',\n    fontFamily: 'inherit',\n    fontSize: '0.9rem',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(181, 75, 75, 0.2)',\n      borderColor: 'rgba(181, 75, 75, 0.7)'\n    }\n  },\n  activeControlButton: {\n    backgroundColor: 'rgba(181, 75, 75, 0.3)',\n    borderColor: 'rgba(181, 75, 75, 0.8)'\n  },\n  \n  // Trait probability controls\n  traitProbabilitiesContainer: {\n    marginBottom: '1.5rem'\n  },\n  emergenceProbabilitiesButton: {\n    backgroundColor: 'rgba(20, 20, 25, 0.7)',\n    border: '1px solid rgba(181, 75, 75, 0.5)',\n    borderRadius: '4px',\n    color: '#e0e0e0',\n    padding: '0.6rem 1.5rem',\n    fontFamily: 'inherit',\n    fontSize: '0.9rem',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(181, 75, 75, 0.2)',\n      borderColor: 'rgba(181, 75, 75, 0.7)'\n    }\n  },\n  \n  // Environmental conditions\n  environmentalConditions: {\n    marginBottom: '1.5rem'\n  },\n  environmentalSlidersContainer: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\n    gap: '1rem'\n  },\n  environmentSlider: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '0.35rem'\n  },\n  sliderLabel: {\n    fontSize: '0.9rem',\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  sliderValue: {\n    color: '#bfad7f'\n  },\n  sliderTrack: {\n    width: '100%',\n    height: '4px',\n    backgroundColor: '#333',\n    borderRadius: '2px',\n    position: 'relative'\n  },\n  sliderThumb: {\n    width: '14px',\n    height: '14px',\n    borderRadius: '50%',\n    backgroundColor: '#b54b4b',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translate(-50%, -50%)',\n    cursor: 'pointer'\n  },\n  \n  // Network visualization area\n  visualizationContainer: {\n    position: 'relative',\n    height: '500px',\n    backgroundColor: 'rgba(20, 20, 25, 0.4)',\n    borderRadius: '6px',\n    overflow: 'hidden',\n    border: '1px solid rgba(181, 75, 75, 0.3)',\n    marginBottom: '1.5rem',\n    cursor: 'grab',\n    '&:active': {\n      cursor: 'grabbing'\n    }\n  },\n  networkCanvas: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%'\n  },\n  \n  // Tabs for different controls\n  navTabs: {\n    display: 'flex',\n    gap: '0.25rem',\n    marginLeft: 'auto'\n  },\n  navTab: {\n    padding: '0.4rem 0.8rem',\n    backgroundColor: 'transparent',\n    border: 'none',\n    borderBottom: '2px solid transparent',\n    color: 'rgba(224, 224, 224, 0.7)',\n    cursor: 'pointer',\n    fontSize: '0.9rem',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      color: '#bfad7f',\n      borderBottomColor: 'rgba(191, 173, 127, 0.3)'\n    }\n  },\n  navTabActive: {\n    color: '#bfad7f',\n    borderBottomColor: '#bfad7f'\n  },\n  \n  // View controls\n  viewControls: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.75rem'\n  },\n  viewButton: {\n    backgroundColor: 'rgba(30, 30, 40, 0.6)',\n    border: '1px solid rgba(191, 173, 127, 0.3)',\n    color: '#e0e0e0',\n    width: '32px',\n    height: '32px',\n    borderRadius: '4px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(191, 173, 127, 0.2)',\n      borderColor: 'rgba(191, 173, 127, 0.6)'\n    }\n  },\n  \n  // Category filters\n  categoryFilters: {\n    position: 'absolute',\n    bottom: '1rem',\n    left: '50%',\n    transform: 'translateX(-50%)',\n    backgroundColor: 'rgba(15, 15, 20, 0.8)',\n    borderRadius: '30px',\n    padding: '0.5rem 1rem',\n    display: 'flex',\n    gap: '0.5rem',\n    zIndex: 50,\n    boxShadow: '0 4px 15px rgba(0, 0, 0, 0.3)',\n    border: '1px solid rgba(191, 173, 127, 0.2)'\n  },\n  categoryButton: {\n    background: 'transparent',\n    border: 'none',\n    color: 'rgba(224, 224, 224, 0.7)',\n    padding: '0.35rem 0.75rem',\n    borderRadius: '20px',\n    fontSize: '0.85rem',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      color: '#e0e0e0',\n      backgroundColor: 'rgba(191, 173, 127, 0.1)'\n    }\n  },\n  categoryButtonActive: {\n    backgroundColor: 'rgba(191, 173, 127, 0.3)',\n    color: '#e0e0e0'\n  },\n  \n  // Tooltip styling\n  tooltip: {\n    position: 'fixed',\n    backgroundColor: 'rgba(20, 20, 25, 0.95)',\n    border: '1px solid rgba(191, 173, 127, 0.3)',\n    borderRadius: '4px',\n    padding: '0.75rem',\n    maxWidth: '300px',\n    pointerEvents: 'none',\n    zIndex: 200,\n    boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5)'\n  },\n  \n  // Media queries for responsive design\n  '@media (max-width: 768px)': {\n    navbar: {\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      padding: '0.75rem'\n    },\n    navControls: {\n      marginTop: '0.75rem',\n      width: '100%',\n      justifyContent: 'space-between'\n    },\n    environmentalSlidersContainer: {\n      gridTemplateColumns: '1fr'\n    }\n  }\n});\n\n// Enhanced Evolution Simulator Component\nconst EnhancedEvolutionSimulator = () => {\n  const classes = useStyles();\n  \n  // State hooks\n  const [cursorPosition, setCursorPosition] = useState({ x: 0, y: 0 });\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedBodyShape, setSelectedBodyShape] = useState('quadrupedal');\n  const [showBodyShapeMenu, setShowBodyShapeMenu] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [showCategoryMenu, setShowCategoryMenu] = useState(false);\n  const [selectedTraits, setSelectedTraits] = useState({});\n  const [showTraitMenus, setShowTraitMenus] = useState({});\n  const [viewMode, setViewMode] = useState('all');\n  const [showEnvironmentPanel, setShowEnvironmentPanel] = useState(false);\n  const [activeTab, setActiveTab] = useState('traits');\n  const [zoom, setZoom] = useState(1);\n  const [panOffset, setPanOffset] = useState({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n  const [hoveredElement, setHoveredElement] = useState(null);\n  const [visualizationType, setVisualizationType] = useState('direct');\n  const [showEmergenceProbabilities, setShowEmergenceProbabilities] = useState(false);\n  \n  // Environment stressors state - modified to match the image\n  const [environment, setEnvironment] = useState({\n    eldritch_influence: 0.5,\n    corruption_level: 0.5,\n    resource_scarcity: 0.5,\n    ambient_magic: 0.5,\n    darkness: 0.5\n  });\n  \n  // Simulation metrics state\n  const [totalEffectiveStress, setTotalEffectiveStress] = useState(0);\n  const [adaptationProbability, setAdaptationProbability] = useState(0);\n  \n  // Refs\n  const canvasRef = useRef(null);\n  const containerRef = useRef(null);\n  const networkRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  \n  // Define body shapes data\n  const bodyShapes = [\n    { id: 'bipedal', name: 'Bipedal', description: 'Upright forms with manipulative upper limbs' },\n    { id: 'quadrupedal', name: 'Quadrupedal', description: 'Four-limbed forms optimized for stability and movement' },\n    { id: 'serpentine', name: 'Serpentine', description: 'Elongated, limbless forms specialized for flexibility' },\n    { id: 'amorphous', name: 'Amorphous', description: 'Malleable forms without fixed structure' },\n    { id: 'insectoid', name: 'Multi-limbed', description: 'Multi-limbed, segmented forms' },\n    { id: 'avian', name: 'Avian', description: 'Forms optimized for flight and aerial movement' },\n    { id: 'aquatic', name: 'Aquatic', description: 'Forms specialized for water environments' }\n  ];\n\n  // Trait categories\n  const traitCategories = [\n    { id: 'locomotion', name: 'Locomotion', color: '#7D6B9E' },\n    { id: 'metabolism', name: 'Metabolism', color: '#5C9D8B' },\n    { id: 'sensory', name: 'Sensory Acuity', color: '#C99846' },\n    { id: 'etheric', name: 'Etheric Adaptation', color: '#B54B4B' },\n    { id: 'thermal', name: 'Thermal Regulation', color: '#A67C52' }\n  ];\n  \n  // Network Nodes - Central trait node and connected traits\n  const networkNodes = [\n    { id: 'multiple_eyes', name: 'Multiple Eyes', type: 'central', color: '#b54b4b', x: 0, y: 0 },\n    { id: 'necrotic_tissue', name: 'Necrotic Tissue', type: 'major', color: '#5C8B4B', x: -120, y: 120 },\n    { id: 'void_resonance', name: 'Void Resonance', type: 'major', color: '#7D6B9E', x: 120, y: 120 },\n    { id: 'parasitic_bond', name: 'Parasitic Bond', type: 'major', color: '#A67C52', x: -100, y: 240 },\n    { id: 'chitinous_exoskeleton', name: 'Chitinous Exoskeleton', type: 'major', color: '#4682B4', x: 100, y: 240 },\n    \n    { id: 'reality_perception', name: 'Reality Perception', type: 'minor', color: '#b54b4b', x: -60, y: -100 },\n    { id: 'mesmerizing_gaze', name: 'Mesmerizing Gaze', type: 'minor', color: '#b54b4b', x: 60, y: -100 },\n    { id: 'reality_distortion', name: 'Reality Distortion', type: 'minor', color: '#7D6B9E', x: 130, y: -60 },\n    { id: 'void_echo', name: 'Void Echo', type: 'minor', color: '#7D6B9E', x: 180, y: 120 },\n    { id: 'blade_plates', name: 'Blade-edged Plates', type: 'minor', color: '#4682B4', x: 170, y: 200 },\n    { id: 'adaptive_chitin', name: 'Adaptive Chitin', type: 'minor', color: '#4682B4', x: 120, y: 300 },\n    { id: 'essence_siphon', name: 'Essence Siphon', type: 'minor', color: '#A67C52', x: -120, y: 300 },\n    { id: 'mind_colonization', name: 'Mind Colonization', type: 'minor', color: '#A67C52', x: -170, y: 200 },\n    { id: 'pestilential_miasma', name: 'Pestilential Miasma', type: 'minor', color: '#5C8B4B', x: -180, y: 120 },\n    { id: 'regenerative_rot', name: 'Regenerative Rot', type: 'minor', color: '#5C8B4B', x: -130, y: -60 },\n    { id: 'necrotic_explosion', name: 'Necrotic Explosion', type: 'minor', color: '#5C8B4B', x: -200, y: -20 },\n    { id: 'nightmare_manipulation', name: 'Nightmare Manipulation', type: 'minor', color: '#7D6B9E', x: 200, y: -20 }\n  ];\n  \n  // Connection data for the network\n  const networkConnections = [\n    { source: 'multiple_eyes', target: 'necrotic_tissue' },\n    { source: 'multiple_eyes', target: 'void_resonance' },\n    { source: 'multiple_eyes', target: 'parasitic_bond' },\n    { source: 'multiple_eyes', target: 'chitinous_exoskeleton' },\n    { source: 'multiple_eyes', target: 'reality_perception' },\n    { source: 'multiple_eyes', target: 'mesmerizing_gaze' },\n    \n    { source: 'reality_perception', target: 'regenerative_rot' },\n    { source: 'mesmerizing_gaze', target: 'reality_distortion' },\n    { source: 'void_resonance', target: 'void_echo' },\n    { source: 'void_resonance', target: 'reality_distortion' },\n    { source: 'necrotic_tissue', target: 'regenerative_rot' },\n    { source: 'necrotic_tissue', target: 'pestilential_miasma' },\n    { source: 'necrotic_tissue', target: 'necrotic_explosion' },\n    { source: 'parasitic_bond', target: 'mind_colonization' },\n    { source: 'parasitic_bond', target: 'essence_siphon' },\n    { source: 'chitinous_exoskeleton', target: 'blade_plates' },\n    { source: 'chitinous_exoskeleton', target: 'adaptive_chitin' },\n    { source: 'reality_distortion', target: 'nightmare_manipulation' }\n  ];\n  \n  // Get traits based on selected body shape and category\n  const getTraitsByCategory = (categoryId) => {\n    const allTraits = getTraitsByBodyShape(selectedBodyShape);\n    return allTraits[categoryId] || [];\n  };\n  \n  // Function to get traits based on selected body shape\n  const getTraitsByBodyShape = (bodyShapeId) => {\n    // Base traits for all body shapes\n    const baseTraits = {\n      locomotion: [\n        {\n          id: 'running',\n          name: 'Swift Limbs',\n          tier: 1,\n          affinities: {\n            terrain_harshness: 0.7,\n            pressure_gravity: 0.4,\n            temperature: 0.2,\n            resource_scarcity: -0.3,\n            light_conditions: 0.1,\n            ether_density: 0\n          },\n          description: 'Limbs designed for quick locomotion across varied terrain.',\n          compatible: ['quadrupedal', 'bipedal', 'insectoid']\n        },\n        {\n          id: 'climbing',\n          name: 'Grasping Appendages',\n          tier: 1,\n          affinities: {\n            terrain_harshness: 0.8,\n            pressure_gravity: 0.3,\n            resource_scarcity: -0.2,\n            temperature: 0,\n            light_conditions: 0.1,\n            ether_density: 0\n          },\n          description: 'Specialized limb structures with superior grip for vertical movement.',\n          compatible: ['bipedal', 'quadrupedal', 'insectoid']\n        },\n        {\n          id: 'webbed',\n          name: 'Webbed Appendages',\n          tier: 1,\n          affinities: {\n            terrain_harshness: -0.4,\n            pressure_gravity: 0.1,\n            resource_scarcity: -0.1,\n            temperature: -0.2,\n            light_conditions: 0,\n            ether_density: 0\n          },\n          description: 'Limbs with membrane structures optimized for aquatic movement.',\n          compatible: ['aquatic', 'bipedal', 'quadrupedal']\n        }\n      ],\n      metabolism: [\n        {\n          id: 'carnivore',\n          name: 'Carnivore Digestion',\n          tier: 1,\n          affinities: {\n            resource_scarcity: 0.5,\n            temperature: 0.3,\n            terrain_harshness: 0.1,\n            light_conditions: 0,\n            pressure_gravity: 0,\n            ether_density: 0\n          },\n          description: 'Specialized digestive system optimized for meat processing.',\n          compatible: ['all']\n        },\n        {\n          id: 'omnivore',\n          name: 'Omnivore Adaptation',\n          tier: 1,\n          affinities: {\n            resource_scarcity: 0.6,\n            terrain_harshness: 0.2,\n            temperature: 0.1,\n            light_conditions: 0,\n            pressure_gravity: 0,\n            ether_density: 0\n          },\n          description: 'Versatile digestive system capable of processing diverse food sources.',\n          compatible: ['all']\n        }\n      ],\n      sensory: [\n        {\n          id: 'acute_vision',\n          name: 'Acute Vision',\n          tier: 1,\n          affinities: {\n            light_conditions: 0.8,\n            terrain_harshness: 0.3,\n            resource_scarcity: 0.2,\n            temperature: 0,\n            pressure_gravity: 0,\n            ether_density: 0\n          },\n          description: 'Highly developed visual organs with exceptional acuity.',\n          compatible: ['all']\n        },\n        {\n          id: 'sonar_mapping',\n          name: 'Echolocation',\n          tier: 1,\n          affinities: {\n            light_conditions: -0.8,\n            terrain_harshness: 0.5,\n            pressure_gravity: 0.1,\n            temperature: 0,\n            resource_scarcity: 0,\n            ether_density: 0.2\n          },\n          description: 'Ability to emit and detect sound waves for environmental mapping.',\n          compatible: ['all']\n        }\n      ],\n      etheric: [\n        {\n          id: 'ether_sensing',\n          name: 'Ether Sensing',\n          tier: 1,\n          affinities: {\n            ether_density: 0.8,\n            light_conditions: 0.2,\n            terrain_harshness: 0,\n            temperature: 0,\n            resource_scarcity: 0,\n            pressure_gravity: 0.1\n          },\n          description: 'Specialized organs that can detect and interpret etheric energy patterns.',\n          compatible: ['all']\n        },\n        {\n          id: 'ether_channeling',\n          name: 'Ether Channeling',\n          tier: 1,\n          affinities: {\n            ether_density: 0.9,\n            temperature: 0.3,\n            light_conditions: 0.3,\n            terrain_harshness: 0,\n            resource_scarcity: -0.2,\n            pressure_gravity: 0.1\n          },\n          description: 'Biological structures capable of directing and manipulating etheric energies.',\n          compatible: ['all']\n        }\n      ],\n      thermal: [\n        {\n          id: 'thick_blubber',\n          name: 'Thick Blubber',\n          tier: 1,\n          affinities: {\n            temperature: -0.8,\n            pressure_gravity: 0.3,\n            resource_scarcity: -0.4,\n            terrain_harshness: 0.1,\n            light_conditions: 0,\n            ether_density: 0\n          },\n          description: 'Dense fatty tissue layer providing insulation in cold environments.',\n          compatible: ['all']\n        },\n        {\n          id: 'reflective_scales',\n          name: 'Reflective Scales',\n          tier: 1,\n          affinities: {\n            temperature: 0.7,\n            light_conditions: 0.6,\n            terrain_harshness: 0.3,\n            resource_scarcity: -0.2,\n            pressure_gravity: 0,\n            ether_density: 0.1\n          },\n          description: 'Light-reflecting scales that help regulate heat absorption.',\n          compatible: ['all']\n        }\n      ]\n    };\n    \n    // Add additional traits based on selected body shape\n    // This would be expanded with more traits specific to each body shape\n    \n    return baseTraits;\n  };\n  \n  // Initialize selected traits on body shape change\n  useEffect(() => {\n    const initialTraits = {};\n    traitCategories.forEach(category => {\n      const traits = getTraitsByCategory(category.id);\n      const compatibleTraits = traits.filter(trait => \n        trait.compatible.includes('all') || trait.compatible.includes(selectedBodyShape)\n      );\n      if (compatibleTraits.length > 0) {\n        initialTraits[category.id] = compatibleTraits[0].id;\n      }\n    });\n    setSelectedTraits(initialTraits);\n  }, [selectedBodyShape]);\n  \n  // Setup the main visualization canvas\n  useEffect(() => {\n    if (!canvasRef.current || !containerRef.current) return;\n    \n    const canvas = canvasRef.current;\n    const container = containerRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    // Set up canvas dimensions\n    const updateCanvasDimensions = () => {\n      const rect = container.getBoundingClientRect();\n      canvas.width = rect.width;\n      canvas.height = rect.height;\n      \n      networkRef.current = {\n        width: rect.width,\n        height: rect.height,\n        centerX: rect.width / 2,\n        centerY: rect.height / 2\n      };\n    };\n    \n    updateCanvasDimensions();\n    window.addEventListener('resize', updateCanvasDimensions);\n    \n    // Animation function for the network visualization\n    const animate = () => {\n      if (!networkRef.current) return;\n      \n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      \n      // Apply zoom and pan transformations\n      ctx.save();\n      ctx.translate(panOffset.x, panOffset.y);\n      ctx.scale(zoom, zoom);\n      \n      const { centerX, centerY } = networkRef.current;\n      \n      // Function to calculate node positions relative to canvas center\n      const getNodePosition = (node) => {\n        return {\n          x: centerX + node.x,\n          y: centerY + node.y\n        };\n      };\n      \n      // Draw connections between nodes\n      ctx.lineWidth = 1;\n      networkConnections.forEach(connection => {\n        const sourceNode = networkNodes.find(n => n.id === connection.source);\n        const targetNode = networkNodes.find(n => n.id === connection.target);\n        \n        if (sourceNode && targetNode) {\n          const sourcePos = getNodePosition(sourceNode);\n          const targetPos = getNodePosition(targetNode);\n          \n          // Define gradient based on node colors\n          const gradient = ctx.createLinearGradient(\n            sourcePos.x, sourcePos.y, targetPos.x, targetPos.y\n          );\n          gradient.addColorStop(0, sourceNode.color);\n          gradient.addColorStop(1, targetNode.color);\n          \n          // Draw connection line\n          ctx.beginPath();\n          ctx.moveTo(sourcePos.x, sourcePos.y);\n          \n          // Create curved connections for better visibility\n          const midX = (sourcePos.x + targetPos.x) / 2;\n          const midY = (sourcePos.y + targetPos.y) / 2;\n          const curveOffset = 20;\n          \n          // Add slight curve to connections for aesthetics\n          const dx = targetPos.x - sourcePos.x;\n          const dy = targetPos.y - sourcePos.y;\n          const normalX = -dy / Math.sqrt(dx*dx + dy*dy);\n          const normalY = dx / Math.sqrt(dx*dx + dy*dy);\n          \n          const controlX = midX + normalX * curveOffset;\n          const controlY = midY + normalY * curveOffset;\n          \n          ctx.quadraticCurveTo(controlX, controlY, targetPos.x, targetPos.y);\n          \n          ctx.strokeStyle = gradient;\n          ctx.globalAlpha = 0.7;\n          ctx.stroke();\n          ctx.globalAlpha = 1;\n        }\n      });\n      \n      // Draw nodes\n      networkNodes.forEach(node => {\n        const pos = getNodePosition(node);\n        const radius = node.type === 'central' ? 40 : node.type === 'major' ? 30 : 20;\n        \n        // Draw node background\n        ctx.beginPath();\n        ctx.arc(pos.x, pos.y, radius, 0, Math.PI * 2);\n        ctx.fillStyle = node.color;\n        ctx.fill();\n        \n        // Draw node border\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = '#000';\n        ctx.stroke();\n        \n        // Add inner circle for central and major nodes\n        if (node.type === 'central' || node.type === 'major') {\n          ctx.beginPath();\n          ctx.arc(pos.x, pos.y, radius * 0.7, 0, Math.PI * 2);\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = '#000';\n          ctx.stroke();\n        }\n        \n        // Add node labels (not directly on the nodes, but next to them)\n        ctx.font = node.type === 'central' ? 'bold 14px Arial' : '12px Arial';\n        ctx.fillStyle = '#fff';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        \n        // Position labels based on node position relative to center\n        let textX = pos.x;\n        let textY = pos.y;\n        \n        // Adjust label position based on node position\n        if (node.y < -50) { // Top nodes\n          textY = pos.y - radius - 10;\n        } else if (node.y > 50) { // Bottom nodes\n          textY = pos.y + radius + 10;\n        } else if (node.x < 0) { // Left nodes\n          textX = pos.x - radius - 10;\n          ctx.textAlign = 'right';\n        } else if (node.x > 0) { // Right nodes\n          textX = pos.x + radius + 10;\n          ctx.textAlign = 'left';\n        }\n        \n        // Add text stroke for better visibility\n        ctx.strokeStyle = 'rgba(0, 0, 0, 0.8)';\n        ctx.lineWidth = 3;\n        ctx.strokeText(node.name, textX, textY);\n        ctx.fillText(node.name, textX, textY);\n      });\n      \n      ctx.restore();\n      \n      // Continue animation\n      animationFrameRef.current = requestAnimationFrame(animate);\n    };\n    \n    // Start animation loop\n    animate();\n    \n    // Set loaded after a delay\n    const timer = setTimeout(() => {\n      setIsLoaded(true);\n    }, 1000);\n    \n    // Cleanup on unmount\n    return () => {\n      window.removeEventListener('resize', updateCanvasDimensions);\n      clearTimeout(timer);\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [visualizationType, zoom, panOffset, showEmergenceProbabilities]);\n  \n  // Calculate stress and adaptation probability when environment changes\n  useEffect(() => {\n    // Using simplified stress calculation\n    const stressFromEnvironment = Object.values(environment).reduce((sum, value) => sum + Math.abs(value), 0) / 5;\n    setTotalEffectiveStress(stressFromEnvironment);\n    \n    // Simplified adaptation probability calculation\n    const probability = 1 / (1 + Math.exp(-10 * (stressFromEnvironment - 0.5)));\n    setAdaptationProbability(probability);\n  }, [environment, selectedBodyShape, selectedTraits]);\n  \n  // Handle mouse move for background effect\n  const handleMouseMove = (e) => {\n    setCursorPosition({ x: e.clientX, y: e.clientY });\n    \n    // Handle dragging\n    if (isDragging) {\n      const dx = e.clientX - dragStart.x;\n      const dy = e.clientY - dragStart.y;\n      setPanOffset({\n        x: panOffset.x + dx,\n        y: panOffset.y + dy\n      });\n      setDragStart({\n        x: e.clientX,\n        y: e.clientY\n      });\n    }\n  };\n  \n  // Handle mouse down for drag start\n  const handleMouseDown = (e) => {\n    setIsDragging(true);\n    setDragStart({\n      x: e.clientX,\n      y: e.clientY\n    });\n    \n    // Change cursor style\n    if (containerRef.current) {\n      containerRef.current.style.cursor = 'grabbing';\n    }\n  };\n  \n  // Handle mouse up for drag end\n  const handleMouseUp = () => {\n    setIsDragging(false);\n    \n    // Reset cursor style\n    if (containerRef.current) {\n      containerRef.current.style.cursor = 'grab';\n    }\n  };\n  \n  // Handle mouse wheel for zoom\n  const handleWheel = (e) => {\n    e.preventDefault();\n    const zoomFactor = 0.1;\n    const newZoom = e.deltaY < 0 \n      ? Math.min(zoom + zoomFactor, 3) \n      : Math.max(zoom - zoomFactor, 0.5);\n    \n    setZoom(newZoom);\n  };\n  \n  // Update environmental stressor\n  const handleEnvironmentChange = (stressor, value) => {\n    setEnvironment(prev => ({\n      ...prev,\n      [stressor]: parseFloat(value)\n    }));\n  };\n  \n  // Handle body shape selection\n  const handleBodyShapeSelect = (shapeId) => {\n    setSelectedBodyShape(shapeId);\n    setShowBodyShapeMenu(false);\n  };\n  \n  // Handle trait selection\n  const handleTraitSelect = (categoryId, traitId) => {\n    setSelectedTraits(prev => ({\n      ...prev,\n      [categoryId]: traitId\n    }));\n    setShowTraitMenus(prev => ({\n      ...prev,\n      [categoryId]: false\n    }));\n  };\n  \n  // Toggle trait menu visibility\n  const handleTraitMenuToggle = (categoryId) => {\n    setShowTraitMenus(prev => ({\n      ...prev,\n      [categoryId]: !prev[categoryId]\n    }));\n    \n    // Close other menus\n    setShowBodyShapeMenu(false);\n    setShowCategoryMenu(false);\n    Object.keys(showTraitMenus).forEach(key => {\n      if (key !== categoryId) {\n        setShowTraitMenus(prev => ({\n          ...prev,\n          [key]: false\n        }));\n      }\n    });\n  };\n  \n  // Reset view\n  const handleResetView = () => {\n    setZoom(1);\n    setPanOffset({ x: 0, y: 0 });\n  };\n  \n  // Get selected trait name\n  const getSelectedTraitName = (categoryId) => {\n    const traitId = selectedTraits[categoryId];\n    if (!traitId) return 'Select...';\n    \n    const traits = getTraitsByCategory(categoryId);\n    const trait = traits.find(t => t.id === traitId);\n    return trait ? trait.name : 'Select...';\n  };\n  \n  // Render dropdown menu\n  const renderDropdownMenu = (isOpen, title, items, selectedId, onSelect, renderItem) => {\n    if (!isOpen) return null;\n    \n    return (\n      <motion.div \n        className={classes.dropdownContent}\n        initial={{ opacity: 0, y: -10 }}\n        animate={{ opacity: 1, y: 0 }}\n        exit={{ opacity: 0, y: -10 }}\n        transition={{ duration: 0.2 }}\n      >\n        {items.map(item => (\n          <div \n            key={item.id}\n            className={`\n              ${classes.menuItem} \n              ${item.id === selectedId ? classes.menuItemActive : ''}\n            `}\n            onClick={() => onSelect(item.id)}\n          >\n            {renderItem ? renderItem(item) : (\n              <>\n                <div className={classes.menuItemTitle}>{item.name}</div>\n                {item.description && (\n                  <div className={classes.menuItemDescription}>{item.description}</div>\n                )}\n              </>\n            )}\n          </div>\n        ))}\n      </motion.div>\n    );\n  };\n  \n  // Render environmental slider\n  const renderEnvironmentalSlider = (stressor, label) => {\n    const value = environment[stressor];\n    const percentage = value * 100;\n    \n    return (\n      <div className={classes.environmentSlider} key={stressor}>\n        <div className={classes.sliderLabel}>\n          <span>{label}</span>\n          <span className={classes.sliderValue}>{value.toFixed(1)}</span>\n        </div>\n        <div className={classes.sliderTrack}>\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"1\"\n            step=\"0.1\"\n            value={value}\n            onChange={(e) => handleEnvironmentChange(stressor, e.target.value)}\n            style={{ \n              width: '100%', \n              position: 'absolute',\n              opacity: 0,\n              height: '100%',\n              cursor: 'pointer'\n            }}\n          />\n          <div \n            className={classes.sliderThumb}\n            style={{ left: `${percentage}%` }}\n          ></div>\n        </div>\n      </div>\n    );\n  };\n  \n  return (\n    <div \n      className={classes.evolutionSimulator}\n      onMouseMove={handleMouseMove}\n    >\n      {/* Background effects */}\n      <Background cursorPosition={cursorPosition} setCursorPosition={setCursorPosition} />\n      \n      <MeteorShower \n        height=\"100vh\"\n        zIndex={2}\n        trailColor=\"rgba(191, 173, 127, 0.8)\"\n        glowColor=\"rgba(207, 185, 130, 0.6)\"\n        coreColor=\"rgba(255, 248, 220, 1)\"\n        meteorDensity={15}\n        meteorMinSize={1}\n        meteorMaxSize={2}\n        meteorSpeed={0.08}\n        trailLength={300}\n        trailSegments={80}\n        enableParallax={true}\n        parallaxIntensity={0.15}\n        mode=\"arc\"\n        staggered={true}\n      />\n      \n      {/* Enhanced Navbar */}\n      <div className={classes.navbar}>\n        <h1 className={classes.title}>\n          <span className={classes.logoIcon}></span>\n          Crescent Evolution System\n        </h1>\n        \n        <div className={classes.navControls}>\n          {/* Body Shape Dropdown */}\n          <div className={classes.dropdown}>\n            <button \n              className={classes.dropdownButton}\n              onClick={() => {\n                setShowBodyShapeMenu(!showBodyShapeMenu);\n                setShowCategoryMenu(false);\n                setShowTraitMenus({});\n              }}\n            >\n              <span>Body Shape: </span>\n              <span style={{ fontWeight: 'bold' }}>\n                {bodyShapes.find(shape => shape.id === selectedBodyShape)?.name || 'Select...'}\n              </span>\n              <span style={{ fontSize: '0.8rem', marginLeft: '4px' }}>▼</span>\n            </button>\n            \n            <AnimatePresence>\n              {renderDropdownMenu(\n                showBodyShapeMenu,\n                'Select Body Shape',\n                bodyShapes,\n                selectedBodyShape,\n                handleBodyShapeSelect\n              )}\n            </AnimatePresence>\n          </div>\n          \n          {/* Filter by Category Dropdown */}\n          <div className={classes.dropdown}>\n            <button \n              className={classes.dropdownButton}\n              onClick={() => {\n                setShowCategoryMenu(!showCategoryMenu);\n                setShowBodyShapeMenu(false);\n                setShowTraitMenus({});\n              }}\n            >\n              <span>Filter: </span>\n              <span style={{ fontWeight: 'bold' }}>\n                {selectedCategory \n                  ? traitCategories.find(cat => cat.id === selectedCategory)?.name \n                  : 'All Categories'}\n              </span>\n              <span style={{ fontSize: '0.8rem', marginLeft: '4px' }}>▼</span>\n            </button>\n            \n            <AnimatePresence>\n              {renderDropdownMenu(\n                showCategoryMenu,\n                'Filter by Category',\n                [{ id: null, name: 'All Categories' }, ...traitCategories],\n                selectedCategory,\n                (categoryId) => {\n                  setSelectedCategory(categoryId);\n                  setShowCategoryMenu(false);\n                }\n              )}\n            </AnimatePresence>\n          </div>\n          \n          {/* Trait Selection Dropdowns */}\n          {activeTab === 'traits' && traitCategories.map(category => (\n            <div className={classes.dropdown} key={category.id}>\n              <button \n                className={classes.dropdownButton}\n                style={{ borderColor: `${category.color}50` }}\n                onClick={() => handleTraitMenuToggle(category.id)}\n              >\n                <span>{category.name}: </span>\n                <span style={{ fontWeight: 'bold' }}>\n                  {getSelectedTraitName(category.id)}\n                </span>\n                <span style={{ fontSize: '0.8rem', marginLeft: '4px' }}>▼</span>\n              </button>\n              \n              <AnimatePresence>\n                {renderDropdownMenu(\n                  showTraitMenus[category.id],\n                  `Select ${category.name} Trait`,\n                  getTraitsByCategory(category.id).filter(trait => \n                    trait.compatible.includes('all') || trait.compatible.includes(selectedBodyShape)\n                  ),\n                  selectedTraits[category.id],\n                  (traitId) => handleTraitSelect(category.id, traitId),\n                  (trait) => (\n                    <>\n                      <div className={classes.menuItemTitle}>{trait.name}</div>\n                      <div className={classes.menuItemDescription}>{trait.description}</div>\n                    </>\n                  )\n                )}\n              </AnimatePresence>\n            </div>\n          ))}\n        </div>\n        \n        {/* Navigation Tabs */}\n        <div className={classes.navTabs}>\n          <button \n            className={`${classes.navTab} ${activeTab === 'traits' ? classes.navTabActive : ''}`}\n            onClick={() => setActiveTab('traits')}\n          >\n            Traits\n          </button>\n          <button \n            className={`${classes.navTab} ${activeTab === 'environment' ? classes.navTabActive : ''}`}\n            onClick={() => setActiveTab('environment')}\n          >\n            Environment\n          </button>\n          <button \n            className={`${classes.navTab} ${activeTab === 'synthesis' ? classes.navTabActive : ''}`}\n            onClick={() => setActiveTab('synthesis')}\n          >\n            Synthesis\n          </button>\n        </div>\n        \n        {/* View Controls */}\n        <div className={classes.viewControls}>\n          <button \n            className={classes.viewButton}\n            onClick={() => setZoom(Math.min(zoom + 0.1, 3))}\n            title=\"Zoom In\"\n          >\n            +\n          </button>\n          <button \n            className={classes.viewButton}\n            onClick={() => setZoom(Math.max(zoom - 0.1, 0.5))}\n            title=\"Zoom Out\"\n          >\n            -\n          </button>\n          <button \n            className={classes.viewButton}\n            onClick={handleResetView}\n            title=\"Reset View\"\n          >\n            ↻\n          </button>\n        </div>\n      </div>\n      \n      {/* Main Content Area */}\n      <div className={classes.contentContainer}>\n        {/* Network Visualization Section */}\n        <div>\n          <h2 className={classes.sectionHeading}>Network Visualization</h2>\n          \n          <div className={classes.visualizationControls}>\n            <button \n              className={`${classes.controlButton} ${visualizationType === 'direct' ? classes.activeControlButton : ''}`}\n              onClick={() => setVisualizationType('direct')}\n            >\n              Direct Connections\n            </button>\n            <button \n              className={`${classes.controlButton} ${visualizationType === 'evolutionary' ? classes.activeControlButton : ''}`}\n              onClick={() => setVisualizationType('evolutionary')}\n            >\n              Evolutionary Tree\n            </button>\n            <button \n              className={`${classes.controlButton} ${visualizationType === 'category' ? classes.activeControlButton : ''}`}\n              onClick={() => setVisualizationType('category')}\n            >\n              Trait Category\n            </button>\n          </div>\n          \n          {/* Network visualization canvas */}\n          <div \n            ref={containerRef}\n            className={classes.visualizationContainer}\n            onMouseDown={handleMouseDown}\n            onMouseUp={handleMouseUp}\n            onMouseLeave={handleMouseUp}\n            onWheel={handleWheel}\n          >\n            <canvas \n              ref={canvasRef}\n              className={classes.networkCanvas}\n            />\n          </div>\n        </div>\n        \n        {/* Trait Probabilities Section */}\n        <div className={classes.traitProbabilitiesContainer}>\n          <h2 className={classes.sectionHeading}>Trait Probabilities</h2>\n          \n          <button \n            className={classes.emergenceProbabilitiesButton}\n            onClick={() => setShowEmergenceProbabilities(!showEmergenceProbabilities)}\n          >\n            Show Emergence Probabilities\n          </button>\n        </div>\n        \n        {/* Environmental Conditions Section */}\n        <div className={classes.environmentalConditions}>\n          <h2 className={classes.sectionHeading}>Environmental Conditions</h2>\n          \n          <div className={classes.environmentalSlidersContainer}>\n            {renderEnvironmentalSlider('eldritch_influence', 'Eldritch Influence')}\n            {renderEnvironmentalSlider('corruption_level', 'Corruption Level')}\n            {renderEnvironmentalSlider('resource_scarcity', 'Resource Scarcity')}\n            {renderEnvironmentalSlider('ambient_magic', 'Ambient Magic')}\n            {renderEnvironmentalSlider('darkness', 'Darkness')}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EnhancedEvolutionSimulator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}