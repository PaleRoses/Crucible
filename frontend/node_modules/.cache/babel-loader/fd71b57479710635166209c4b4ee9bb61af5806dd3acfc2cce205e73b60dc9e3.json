{"ast":null,"code":"import React,{useRef}from'react';import{useInView}from'framer-motion';import{createUseStyles}from'react-jss';// Styles defined within the component file\nimport{jsx as _jsx}from\"react/jsx-runtime\";const useStyles=createUseStyles({revealContainer:{overflow:'hidden',marginBottom:'1.5rem'},revealText:{transform:'translateY(30px)',opacity:0,transition:'transform 0.8s ease, opacity 0.8s ease'},revealed:{transform:'translateY(0)',opacity:1}});/**\n * RevealText Component\n * \n * Creates an animated text reveal effect when the component enters the viewport.\n * Uses Framer Motion's useInView hook to trigger the animation.\n * \n * @param {ReactNode} children - Content to be revealed\n * @param {number} threshold - Visibility threshold to trigger animation (0-1)\n * @param {number} delay - Animation delay in milliseconds\n */const RevealText=_ref=>{let{children,threshold=0.5,delay=0}=_ref;const classes=useStyles();const ref=useRef(null);const isInView=useInView(ref,{once:false,threshold});return/*#__PURE__*/_jsx(\"div\",{ref:ref,className:classes.revealContainer,children:/*#__PURE__*/_jsx(\"div\",{className:`${classes.revealText} ${isInView?classes.revealed:''}`,style:{transitionDelay:`${delay}ms`},children:children})});};export default RevealText;","map":{"version":3,"names":["React","useRef","useInView","createUseStyles","jsx","_jsx","useStyles","revealContainer","overflow","marginBottom","revealText","transform","opacity","transition","revealed","RevealText","_ref","children","threshold","delay","classes","ref","isInView","once","className","style","transitionDelay"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/core/effects/RevealText.jsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { useInView } from 'framer-motion';\nimport { createUseStyles } from 'react-jss';\n\n// Styles defined within the component file\nconst useStyles = createUseStyles({\n  revealContainer: {\n    overflow: 'hidden',\n    marginBottom: '1.5rem'\n  },\n  revealText: {\n    transform: 'translateY(30px)',\n    opacity: 0,\n    transition: 'transform 0.8s ease, opacity 0.8s ease'\n  },\n  revealed: {\n    transform: 'translateY(0)',\n    opacity: 1\n  }\n});\n\n/**\n * RevealText Component\n * \n * Creates an animated text reveal effect when the component enters the viewport.\n * Uses Framer Motion's useInView hook to trigger the animation.\n * \n * @param {ReactNode} children - Content to be revealed\n * @param {number} threshold - Visibility threshold to trigger animation (0-1)\n * @param {number} delay - Animation delay in milliseconds\n */\nconst RevealText = ({ children, threshold = 0.5, delay = 0 }) => {\n  const classes = useStyles();\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: false, threshold });\n  \n  return (\n    <div ref={ref} className={classes.revealContainer}>\n      <div\n        className={`${classes.revealText} ${isInView ? classes.revealed : ''}`}\n        style={{ transitionDelay: `${delay}ms` }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default RevealText;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,MAAM,KAAQ,OAAO,CACrC,OAASC,SAAS,KAAQ,eAAe,CACzC,OAASC,eAAe,KAAQ,WAAW,CAE3C;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,SAAS,CAAGH,eAAe,CAAC,CAChCI,eAAe,CAAE,CACfC,QAAQ,CAAE,QAAQ,CAClBC,YAAY,CAAE,QAChB,CAAC,CACDC,UAAU,CAAE,CACVC,SAAS,CAAE,kBAAkB,CAC7BC,OAAO,CAAE,CAAC,CACVC,UAAU,CAAE,wCACd,CAAC,CACDC,QAAQ,CAAE,CACRH,SAAS,CAAE,eAAe,CAC1BC,OAAO,CAAE,CACX,CACF,CAAC,CAAC,CAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,KAAM,CAAAG,UAAU,CAAGC,IAAA,EAA8C,IAA7C,CAAEC,QAAQ,CAAEC,SAAS,CAAG,GAAG,CAAEC,KAAK,CAAG,CAAE,CAAC,CAAAH,IAAA,CAC1D,KAAM,CAAAI,OAAO,CAAGd,SAAS,CAAC,CAAC,CAC3B,KAAM,CAAAe,GAAG,CAAGpB,MAAM,CAAC,IAAI,CAAC,CACxB,KAAM,CAAAqB,QAAQ,CAAGpB,SAAS,CAACmB,GAAG,CAAE,CAAEE,IAAI,CAAE,KAAK,CAAEL,SAAU,CAAC,CAAC,CAE3D,mBACEb,IAAA,QAAKgB,GAAG,CAAEA,GAAI,CAACG,SAAS,CAAEJ,OAAO,CAACb,eAAgB,CAAAU,QAAA,cAChDZ,IAAA,QACEmB,SAAS,CAAE,GAAGJ,OAAO,CAACV,UAAU,IAAIY,QAAQ,CAAGF,OAAO,CAACN,QAAQ,CAAG,EAAE,EAAG,CACvEW,KAAK,CAAE,CAAEC,eAAe,CAAE,GAAGP,KAAK,IAAK,CAAE,CAAAF,QAAA,CAExCA,QAAQ,CACN,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}