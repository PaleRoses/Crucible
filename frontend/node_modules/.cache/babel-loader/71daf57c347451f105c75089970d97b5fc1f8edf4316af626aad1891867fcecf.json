{"ast":null,"code":"var _jsxFileName = \"/home/valeria/Documents/Crucible/frontend/src/components/core/effects/ScrollingTextAnimation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { motion, useScroll, useTransform } from 'framer-motion';\nimport { createUseStyles } from 'react-jss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  animatedContainer: {\n    position: 'relative',\n    width: '100%',\n    textAlign: props => props.textAlign || 'center',\n    margin: props => props.margin || '0 0 3rem 0',\n    zIndex: 2,\n    willChange: 'transform, opacity',\n    backfaceVisibility: 'hidden',\n    perspective: 1000,\n    transform: 'translateZ(0)',\n    '-webkit-font-smoothing': 'antialiased',\n    '-moz-osx-font-smoothing': 'grayscale',\n    '-webkit-transform-style': 'preserve-3d',\n    transformStyle: 'preserve-3d'\n  },\n  content: {\n    width: '100%'\n  },\n  divider: props => ({\n    width: props.dividerWidth || '150px',\n    height: props.dividerHeight || '1px',\n    background: props.dividerBackground || 'linear-gradient(to right, rgba(160, 142, 97, 0), rgba(160, 142, 97, 0.6), rgba(160, 142, 97, 0))',\n    margin: props.dividerMargin || '1rem auto',\n    display: props.showDivider ? 'block' : 'none'\n  })\n});\n\n/**\n * ScrollingTextAnimation Component\n * \n * A highly optimized, butter-smooth scroll-based animation component\n * for text elements with exceptional performance on both mobile and desktop.\n */\nconst ScrollingTextAnimation = ({\n  children,\n  scrollConfig = {},\n  textAlign = 'center',\n  margin = '0 0 3rem 0',\n  showDivider = true,\n  dividerWidth = '150px',\n  dividerHeight = '1px',\n  dividerBackground,\n  dividerMargin = '1rem auto',\n  style = {},\n  className = ''\n}) => {\n  _s();\n  // Set default scroll configuration with performance-optimized defaults\n  const {\n    startPosition = 0,\n    endPosition = 300,\n    initialY = -100,\n    finalY = 0,\n    clampValues = true,\n    opacityValues = [0, 1, 1],\n    // Start invisible, become visible\n    opacityScrollPositions = [startPosition, startPosition + 150, endPosition],\n    reverseDirection = false,\n    throttleAmount = 16,\n    // ~60fps throttling for better performance\n    enableReducedMotion = true,\n    disableOnMobile = false\n  } = scrollConfig;\n  const containerRef = useRef(null);\n  const [isInView, setIsInView] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n  const [prefersReducedMotion, setPrefersReducedMotion] = useState(false);\n\n  // Calculate the actual Y values considering direction\n  const yInputRange = [startPosition, endPosition];\n  const yOutputRange = reverseDirection ? [finalY, initialY] : [initialY, finalY];\n\n  // Detect mobile devices and motion preferences\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(typeof window !== 'undefined' && (window.innerWidth <= 768 || /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)));\n    };\n    const checkReducedMotion = () => {\n      setPrefersReducedMotion(typeof window !== 'undefined' && window.matchMedia('(prefers-reduced-motion: reduce)').matches);\n    };\n    checkMobile();\n    checkReducedMotion();\n    const handleResize = () => {\n      checkMobile();\n    };\n    if (typeof window !== 'undefined') {\n      window.addEventListener('resize', handleResize);\n      return () => {\n        window.removeEventListener('resize', handleResize);\n      };\n    }\n  }, []);\n\n  // ⚡️ PERFORMANCE IMPROVEMENT: Use scrollYProgress instead of scrollY for smoother animations\n  const {\n    scrollYProgress\n  } = useScroll({\n    target: containerRef,\n    offset: [\"start end\", \"end start\"],\n    smooth: 10 // Smooth out scrolling without introducing lag\n  });\n\n  // ⚡️ PERFORMANCE IMPROVEMENT: Single transform approach without springs for smoother updates\n  const translateY = useTransform(scrollYProgress, [0, 0.8],\n  // Completes animation within 80% of scroll range\n  yOutputRange, {\n    clamp: clampValues\n  });\n\n  // ⚡️ PERFORMANCE IMPROVEMENT: Simpler opacity transform with linear response \n  const opacity = useTransform(scrollYProgress, [0, 0.4, 0.8],\n  // Faster fade-in, maintain visibility\n  opacityValues, {\n    clamp: clampValues\n  });\n\n  // Optimized intersection observer setup\n  useEffect(() => {\n    if (!containerRef.current || typeof IntersectionObserver === 'undefined') return;\n    const currentRef = containerRef.current;\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        setIsInView(entry.isIntersecting);\n\n        // ⚡️ PERFORMANCE IMPROVEMENT: Unobserve once element is in view to reduce overhead\n        if (entry.isIntersecting) {\n          observer.unobserve(currentRef);\n        }\n      });\n    }, {\n      root: null,\n      rootMargin: '200px 0px',\n      // ⚡️ PERFORMANCE IMPROVEMENT: Start animation earlier\n      threshold: 0.1\n    });\n    observer.observe(currentRef);\n    return () => {\n      observer.unobserve(currentRef);\n    };\n  }, []);\n\n  // Determine if we should use simplified animations\n  const shouldUseSimplifiedAnimations = enableReducedMotion && prefersReducedMotion || disableOnMobile && isMobile;\n\n  // Create styles for component\n  const styleProps = {\n    textAlign,\n    margin,\n    showDivider,\n    dividerWidth,\n    dividerHeight,\n    dividerBackground,\n    dividerMargin\n  };\n  const classes = useStyles(styleProps);\n\n  // ⚡️ PERFORMANCE IMPROVEMENT: Simpler animation logic with fewer conditions\n  const getAnimationStyle = useCallback(() => {\n    if (!isInView) {\n      return {\n        y: reverseDirection ? finalY : initialY,\n        opacity: opacityValues[0]\n      };\n    }\n    if (shouldUseSimplifiedAnimations) {\n      return {\n        y: finalY,\n        opacity: 1,\n        transition: {\n          duration: 0.6,\n          ease: [0.23, 1, 0.32, 1] // Improved easing curve for smoother motion\n        }\n      };\n    }\n    return {\n      y: translateY,\n      opacity: opacity\n    };\n  }, [isInView, shouldUseSimplifiedAnimations, translateY, opacity, reverseDirection, finalY, initialY, opacityValues]);\n  const animationStyle = getAnimationStyle();\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    ref: containerRef,\n    className: `${classes.animatedContainer} ${className}`,\n    style: {\n      ...style,\n      ...animationStyle\n    }\n    // ⚡️ PERFORMANCE IMPROVEMENT: Simplified motion settings\n    ,\n    initial: false,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), showDivider && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.divider\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrollingTextAnimation, \"I/+36vKHLvI7woaR98JNK5irmYQ=\", false, function () {\n  return [useScroll, useTransform, useTransform, useStyles];\n});\n_c = ScrollingTextAnimation;\nexport default ScrollingTextAnimation;\nvar _c;\n$RefreshReg$(_c, \"ScrollingTextAnimation\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","motion","useScroll","useTransform","createUseStyles","jsxDEV","_jsxDEV","useStyles","animatedContainer","position","width","textAlign","props","margin","zIndex","willChange","backfaceVisibility","perspective","transform","transformStyle","content","divider","dividerWidth","height","dividerHeight","background","dividerBackground","dividerMargin","display","showDivider","ScrollingTextAnimation","children","scrollConfig","style","className","_s","startPosition","endPosition","initialY","finalY","clampValues","opacityValues","opacityScrollPositions","reverseDirection","throttleAmount","enableReducedMotion","disableOnMobile","containerRef","isInView","setIsInView","isMobile","setIsMobile","prefersReducedMotion","setPrefersReducedMotion","yInputRange","yOutputRange","checkMobile","window","innerWidth","test","navigator","userAgent","checkReducedMotion","matchMedia","matches","handleResize","addEventListener","removeEventListener","scrollYProgress","target","offset","smooth","translateY","clamp","opacity","current","IntersectionObserver","currentRef","observer","entries","forEach","entry","isIntersecting","unobserve","root","rootMargin","threshold","observe","shouldUseSimplifiedAnimations","styleProps","classes","getAnimationStyle","y","transition","duration","ease","animationStyle","div","ref","initial","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/core/effects/ScrollingTextAnimation.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { motion, useScroll, useTransform } from 'framer-motion';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  animatedContainer: {\n    position: 'relative',\n    width: '100%',\n    textAlign: props => props.textAlign || 'center',\n    margin: props => props.margin || '0 0 3rem 0',\n    zIndex: 2,\n    willChange: 'transform, opacity',\n    backfaceVisibility: 'hidden',\n    perspective: 1000,\n    transform: 'translateZ(0)',\n    '-webkit-font-smoothing': 'antialiased',\n    '-moz-osx-font-smoothing': 'grayscale',\n    '-webkit-transform-style': 'preserve-3d',\n    transformStyle: 'preserve-3d',\n  },\n  content: {\n    width: '100%',\n  },\n  divider: props => ({\n    width: props.dividerWidth || '150px',\n    height: props.dividerHeight || '1px',\n    background: props.dividerBackground || 'linear-gradient(to right, rgba(160, 142, 97, 0), rgba(160, 142, 97, 0.6), rgba(160, 142, 97, 0))',\n    margin: props.dividerMargin || '1rem auto',\n    display: props.showDivider ? 'block' : 'none'\n  })\n});\n\n/**\n * ScrollingTextAnimation Component\n * \n * A highly optimized, butter-smooth scroll-based animation component\n * for text elements with exceptional performance on both mobile and desktop.\n */\nconst ScrollingTextAnimation = ({\n  children,\n  scrollConfig = {},\n  textAlign = 'center',\n  margin = '0 0 3rem 0',\n  showDivider = true,\n  dividerWidth = '150px',\n  dividerHeight = '1px',\n  dividerBackground,\n  dividerMargin = '1rem auto',\n  style = {},\n  className = ''\n}) => {\n  // Set default scroll configuration with performance-optimized defaults\n  const {\n    startPosition = 0,\n    endPosition = 300,\n    initialY = -100,\n    finalY = 0,\n    clampValues = true,\n    opacityValues = [0, 1, 1],  // Start invisible, become visible\n    opacityScrollPositions = [startPosition, startPosition + 150, endPosition],\n    reverseDirection = false,\n    throttleAmount = 16,  // ~60fps throttling for better performance\n    enableReducedMotion = true,\n    disableOnMobile = false\n  } = scrollConfig;\n\n  const containerRef = useRef(null);\n  const [isInView, setIsInView] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n  const [prefersReducedMotion, setPrefersReducedMotion] = useState(false);\n  \n  // Calculate the actual Y values considering direction\n  const yInputRange = [startPosition, endPosition];\n  const yOutputRange = reverseDirection ? [finalY, initialY] : [initialY, finalY];\n  \n  // Detect mobile devices and motion preferences\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(\n        typeof window !== 'undefined' && \n        (window.innerWidth <= 768 || \n         /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent))\n      );\n    };\n    \n    const checkReducedMotion = () => {\n      setPrefersReducedMotion(\n        typeof window !== 'undefined' && \n        window.matchMedia('(prefers-reduced-motion: reduce)').matches\n      );\n    };\n    \n    checkMobile();\n    checkReducedMotion();\n    \n    const handleResize = () => {\n      checkMobile();\n    };\n    \n    if (typeof window !== 'undefined') {\n      window.addEventListener('resize', handleResize);\n      \n      return () => {\n        window.removeEventListener('resize', handleResize);\n      };\n    }\n  }, []);\n  \n  // ⚡️ PERFORMANCE IMPROVEMENT: Use scrollYProgress instead of scrollY for smoother animations\n  const { scrollYProgress } = useScroll({\n    target: containerRef,\n    offset: [\"start end\", \"end start\"],\n    smooth: 10  // Smooth out scrolling without introducing lag\n  });\n  \n  // ⚡️ PERFORMANCE IMPROVEMENT: Single transform approach without springs for smoother updates\n  const translateY = useTransform(\n    scrollYProgress,\n    [0, 0.8], // Completes animation within 80% of scroll range\n    yOutputRange,\n    { clamp: clampValues }\n  );\n  \n  // ⚡️ PERFORMANCE IMPROVEMENT: Simpler opacity transform with linear response \n  const opacity = useTransform(\n    scrollYProgress,\n    [0, 0.4, 0.8], // Faster fade-in, maintain visibility\n    opacityValues,\n    { clamp: clampValues }\n  );\n  \n  // Optimized intersection observer setup\n  useEffect(() => {\n    if (!containerRef.current || typeof IntersectionObserver === 'undefined') return;\n    \n    const currentRef = containerRef.current;\n    \n    const observer = new IntersectionObserver(\n      entries => {\n        entries.forEach(entry => {\n          setIsInView(entry.isIntersecting);\n          \n          // ⚡️ PERFORMANCE IMPROVEMENT: Unobserve once element is in view to reduce overhead\n          if (entry.isIntersecting) {\n            observer.unobserve(currentRef);\n          }\n        });\n      },\n      {\n        root: null,\n        rootMargin: '200px 0px', // ⚡️ PERFORMANCE IMPROVEMENT: Start animation earlier\n        threshold: 0.1\n      }\n    );\n    \n    observer.observe(currentRef);\n    \n    return () => {\n      observer.unobserve(currentRef);\n    };\n  }, []);\n  \n  // Determine if we should use simplified animations\n  const shouldUseSimplifiedAnimations = \n    (enableReducedMotion && prefersReducedMotion) || \n    (disableOnMobile && isMobile);\n  \n  // Create styles for component\n  const styleProps = {\n    textAlign,\n    margin,\n    showDivider,\n    dividerWidth,\n    dividerHeight,\n    dividerBackground,\n    dividerMargin\n  };\n  \n  const classes = useStyles(styleProps);\n  \n  // ⚡️ PERFORMANCE IMPROVEMENT: Simpler animation logic with fewer conditions\n  const getAnimationStyle = useCallback(() => {\n    if (!isInView) {\n      return {\n        y: reverseDirection ? finalY : initialY,\n        opacity: opacityValues[0],\n      };\n    }\n    \n    if (shouldUseSimplifiedAnimations) {\n      return {\n        y: finalY,\n        opacity: 1,\n        transition: {\n          duration: 0.6,\n          ease: [0.23, 1, 0.32, 1], // Improved easing curve for smoother motion\n        }\n      };\n    }\n    \n    return {\n      y: translateY,\n      opacity: opacity,\n    };\n  }, [isInView, shouldUseSimplifiedAnimations, translateY, opacity, reverseDirection, finalY, initialY, opacityValues]);\n  \n  const animationStyle = getAnimationStyle();\n  \n  return (\n    <motion.div \n      ref={containerRef}\n      className={`${classes.animatedContainer} ${className}`}\n      style={{ \n        ...style,\n        ...animationStyle,\n      }}\n      // ⚡️ PERFORMANCE IMPROVEMENT: Simplified motion settings\n      initial={false}\n    >\n      <div className={classes.content}>\n        {children}\n      </div>\n      {showDivider && <div className={classes.divider} />}\n    </motion.div>\n  );\n};\n\nexport default ScrollingTextAnimation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}