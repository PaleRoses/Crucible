{"ast":null,"code":"var _jsxFileName = \"/home/valeria/Documents/Crucible/frontend/src/components/core/effects/holdereffects/PersonProfileCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useCallback, useMemo } from 'react';\nimport { motion, useInView, useAnimation } from 'framer-motion';\nimport styled, { css } from 'styled-components';\n\n/**\n * PersonProfileCard Component\n * \n * A sophisticated profile card component with smooth animations, responsive design, and \n * a three-phase scroll behavior that provides an elegant user experience.\n * \n * FEATURES:\n * - Three-phase scroll behavior (normal, fixed, end positions)\n * - Animated navigation with staggered reveal effects\n * - Responsive design with mobile-specific optimizations\n * - Performant scroll handling with request animation frame\n * - Optional statistics display with hover animations\n * - Customizable colors, sizes, and animations\n * \n * @param {Object} props - Component props\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PersonProfileCard = ({\n  /**\n   * Person data object containing profile information\n   * @type {Object}\n   * @property {string} name - Person's name\n   * @property {string} role - Person's professional role or title\n   * @property {string} [tagline] - Brief description or personal statement\n   * @property {Array<string>} [bio] - Array of biography paragraphs\n   * @property {Array<Object>} [stats] - Array of statistics objects with value and label\n   * @property {Array<Object>} [experience] - Array of experience items with content\n   * @property {Array<Object>} [projects] - Array of project items with content\n   */\n  person = {},\n  /**\n   * Animation configuration for the main component reveal\n   * @type {Object}\n   * @property {number} [threshold=0.2] - Visibility threshold to trigger animation (0-1)\n   * @property {boolean} [once=true] - Whether animation should only play once\n   * @property {number} [initialY=30] - Initial Y offset for animation\n   * @property {number} [duration=0.8] - Animation duration in seconds\n   */\n  animationConfig = {\n    threshold: 0.2,\n    once: true,\n    initialY: 30,\n    duration: 0.8\n  },\n  /**\n   * Additional content sections to display after the main navigation sections\n   * @type {Array<Object>}\n   * @property {string} [title] - Section title\n   * @property {string|React.ReactNode} [content] - Section content\n   */\n  additionalSections = [],\n  /**\n   * Callback function when active section changes\n   * @type {Function}\n   * @param {string} sectionId - ID of the newly active section\n   */\n  onSectionChange = null,\n  /**\n   * Top offset in pixels for the fixed sidebar phase\n   * Controls when the sidebar switches to the fixed position\n   * @type {number}\n   */\n  topOffset = 100,\n  /**\n   * Whether to show statistics section\n   * @type {boolean}\n   */\n  showStats = true,\n  /**\n   * Primary highlight color for headings and interactive elements\n   * @type {string}\n   */\n  highlightColor = '#bfad7f',\n  /**\n   * Main text color for content\n   * @type {string}\n   */\n  textColor = 'rgba(224, 224, 224, 0.7)',\n  /**\n   * Minimum width for navigation indicator lines in pixels\n   * @type {number}\n   */\n  minLineWidth = 10,\n  /**\n   * Maximum width for navigation indicator lines in pixels\n   * @type {number}\n   */\n  maxLineWidth = 40,\n  /**\n   * Font family for text content\n   * @type {string}\n   */\n  fontFamily = '\"Garamond\", \"Adobe Caslon Pro\", serif',\n  /**\n   * Navigation items for the sidebar\n   * @type {Array<Object>}\n   * @property {string} id - Unique identifier for the section\n   * @property {string} label - Display label for the navigation item\n   * @property {React.ReactNode|null} [content] - Optional content to override default section content\n   */\n  navigationItems = [{\n    id: 'about',\n    label: 'ABOUT',\n    content: null\n  }, {\n    id: 'experience',\n    label: 'EXPERIENCE',\n    content: null\n  }, {\n    id: 'projects',\n    label: 'PROJECTS',\n    content: null\n  }],\n  /**\n   * Content compression level (0-10)\n   * Controls the width distribution between sidebar and content.\n   * Higher values give more space to content, less to sidebar.\n   * @type {number}\n   */\n  contentCompression = 0,\n  /**\n   * Navigation animation configuration\n   * @type {Object}\n   * @property {number} [staggerDelay=0.1] - Delay between each nav item animation\n   * @property {number} [initialY=20] - Initial Y offset for nav items\n   * @property {number} [finalY=0] - Final Y position for nav items\n   * @property {number} [initialOpacity=0] - Initial opacity for nav items\n   * @property {number} [finalOpacity=1] - Final opacity for nav items\n   * @property {number} [duration=0.6] - Animation duration in seconds\n   * @property {number} [bounce=0.2] - Amount of bounce in the animation (0 = no bounce)\n   */\n  navAnimationConfig = {\n    staggerDelay: 0.1,\n    initialY: 20,\n    finalY: 0,\n    initialOpacity: 0,\n    finalOpacity: 1,\n    duration: 0.6,\n    bounce: 0.2\n  }\n}) => {\n  _s();\n  var _navigationItems$, _animationConfig$thre, _animationConfig$once, _animationConfig$init;\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n  const [activeSection, setActiveSection] = useState(((_navigationItems$ = navigationItems[0]) === null || _navigationItems$ === void 0 ? void 0 : _navigationItems$.id) || 'about');\n  const [expandedNavItem, setExpandedNavItem] = useState(null);\n  const [sidebarMode, setSidebarMode] = useState('normal'); // 'normal', 'fixed', or 'end'\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  // ============================================================================\n  // LAYOUT CALCULATIONS\n  // ============================================================================\n  /**\n   * Calculate responsive widths based on contentCompression (0-10 scale)\n   * Higher compression values give more space to the content area\n   * and less to the sidebar, enabling a responsive experience\n   */\n  const compressionFactor = Math.min(Math.max(contentCompression, 0), 10) / 10;\n  const sidebarWidth = 45 - compressionFactor * 5; // 40-45% range\n  const contentWidth = 55 - compressionFactor * 5; // 55-60% range\n  const contentPadding = 2 + compressionFactor * 2; // 2-4rem range\n\n  // ============================================================================\n  // REFS\n  // ============================================================================\n  // DOM element references for manipulation and measurement\n  const containerRef = useRef(null);\n  const sidebarRef = useRef(null);\n  const contentRef = useRef(null);\n  const sidebarWrapperRef = useRef(null);\n  const navRef = useRef(null);\n\n  // ============================================================================\n  // ANIMATION CONTROLS\n  // ============================================================================\n  const controls = useAnimation();\n  const navControls = useAnimation();\n\n  // Detect when components come into view to trigger animations\n  const isInView = useInView(containerRef, {\n    threshold: (_animationConfig$thre = animationConfig === null || animationConfig === void 0 ? void 0 : animationConfig.threshold) !== null && _animationConfig$thre !== void 0 ? _animationConfig$thre : 0.2,\n    once: (_animationConfig$once = animationConfig === null || animationConfig === void 0 ? void 0 : animationConfig.once) !== null && _animationConfig$once !== void 0 ? _animationConfig$once : true\n  });\n  const isNavInView = useInView(navRef, {\n    threshold: 0.1,\n    once: true\n  });\n\n  // ============================================================================\n  // SECTION REFS\n  // ============================================================================\n  /**\n   * Create refs for each section to enable scroll tracking and navigation\n   * We pre-allocate a fixed number of refs to efficiently support dynamic sections\n   */\n  const section0Ref = useRef(null);\n  const section1Ref = useRef(null);\n  const section2Ref = useRef(null);\n  const section3Ref = useRef(null);\n  const section4Ref = useRef(null);\n  const section5Ref = useRef(null);\n  const section6Ref = useRef(null);\n  const section7Ref = useRef(null);\n\n  // Memoize the array of refs to prevent unnecessary re-renders\n  const sectionRefs = useMemo(() => [section0Ref, section1Ref, section2Ref, section3Ref, section4Ref, section5Ref, section6Ref, section7Ref], []);\n\n  // Create a mapping between section IDs and their corresponding refs\n  const sectionRefsMap = useMemo(() => {\n    const refsMap = {};\n    navigationItems.forEach((item, index) => {\n      if (index < sectionRefs.length) {\n        refsMap[item.id] = sectionRefs[index];\n      }\n    });\n    return refsMap;\n  }, [navigationItems, sectionRefs]);\n\n  // ============================================================================\n  // EVENT HANDLERS\n  // ============================================================================\n  /**\n   * Handle navigation item hover state\n   * The expanded state affects the visual appearance of the navigation item\n   */\n  const handleNavItemHover = useCallback(section => {\n    setExpandedNavItem(section);\n  }, []);\n  const handleNavItemLeave = useCallback(() => {\n    setExpandedNavItem(null);\n  }, []);\n\n  /**\n   * Scroll to the specified section with smooth behavior\n   * Updates the active section state and triggers the onSectionChange callback\n   */\n  const scrollToSection = useCallback(sectionId => {\n    setActiveSection(sectionId);\n    if (onSectionChange) {\n      onSectionChange(sectionId);\n    }\n    const sectionRef = sectionRefsMap[sectionId];\n    if (sectionRef !== null && sectionRef !== void 0 && sectionRef.current) {\n      sectionRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  }, [onSectionChange, sectionRefsMap]);\n\n  // ============================================================================\n  // EFFECTS\n  // ============================================================================\n  /**\n   * Initial entrance animation effect\n   * Triggers when the component comes into view\n   */\n  useEffect(() => {\n    if (isInView) {\n      var _animationConfig$dura, _animationConfig$dura2;\n      controls.start({\n        opacity: 1,\n        y: 0,\n        transition: {\n          duration: (_animationConfig$dura = animationConfig === null || animationConfig === void 0 ? void 0 : animationConfig.duration) !== null && _animationConfig$dura !== void 0 ? _animationConfig$dura : 0.8,\n          ease: \"easeOut\",\n          delay: 0.1\n        }\n      });\n\n      // Mark as initialized after animation completes to enable other behaviors\n      const timeout = setTimeout(() => {\n        setIsInitialized(true);\n      }, ((_animationConfig$dura2 = animationConfig === null || animationConfig === void 0 ? void 0 : animationConfig.duration) !== null && _animationConfig$dura2 !== void 0 ? _animationConfig$dura2 : 0.8) * 1000 + 100);\n      return () => clearTimeout(timeout);\n    }\n  }, [isInView, controls, animationConfig === null || animationConfig === void 0 ? void 0 : animationConfig.duration]);\n\n  /**\n   * Navigation menu staggered animation effect\n   * Creates a cascading reveal of navigation items\n   */\n  useEffect(() => {\n    if (isNavInView) {\n      navControls.start(i => ({\n        opacity: navAnimationConfig.finalOpacity,\n        y: navAnimationConfig.finalY,\n        transition: {\n          duration: navAnimationConfig.duration,\n          delay: i * navAnimationConfig.staggerDelay,\n          ease: [0.215, 0.61, 0.355, 1 + navAnimationConfig.bounce]\n        }\n      }));\n    }\n  }, [isNavInView, navControls, navAnimationConfig]);\n\n  /**\n   * Set up intersection observer to detect which section is currently in view\n   * This enables automatic navigation highlighting as the user scrolls\n   */\n  useEffect(() => {\n    const sectionElements = Object.values(sectionRefsMap).map(ref => ref.current).filter(Boolean);\n    if (sectionElements.length === 0) return;\n\n    // Configure the intersection observer with appropriate thresholds\n    // The rootMargin is carefully tuned to provide a natural-feeling activation zone\n    const options = {\n      root: null,\n      rootMargin: '-10% 0px -70% 0px',\n      // Top margin, right margin, bottom margin, left margin\n      threshold: 0\n    };\n\n    // Callback fires whenever an observed element enters or exits the viewport\n    const callback = entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          const sectionId = entry.target.getAttribute('data-section');\n          if (sectionId && sectionId !== activeSection) {\n            setActiveSection(sectionId);\n            if (onSectionChange) {\n              onSectionChange(sectionId);\n            }\n          }\n        }\n      });\n    };\n    const observer = new IntersectionObserver(callback, options);\n    sectionElements.forEach(element => observer.observe(element));\n    return () => observer.disconnect();\n  }, [activeSection, onSectionChange, sectionRefsMap]);\n\n  /**\n   * Implement three-phase scroll behavior for the sidebar\n   * \n   * Phase 1 (normal): Sidebar behaves as a normal element in document flow\n   * Phase 2 (fixed): Sidebar becomes fixed as user scrolls down\n   * Phase 3 (end): Sidebar sticks to bottom of its container when scroll reaches the end\n   * \n   * This creates an elegant UX where the navigation is always accessible\n   */\n  useEffect(() => {\n    if (!isInitialized || !containerRef.current || !sidebarRef.current || !sidebarWrapperRef.current) {\n      return;\n    }\n\n    // Skip on mobile - three-phase behavior doesn't work well on small screens\n    const isMobile = window.innerWidth <= 768;\n    if (isMobile) {\n      return;\n    }\n    const container = containerRef.current;\n    const sidebar = sidebarRef.current;\n    const sidebarWrapper = sidebarWrapperRef.current;\n    let containerRect;\n    let wrapperRect;\n    let sidebarHeight;\n\n    // Update measurements function - called on scroll and resize\n    const updateMeasurements = () => {\n      containerRect = container.getBoundingClientRect();\n      wrapperRect = sidebarWrapper.getBoundingClientRect();\n      sidebarHeight = sidebar.offsetHeight;\n    };\n\n    // First, get accurate measurements\n    updateMeasurements();\n\n    /**\n     * Handle scroll event with performance optimizations\n     * Determines which phase the sidebar should be in based on scroll position\n     */\n    const handleScroll = () => {\n      // Skip on mobile\n      if (window.innerWidth <= 768) return;\n\n      // Update measurements if necessary\n      updateMeasurements();\n\n      // Calculate phase transition points\n      const startFixPoint = containerRect.top <= topOffset;\n      const endFixPoint = containerRect.bottom <= sidebarHeight + topOffset;\n\n      // Determine the current scroll phase\n      let newMode;\n      if (!startFixPoint) {\n        newMode = 'normal';\n      } else if (startFixPoint && !endFixPoint) {\n        newMode = 'fixed';\n      } else {\n        newMode = 'end';\n      }\n\n      // Only update DOM if the mode changes (performance optimization)\n      if (sidebarMode !== newMode) {\n        setSidebarMode(newMode);\n        if (newMode === 'normal') {\n          // Phase 1: Normal flow\n          sidebar.style.position = 'relative';\n          sidebar.style.top = '0';\n          sidebar.style.left = '0';\n          sidebar.style.width = '';\n          sidebar.style.bottom = '';\n        } else if (newMode === 'fixed') {\n          // Phase 2: Fixed position\n          sidebar.style.position = 'fixed';\n          sidebar.style.top = `${topOffset}px`;\n          sidebar.style.width = `${wrapperRect.width}px`;\n          sidebar.style.left = `${wrapperRect.left}px`;\n          sidebar.style.bottom = '';\n        } else if (newMode === 'end') {\n          // Phase 3: End position\n          sidebar.style.position = 'absolute';\n          sidebar.style.top = 'auto';\n          sidebar.style.bottom = '0';\n          sidebar.style.left = '0';\n          sidebar.style.width = '';\n        }\n      }\n    };\n\n    // Add scroll event listener with debouncing via requestAnimationFrame\n    let ticking = false;\n    const scrollListener = () => {\n      if (!ticking) {\n        window.requestAnimationFrame(() => {\n          handleScroll();\n          ticking = false;\n        });\n        ticking = true;\n      }\n    };\n    window.addEventListener('scroll', scrollListener, {\n      passive: true\n    });\n\n    // Handle window resize\n    const handleResize = () => {\n      // Update measurements\n      updateMeasurements();\n      const isMobile = window.innerWidth <= 768;\n      if (isMobile) {\n        // Reset styles for mobile\n        sidebar.style.position = '';\n        sidebar.style.top = '';\n        sidebar.style.bottom = '';\n        sidebar.style.left = '';\n        sidebar.style.width = '';\n        setSidebarMode('normal');\n      } else {\n        // Apply current mode\n        handleScroll();\n      }\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Initial setup\n    handleResize();\n    handleScroll();\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [isInitialized, topOffset, sidebarMode]);\n\n  // ============================================================================\n  // RENDERING FUNCTIONS\n  // ============================================================================\n  /**\n   * Render the profile information section with name, role, and tagline\n   * Uses consistent styling to maintain visual hierarchy\n   */\n  const renderProfileInfo = () => /*#__PURE__*/_jsxDEV(ProfileInfo, {\n    children: [/*#__PURE__*/_jsxDEV(ProfileName, {\n      highlightColor: highlightColor,\n      children: (person === null || person === void 0 ? void 0 : person.name) || 'Profile Name'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfileRole, {\n      highlightColor: highlightColor,\n      fontFamily: fontFamily,\n      children: (person === null || person === void 0 ? void 0 : person.role) || 'Role'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this), (person === null || person === void 0 ? void 0 : person.tagline) && /*#__PURE__*/_jsxDEV(ProfileTagline, {\n      textColor: textColor,\n      fontFamily: fontFamily,\n      children: person.tagline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 501,\n    columnNumber: 5\n  }, this);\n\n  /**\n   * Render the navigation links with animated indicators\n   * Uses Framer Motion for staggered animations and smooth transitions\n   */\n  const renderNavLinks = () => /*#__PURE__*/_jsxDEV(NavLinks, {\n    ref: navRef,\n    children: navigationItems.map((navItem, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"nav-link-container\",\n      custom: index,\n      initial: {\n        opacity: navAnimationConfig.initialOpacity,\n        y: navAnimationConfig.initialY\n      },\n      animate: navControls,\n      style: {\n        position: 'relative',\n        marginBottom: '1rem',\n        display: 'flex',\n        alignItems: 'center',\n        willChange: 'transform, opacity',\n        transformOrigin: 'left center'\n      },\n      onMouseEnter: () => handleNavItemHover(navItem.id),\n      onMouseLeave: handleNavItemLeave,\n      children: [/*#__PURE__*/_jsxDEV(NavLine, {\n        active: activeSection === navItem.id || expandedNavItem === navItem.id,\n        highlightColor: highlightColor,\n        minLineWidth: minLineWidth,\n        maxLineWidth: maxLineWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavButton, {\n        onClick: () => scrollToSection(navItem.id),\n        active: activeSection === navItem.id || expandedNavItem === navItem.id,\n        highlightColor: highlightColor,\n        textColor: textColor,\n        children: navItem.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 11\n      }, this)]\n    }, navItem.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 529,\n    columnNumber: 5\n  }, this);\n\n  /**\n   * Render statistics section with animated hover effects\n   * Shows quantifiable achievements or metrics in an engaging way\n   */\n  const renderStats = () => {\n    if (!showStats || !(person !== null && person !== void 0 && person.stats) || person.stats.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(StatsContainer, {\n      children: person.stats.map((stat, statIdx) => /*#__PURE__*/_jsxDEV(Stat, {\n        children: [/*#__PURE__*/_jsxDEV(StatValue, {\n          highlightColor: highlightColor,\n          children: stat.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StatLabel, {\n          textColor: textColor,\n          children: stat.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 13\n        }, this)]\n      }, statIdx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 7\n    }, this);\n  };\n\n  /**\n   * Render generic section content with appropriate styling\n   * Handles both string content and React nodes\n   */\n  const renderSectionContent = content => {\n    if (!content) return null;\n    if (typeof content === 'string') {\n      return /*#__PURE__*/_jsxDEV(SectionContent, {\n        textColor: textColor,\n        fontFamily: fontFamily,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 9\n      }, this);\n    }\n    return content;\n  };\n\n  /**\n   * Render the About section with biography paragraphs and statistics\n   */\n  const renderAboutSection = section => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [(person === null || person === void 0 ? void 0 : person.bio) && person.bio.map((paragraph, idx) => /*#__PURE__*/_jsxDEV(SectionContent, {\n        textColor: textColor,\n        fontFamily: fontFamily,\n        children: paragraph\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 11\n      }, this)), renderStats()]\n    }, void 0, true);\n  };\n\n  /**\n   * Render the Experience section with professional history\n   */\n  const renderExperienceSection = section => {\n    if (person !== null && person !== void 0 && person.experience) {\n      return person.experience.map((item, expIdx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: renderSectionContent(item.content)\n      }, expIdx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 9\n      }, this));\n    }\n    return renderSectionContent(\"Throughout my career, I've specialized in developing software systems that seamlessly \" + \"integrate front-end experiences with robust back-end architectures. My experience spans \" + \"various domains, from interactive media to data visualization systems.\");\n  };\n\n  /**\n   * Render the Projects section showcasing key work\n   */\n  const renderProjectsSection = section => {\n    if (person !== null && person !== void 0 && person.projects) {\n      return person.projects.map((item, projIdx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: renderSectionContent(item.content)\n      }, projIdx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 9\n      }, this));\n    }\n    return null;\n  };\n\n  /**\n   * Render appropriate content based on section ID\n   * Allows for both default section renderers and custom content override\n   */\n  const renderSection = section => {\n    if (section.content) {\n      return renderSectionContent(section.content);\n    }\n    switch (section.id) {\n      case 'about':\n        return renderAboutSection(section);\n      case 'experience':\n        return renderExperienceSection(section);\n      case 'projects':\n        return renderProjectsSection(section);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    ref: containerRef,\n    initial: {\n      opacity: 0,\n      y: (_animationConfig$init = animationConfig === null || animationConfig === void 0 ? void 0 : animationConfig.initialY) !== null && _animationConfig$init !== void 0 ? _animationConfig$init : 30\n    },\n    animate: controls,\n    children: [/*#__PURE__*/_jsxDEV(SidebarWrapper, {\n      ref: sidebarWrapperRef,\n      sidebarWidth: sidebarWidth,\n      children: /*#__PURE__*/_jsxDEV(Sidebar, {\n        ref: sidebarRef,\n        children: [renderProfileInfo(), renderNavLinks()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentSection, {\n      ref: contentRef,\n      contentWidth: contentWidth,\n      contentPadding: contentPadding,\n      children: [navigationItems.map((section, index) => {\n        if (index >= sectionRefs.length) return null;\n        return /*#__PURE__*/_jsxDEV(Section, {\n          ref: sectionRefs[index],\n          \"data-section\": section.id,\n          id: section.id,\n          children: renderSection(section)\n        }, section.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 13\n        }, this);\n      }), additionalSections.map((section, index) => /*#__PURE__*/_jsxDEV(Section, {\n        children: [section.title && /*#__PURE__*/_jsxDEV(SectionTitle, {\n          highlightColor: highlightColor,\n          children: section.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 15\n        }, this), renderSectionContent(section.content)]\n      }, `additional-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 691,\n    columnNumber: 5\n  }, this);\n};\n\n// ============================================================================\n// STYLED COMPONENTS\n// ============================================================================\n\n/**\n * Main container for the profile card\n * Uses Framer Motion for entrance animations\n */\n_s(PersonProfileCard, \"M+AXvVnDDdqKZpLm2KN/C/G1poI=\", false, function () {\n  return [useAnimation, useAnimation, useInView, useInView];\n});\n_c = PersonProfileCard;\nconst Container = styled(motion.div)`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  max-width: 1300px;\n  margin: 0 auto;\n  min-height: 70vh;\n  position: relative;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\n/**\n * Wrapper for the sidebar to establish sizing\n */\n_c2 = Container;\nconst SidebarWrapper = styled.div`\n  width: ${props => props.sidebarWidth}%;\n  position: relative;\n\n  @media (max-width: 768px) {\n    width: 100% !important;\n  }\n`;\n\n/**\n * Sidebar containing profile info and navigation\n */\n_c3 = SidebarWrapper;\nconst Sidebar = styled.div`\n  padding: 3rem 2rem 2rem 0;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  position: relative;\n  top: 0;\n\n  @media (max-width: 768px) {\n    position: relative !important;\n    padding: 2rem 1rem !important;\n    align-items: center;\n    text-align: center;\n    top: 0 !important;\n    bottom: auto !important;\n  }\n`;\n\n/**\n * Content section containing all main profile information\n */\n_c4 = Sidebar;\nconst ContentSection = styled.div`\n  width: ${props => props.contentWidth}%;\n  padding: 3rem 0 2rem ${props => props.contentPadding}rem;\n  margin-left: auto;\n\n  @media (max-width: 768px) {\n    width: 100% !important;\n    padding: 2rem 1rem !important;\n    margin-left: 0 !important;\n  }\n`;\n\n/**\n * Individual content section (about, experience, etc.)\n */\n_c5 = ContentSection;\nconst Section = styled.div`\n  margin-bottom: 3rem;\n  scroll-margin-top: 2rem;\n`;\n\n/**\n * Profile information container\n */\n_c6 = Section;\nconst ProfileInfo = styled.div`\n  margin-bottom: 2rem;\n  padding-left: 5px;\n\n  @media (max-width: 768px) {\n    text-align: center;\n  }\n`;\n\n/**\n * Profile name with highlight styling\n */\n_c7 = ProfileInfo;\nconst ProfileName = styled.h1`\n  font-size: 2.8rem;\n  font-weight: 300;\n  color: ${props => props.highlightColor};\n  letter-spacing: 0.05em;\n  margin-bottom: 0.5rem;\n\n  @media (max-width: 768px) {\n    font-size: 2.2rem !important;\n  }\n`;\n\n/**\n * Profile role or title\n */\n_c8 = ProfileName;\nconst ProfileRole = styled.h2`\n  font-size: 1.2rem;\n  font-weight: 300;\n  margin-bottom: 2rem;\n  color: ${props => props.highlightColor}B3; /* 70% opacity */\n  letter-spacing: 0.05em;\n  font-family: ${props => props.fontFamily};\n  font-style: italic;\n`;\n\n/**\n * Profile tagline or brief description\n */\n_c9 = ProfileRole;\nconst ProfileTagline = styled.p`\n  font-size: 1.1rem;\n  line-height: 1.6;\n  margin-bottom: 3rem;\n  max-width: 90%;\n  color: ${props => props.textColor};\n  font-family: ${props => props.fontFamily};\n  font-weight: 300;\n\n  @media (max-width: 768px) {\n    max-width: 100% !important;\n    text-align: center;\n  }\n`;\n\n/**\n * Navigation links container\n */\n_c10 = ProfileTagline;\nconst NavLinks = styled.div`\n  margin-top: 3rem;\n  will-change: transform, opacity;\n  transform: translate3d(0,0,0);\n  backface-visibility: hidden;\n  -webkit-font-smoothing: antialiased;\n\n  @media (max-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    width: 100%;\n  }\n`;\n\n/**\n * Navigation indicator line\n * Expands when active or hovered\n */\n_c11 = NavLinks;\nconst NavLine = styled.div`\n  position: absolute;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  width: ${props => props.active ? props.maxLineWidth : props.minLineWidth}px;\n  height: 0.75px;\n  background-color: ${props => props.active ? `${props.highlightColor}E6` /* 90% opacity */ : `${props.highlightColor}80` /* 50% opacity */};\n  transition: width 0.3s ease, background-color 0.3s ease;\n`;\n\n/**\n * Navigation button/link\n */\n_c12 = NavLine;\nconst NavButton = styled.button`\n  position: relative;\n  display: block;\n  padding: 0.5rem 0 0.5rem 40px;\n  font-size: 0.85rem;\n  letter-spacing: 0.1em;\n  background: transparent;\n  border: none;\n  text-align: left;\n  outline: none;\n  box-shadow: none;\n  transition: color 0.5s ease, transform 0.5s ease;\n  color: ${props => props.active ? props.highlightColor : props.textColor};\n  cursor: pointer;\n  transform: ${props => props.active ? 'translateX(10px)' : 'none'};\n  width: fit-content;\n\n  @media (max-width: 768px) {\n    padding: 0.5rem 0 0.5rem 40px;\n  }\n`;\n\n/**\n * Stats container for displaying statistics\n */\n_c13 = NavButton;\nconst StatsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  margin-top: 3rem;\n  width: 100%;\n\n  @media (max-width: 768px) {\n    justify-content: center !important;\n    gap: 2rem;\n  }\n\n  @media (max-width: 480px) {\n    flex-direction: column !important;\n    align-items: center !important;\n    gap: 1.5rem !important;\n  }\n`;\n\n/**\n * Individual stat item with hover animation\n */\n_c14 = StatsContainer;\nconst Stat = styled.div`\n  flex: 1;\n  text-align: center;\n  padding: 0 1rem;\n  min-width: 100px;\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: translateY(-5px);\n  }\n\n  @media (max-width: 480px) {\n    width: 100% !important;\n    max-width: 180px !important;\n  }\n`;\n\n/**\n * Stat value (number) styling\n */\n_c15 = Stat;\nconst StatValue = styled.div`\n  font-size: 2.5rem;\n  font-weight: 100;\n  color: ${props => props.highlightColor};\n  margin-bottom: 0.5rem;\n`;\n\n/**\n * Stat label styling\n */\n_c16 = StatValue;\nconst StatLabel = styled.div`\n  font-size: 0.85rem;\n  color: ${props => props.textColor}CC; /* 80% opacity */\n  text-transform: uppercase;\n  letter-spacing: 0.1em;\n`;\n\n/**\n * Section content paragraph styling\n */\n_c17 = StatLabel;\nconst SectionContent = styled.p`\n  font-size: 1rem;\n  line-height: 1.8;\n  margin-bottom: 1.5rem;\n  color: ${props => props.textColor};\n  font-family: ${props => props.fontFamily};\n  font-weight: 300;\n`;\n\n/**\n * Section title styling for additional sections\n */\n_c18 = SectionContent;\nconst SectionTitle = styled.h3`\n  font-size: 1.4rem;\n  color: ${props => props.highlightColor};\n  margin-bottom: 1rem;\n  font-weight: 300;\n`;\n_c19 = SectionTitle;\nexport default PersonProfileCard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19;\n$RefreshReg$(_c, \"PersonProfileCard\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"SidebarWrapper\");\n$RefreshReg$(_c4, \"Sidebar\");\n$RefreshReg$(_c5, \"ContentSection\");\n$RefreshReg$(_c6, \"Section\");\n$RefreshReg$(_c7, \"ProfileInfo\");\n$RefreshReg$(_c8, \"ProfileName\");\n$RefreshReg$(_c9, \"ProfileRole\");\n$RefreshReg$(_c10, \"ProfileTagline\");\n$RefreshReg$(_c11, \"NavLinks\");\n$RefreshReg$(_c12, \"NavLine\");\n$RefreshReg$(_c13, \"NavButton\");\n$RefreshReg$(_c14, \"StatsContainer\");\n$RefreshReg$(_c15, \"Stat\");\n$RefreshReg$(_c16, \"StatValue\");\n$RefreshReg$(_c17, \"StatLabel\");\n$RefreshReg$(_c18, \"SectionContent\");\n$RefreshReg$(_c19, \"SectionTitle\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","useMemo","motion","useInView","useAnimation","styled","css","jsxDEV","_jsxDEV","Fragment","_Fragment","PersonProfileCard","person","animationConfig","threshold","once","initialY","duration","additionalSections","onSectionChange","topOffset","showStats","highlightColor","textColor","minLineWidth","maxLineWidth","fontFamily","navigationItems","id","label","content","contentCompression","navAnimationConfig","staggerDelay","finalY","initialOpacity","finalOpacity","bounce","_s","_navigationItems$","_animationConfig$thre","_animationConfig$once","_animationConfig$init","activeSection","setActiveSection","expandedNavItem","setExpandedNavItem","sidebarMode","setSidebarMode","isInitialized","setIsInitialized","compressionFactor","Math","min","max","sidebarWidth","contentWidth","contentPadding","containerRef","sidebarRef","contentRef","sidebarWrapperRef","navRef","controls","navControls","isInView","isNavInView","section0Ref","section1Ref","section2Ref","section3Ref","section4Ref","section5Ref","section6Ref","section7Ref","sectionRefs","sectionRefsMap","refsMap","forEach","item","index","length","handleNavItemHover","section","handleNavItemLeave","scrollToSection","sectionId","sectionRef","current","scrollIntoView","behavior","block","_animationConfig$dura","_animationConfig$dura2","start","opacity","y","transition","ease","delay","timeout","setTimeout","clearTimeout","i","sectionElements","Object","values","map","ref","filter","Boolean","options","root","rootMargin","callback","entries","entry","isIntersecting","target","getAttribute","observer","IntersectionObserver","element","observe","disconnect","isMobile","window","innerWidth","container","sidebar","sidebarWrapper","containerRect","wrapperRect","sidebarHeight","updateMeasurements","getBoundingClientRect","offsetHeight","handleScroll","startFixPoint","top","endFixPoint","bottom","newMode","style","position","left","width","ticking","scrollListener","requestAnimationFrame","addEventListener","passive","handleResize","removeEventListener","renderProfileInfo","ProfileInfo","children","ProfileName","name","fileName","_jsxFileName","lineNumber","columnNumber","ProfileRole","role","tagline","ProfileTagline","renderNavLinks","NavLinks","navItem","div","className","custom","initial","animate","marginBottom","display","alignItems","willChange","transformOrigin","onMouseEnter","onMouseLeave","NavLine","active","NavButton","onClick","renderStats","stats","StatsContainer","stat","statIdx","Stat","StatValue","value","StatLabel","renderSectionContent","SectionContent","renderAboutSection","bio","paragraph","idx","renderExperienceSection","experience","expIdx","renderProjectsSection","projects","projIdx","renderSection","Container","SidebarWrapper","Sidebar","ContentSection","Section","title","SectionTitle","_c","_c2","props","_c3","_c4","_c5","_c6","_c7","h1","_c8","h2","_c9","p","_c10","_c11","_c12","button","_c13","_c14","_c15","_c16","_c17","_c18","h3","_c19","$RefreshReg$"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/core/effects/holdereffects/PersonProfileCard.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect, useCallback, useMemo } from 'react';\nimport { motion, useInView, useAnimation } from 'framer-motion';\nimport styled, { css } from 'styled-components';\n\n/**\n * PersonProfileCard Component\n * \n * A sophisticated profile card component with smooth animations, responsive design, and \n * a three-phase scroll behavior that provides an elegant user experience.\n * \n * FEATURES:\n * - Three-phase scroll behavior (normal, fixed, end positions)\n * - Animated navigation with staggered reveal effects\n * - Responsive design with mobile-specific optimizations\n * - Performant scroll handling with request animation frame\n * - Optional statistics display with hover animations\n * - Customizable colors, sizes, and animations\n * \n * @param {Object} props - Component props\n */\nconst PersonProfileCard = ({\n  /**\n   * Person data object containing profile information\n   * @type {Object}\n   * @property {string} name - Person's name\n   * @property {string} role - Person's professional role or title\n   * @property {string} [tagline] - Brief description or personal statement\n   * @property {Array<string>} [bio] - Array of biography paragraphs\n   * @property {Array<Object>} [stats] - Array of statistics objects with value and label\n   * @property {Array<Object>} [experience] - Array of experience items with content\n   * @property {Array<Object>} [projects] - Array of project items with content\n   */\n  person = {}, \n\n  /**\n   * Animation configuration for the main component reveal\n   * @type {Object}\n   * @property {number} [threshold=0.2] - Visibility threshold to trigger animation (0-1)\n   * @property {boolean} [once=true] - Whether animation should only play once\n   * @property {number} [initialY=30] - Initial Y offset for animation\n   * @property {number} [duration=0.8] - Animation duration in seconds\n   */\n  animationConfig = {\n    threshold: 0.2,\n    once: true,\n    initialY: 30,\n    duration: 0.8\n  },\n\n  /**\n   * Additional content sections to display after the main navigation sections\n   * @type {Array<Object>}\n   * @property {string} [title] - Section title\n   * @property {string|React.ReactNode} [content] - Section content\n   */\n  additionalSections = [],\n\n  /**\n   * Callback function when active section changes\n   * @type {Function}\n   * @param {string} sectionId - ID of the newly active section\n   */\n  onSectionChange = null,\n\n  /**\n   * Top offset in pixels for the fixed sidebar phase\n   * Controls when the sidebar switches to the fixed position\n   * @type {number}\n   */\n  topOffset = 100,\n\n  /**\n   * Whether to show statistics section\n   * @type {boolean}\n   */\n  showStats = true,\n\n  /**\n   * Primary highlight color for headings and interactive elements\n   * @type {string}\n   */\n  highlightColor = '#bfad7f',\n\n  /**\n   * Main text color for content\n   * @type {string}\n   */\n  textColor = 'rgba(224, 224, 224, 0.7)',\n\n  /**\n   * Minimum width for navigation indicator lines in pixels\n   * @type {number}\n   */\n  minLineWidth = 10,\n\n  /**\n   * Maximum width for navigation indicator lines in pixels\n   * @type {number}\n   */\n  maxLineWidth = 40,\n\n  /**\n   * Font family for text content\n   * @type {string}\n   */\n  fontFamily = '\"Garamond\", \"Adobe Caslon Pro\", serif',\n\n  /**\n   * Navigation items for the sidebar\n   * @type {Array<Object>}\n   * @property {string} id - Unique identifier for the section\n   * @property {string} label - Display label for the navigation item\n   * @property {React.ReactNode|null} [content] - Optional content to override default section content\n   */\n  navigationItems = [\n    { id: 'about', label: 'ABOUT', content: null },\n    { id: 'experience', label: 'EXPERIENCE', content: null },\n    { id: 'projects', label: 'PROJECTS', content: null }\n  ],\n\n  /**\n   * Content compression level (0-10)\n   * Controls the width distribution between sidebar and content.\n   * Higher values give more space to content, less to sidebar.\n   * @type {number}\n   */\n  contentCompression = 0,\n\n  /**\n   * Navigation animation configuration\n   * @type {Object}\n   * @property {number} [staggerDelay=0.1] - Delay between each nav item animation\n   * @property {number} [initialY=20] - Initial Y offset for nav items\n   * @property {number} [finalY=0] - Final Y position for nav items\n   * @property {number} [initialOpacity=0] - Initial opacity for nav items\n   * @property {number} [finalOpacity=1] - Final opacity for nav items\n   * @property {number} [duration=0.6] - Animation duration in seconds\n   * @property {number} [bounce=0.2] - Amount of bounce in the animation (0 = no bounce)\n   */\n  navAnimationConfig = {\n    staggerDelay: 0.1,\n    initialY: 20,\n    finalY: 0,\n    initialOpacity: 0,\n    finalOpacity: 1,\n    duration: 0.6,\n    bounce: 0.2\n  }\n}) => {\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n  const [activeSection, setActiveSection] = useState(navigationItems[0]?.id || 'about');\n  const [expandedNavItem, setExpandedNavItem] = useState(null);\n  const [sidebarMode, setSidebarMode] = useState('normal'); // 'normal', 'fixed', or 'end'\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  // ============================================================================\n  // LAYOUT CALCULATIONS\n  // ============================================================================\n  /**\n   * Calculate responsive widths based on contentCompression (0-10 scale)\n   * Higher compression values give more space to the content area\n   * and less to the sidebar, enabling a responsive experience\n   */\n  const compressionFactor = Math.min(Math.max(contentCompression, 0), 10) / 10;\n  const sidebarWidth = 45 - (compressionFactor * 5); // 40-45% range\n  const contentWidth = 55 - (compressionFactor * 5); // 55-60% range\n  const contentPadding = 2 + (compressionFactor * 2); // 2-4rem range\n\n  // ============================================================================\n  // REFS\n  // ============================================================================\n  // DOM element references for manipulation and measurement\n  const containerRef = useRef(null);\n  const sidebarRef = useRef(null);\n  const contentRef = useRef(null);\n  const sidebarWrapperRef = useRef(null);\n  const navRef = useRef(null);\n  \n  // ============================================================================\n  // ANIMATION CONTROLS\n  // ============================================================================\n  const controls = useAnimation();\n  const navControls = useAnimation();\n  \n  // Detect when components come into view to trigger animations\n  const isInView = useInView(containerRef, {\n    threshold: animationConfig?.threshold ?? 0.2,\n    once: animationConfig?.once ?? true\n  });\n  \n  const isNavInView = useInView(navRef, {\n    threshold: 0.1,\n    once: true\n  });\n\n  // ============================================================================\n  // SECTION REFS\n  // ============================================================================\n  /**\n   * Create refs for each section to enable scroll tracking and navigation\n   * We pre-allocate a fixed number of refs to efficiently support dynamic sections\n   */\n  const section0Ref = useRef(null);\n  const section1Ref = useRef(null);\n  const section2Ref = useRef(null);\n  const section3Ref = useRef(null);\n  const section4Ref = useRef(null);\n  const section5Ref = useRef(null);\n  const section6Ref = useRef(null);\n  const section7Ref = useRef(null);\n  \n  // Memoize the array of refs to prevent unnecessary re-renders\n  const sectionRefs = useMemo(() => [\n    section0Ref, section1Ref, section2Ref, section3Ref,\n    section4Ref, section5Ref, section6Ref, section7Ref\n  ], []);\n  \n  // Create a mapping between section IDs and their corresponding refs\n  const sectionRefsMap = useMemo(() => {\n    const refsMap = {};\n    navigationItems.forEach((item, index) => {\n      if (index < sectionRefs.length) {\n        refsMap[item.id] = sectionRefs[index];\n      }\n    });\n    return refsMap;\n  }, [navigationItems, sectionRefs]);\n\n  // ============================================================================\n  // EVENT HANDLERS\n  // ============================================================================\n  /**\n   * Handle navigation item hover state\n   * The expanded state affects the visual appearance of the navigation item\n   */\n  const handleNavItemHover = useCallback((section) => {\n    setExpandedNavItem(section);\n  }, []);\n  \n  const handleNavItemLeave = useCallback(() => {\n    setExpandedNavItem(null);\n  }, []);\n\n  /**\n   * Scroll to the specified section with smooth behavior\n   * Updates the active section state and triggers the onSectionChange callback\n   */\n  const scrollToSection = useCallback((sectionId) => {\n    setActiveSection(sectionId);\n    \n    if (onSectionChange) {\n      onSectionChange(sectionId);\n    }\n    \n    const sectionRef = sectionRefsMap[sectionId];\n    if (sectionRef?.current) {\n      sectionRef.current.scrollIntoView({ \n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  }, [onSectionChange, sectionRefsMap]);\n\n  // ============================================================================\n  // EFFECTS\n  // ============================================================================\n  /**\n   * Initial entrance animation effect\n   * Triggers when the component comes into view\n   */\n  useEffect(() => {\n    if (isInView) {\n      controls.start({ \n        opacity: 1, \n        y: 0,\n        transition: { \n          duration: animationConfig?.duration ?? 0.8,\n          ease: \"easeOut\",\n          delay: 0.1\n        }\n      });\n      \n      // Mark as initialized after animation completes to enable other behaviors\n      const timeout = setTimeout(() => {\n        setIsInitialized(true);\n      }, (animationConfig?.duration ?? 0.8) * 1000 + 100);\n      \n      return () => clearTimeout(timeout);\n    }\n  }, [isInView, controls, animationConfig?.duration]);\n\n  /**\n   * Navigation menu staggered animation effect\n   * Creates a cascading reveal of navigation items\n   */\n  useEffect(() => {\n    if (isNavInView) {\n      navControls.start(i => ({\n        opacity: navAnimationConfig.finalOpacity,\n        y: navAnimationConfig.finalY,\n        transition: {\n          duration: navAnimationConfig.duration,\n          delay: i * navAnimationConfig.staggerDelay,\n          ease: [0.215, 0.61, 0.355, 1 + navAnimationConfig.bounce]\n        }\n      }));\n    }\n  }, [isNavInView, navControls, navAnimationConfig]);\n\n  /**\n   * Set up intersection observer to detect which section is currently in view\n   * This enables automatic navigation highlighting as the user scrolls\n   */\n  useEffect(() => {\n    const sectionElements = Object.values(sectionRefsMap)\n      .map(ref => ref.current)\n      .filter(Boolean);\n    \n    if (sectionElements.length === 0) return;\n    \n    // Configure the intersection observer with appropriate thresholds\n    // The rootMargin is carefully tuned to provide a natural-feeling activation zone\n    const options = {\n      root: null,\n      rootMargin: '-10% 0px -70% 0px', // Top margin, right margin, bottom margin, left margin\n      threshold: 0\n    };\n    \n    // Callback fires whenever an observed element enters or exits the viewport\n    const callback = (entries) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          const sectionId = entry.target.getAttribute('data-section');\n          if (sectionId && sectionId !== activeSection) {\n            setActiveSection(sectionId);\n            \n            if (onSectionChange) {\n              onSectionChange(sectionId);\n            }\n          }\n        }\n      });\n    };\n    \n    const observer = new IntersectionObserver(callback, options);\n    sectionElements.forEach(element => observer.observe(element));\n    \n    return () => observer.disconnect();\n  }, [activeSection, onSectionChange, sectionRefsMap]);\n\n  /**\n   * Implement three-phase scroll behavior for the sidebar\n   * \n   * Phase 1 (normal): Sidebar behaves as a normal element in document flow\n   * Phase 2 (fixed): Sidebar becomes fixed as user scrolls down\n   * Phase 3 (end): Sidebar sticks to bottom of its container when scroll reaches the end\n   * \n   * This creates an elegant UX where the navigation is always accessible\n   */\n  useEffect(() => {\n    if (!isInitialized || !containerRef.current || !sidebarRef.current || !sidebarWrapperRef.current) {\n      return;\n    }\n    \n    // Skip on mobile - three-phase behavior doesn't work well on small screens\n    const isMobile = window.innerWidth <= 768;\n    if (isMobile) {\n      return;\n    }\n    \n    const container = containerRef.current;\n    const sidebar = sidebarRef.current;\n    const sidebarWrapper = sidebarWrapperRef.current;\n    \n    let containerRect;\n    let wrapperRect;\n    let sidebarHeight;\n    \n    // Update measurements function - called on scroll and resize\n    const updateMeasurements = () => {\n      containerRect = container.getBoundingClientRect();\n      wrapperRect = sidebarWrapper.getBoundingClientRect();\n      sidebarHeight = sidebar.offsetHeight;\n    };\n    \n    // First, get accurate measurements\n    updateMeasurements();\n    \n    /**\n     * Handle scroll event with performance optimizations\n     * Determines which phase the sidebar should be in based on scroll position\n     */\n    const handleScroll = () => {\n      // Skip on mobile\n      if (window.innerWidth <= 768) return;\n      \n      // Update measurements if necessary\n      updateMeasurements();\n      \n      // Calculate phase transition points\n      const startFixPoint = containerRect.top <= topOffset;\n      const endFixPoint = containerRect.bottom <= (sidebarHeight + topOffset);\n      \n      // Determine the current scroll phase\n      let newMode;\n      if (!startFixPoint) {\n        newMode = 'normal';\n      } else if (startFixPoint && !endFixPoint) {\n        newMode = 'fixed';\n      } else {\n        newMode = 'end';\n      }\n      \n      // Only update DOM if the mode changes (performance optimization)\n      if (sidebarMode !== newMode) {\n        setSidebarMode(newMode);\n        \n        if (newMode === 'normal') {\n          // Phase 1: Normal flow\n          sidebar.style.position = 'relative';\n          sidebar.style.top = '0';\n          sidebar.style.left = '0';\n          sidebar.style.width = '';\n          sidebar.style.bottom = '';\n        } \n        else if (newMode === 'fixed') {\n          // Phase 2: Fixed position\n          sidebar.style.position = 'fixed';\n          sidebar.style.top = `${topOffset}px`;\n          sidebar.style.width = `${wrapperRect.width}px`;\n          sidebar.style.left = `${wrapperRect.left}px`;\n          sidebar.style.bottom = '';\n        } \n        else if (newMode === 'end') {\n          // Phase 3: End position\n          sidebar.style.position = 'absolute';\n          sidebar.style.top = 'auto';\n          sidebar.style.bottom = '0';\n          sidebar.style.left = '0';\n          sidebar.style.width = '';\n        }\n      }\n    };\n    \n    // Add scroll event listener with debouncing via requestAnimationFrame\n    let ticking = false;\n    const scrollListener = () => {\n      if (!ticking) {\n        window.requestAnimationFrame(() => {\n          handleScroll();\n          ticking = false;\n        });\n        ticking = true;\n      }\n    };\n    \n    window.addEventListener('scroll', scrollListener, { passive: true });\n    \n    // Handle window resize\n    const handleResize = () => {\n      // Update measurements\n      updateMeasurements();\n      \n      const isMobile = window.innerWidth <= 768;\n      if (isMobile) {\n        // Reset styles for mobile\n        sidebar.style.position = '';\n        sidebar.style.top = '';\n        sidebar.style.bottom = '';\n        sidebar.style.left = '';\n        sidebar.style.width = '';\n        setSidebarMode('normal');\n      } else {\n        // Apply current mode\n        handleScroll();\n      }\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    // Initial setup\n    handleResize();\n    handleScroll();\n    \n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [isInitialized, topOffset, sidebarMode]);\n\n  // ============================================================================\n  // RENDERING FUNCTIONS\n  // ============================================================================\n  /**\n   * Render the profile information section with name, role, and tagline\n   * Uses consistent styling to maintain visual hierarchy\n   */\n  const renderProfileInfo = () => (\n    <ProfileInfo>\n      <ProfileName highlightColor={highlightColor}>\n        {person?.name || 'Profile Name'}\n      </ProfileName>\n      \n      <ProfileRole \n        highlightColor={highlightColor}\n        fontFamily={fontFamily}\n      >\n        {person?.role || 'Role'}\n      </ProfileRole>\n      \n      {person?.tagline && (\n        <ProfileTagline \n          textColor={textColor}\n          fontFamily={fontFamily}\n        >\n          {person.tagline}\n        </ProfileTagline>\n      )}\n    </ProfileInfo>\n  );\n\n  /**\n   * Render the navigation links with animated indicators\n   * Uses Framer Motion for staggered animations and smooth transitions\n   */\n  const renderNavLinks = () => (\n    <NavLinks ref={navRef}>\n      {navigationItems.map((navItem, index) => (\n        <motion.div \n          key={navItem.id}\n          className=\"nav-link-container\"\n          custom={index}\n          initial={{ \n            opacity: navAnimationConfig.initialOpacity, \n            y: navAnimationConfig.initialY \n          }}\n          animate={navControls}\n          style={{\n            position: 'relative',\n            marginBottom: '1rem',\n            display: 'flex',\n            alignItems: 'center',\n            willChange: 'transform, opacity',\n            transformOrigin: 'left center',\n          }}\n          onMouseEnter={() => handleNavItemHover(navItem.id)}\n          onMouseLeave={handleNavItemLeave}\n        >\n          <NavLine \n            active={activeSection === navItem.id || expandedNavItem === navItem.id}\n            highlightColor={highlightColor}\n            minLineWidth={minLineWidth}\n            maxLineWidth={maxLineWidth}\n          />\n          <NavButton\n            onClick={() => scrollToSection(navItem.id)}\n            active={activeSection === navItem.id || expandedNavItem === navItem.id}\n            highlightColor={highlightColor}\n            textColor={textColor}\n          >\n            {navItem.label}\n          </NavButton>\n        </motion.div>\n      ))}\n    </NavLinks>\n  );\n\n  /**\n   * Render statistics section with animated hover effects\n   * Shows quantifiable achievements or metrics in an engaging way\n   */\n  const renderStats = () => {\n    if (!showStats || !person?.stats || person.stats.length === 0) return null;\n    \n    return (\n      <StatsContainer>\n        {person.stats.map((stat, statIdx) => (\n          <Stat key={statIdx}>\n            <StatValue highlightColor={highlightColor}>\n              {stat.value}\n            </StatValue>\n            <StatLabel textColor={textColor}>\n              {stat.label}\n            </StatLabel>\n          </Stat>\n        ))}\n      </StatsContainer>\n    );\n  };\n\n  /**\n   * Render generic section content with appropriate styling\n   * Handles both string content and React nodes\n   */\n  const renderSectionContent = (content) => {\n    if (!content) return null;\n    \n    if (typeof content === 'string') {\n      return (\n        <SectionContent \n          textColor={textColor}\n          fontFamily={fontFamily}\n        >\n          {content}\n        </SectionContent>\n      );\n    }\n    \n    return content;\n  };\n\n  /**\n   * Render the About section with biography paragraphs and statistics\n   */\n  const renderAboutSection = (section) => {\n    return (\n      <>\n        {person?.bio && person.bio.map((paragraph, idx) => (\n          <SectionContent \n            key={idx}\n            textColor={textColor}\n            fontFamily={fontFamily}\n          >\n            {paragraph}\n          </SectionContent>\n        ))}\n        \n        {renderStats()}\n      </>\n    );\n  };\n\n  /**\n   * Render the Experience section with professional history\n   */\n  const renderExperienceSection = (section) => {\n    if (person?.experience) {\n      return person.experience.map((item, expIdx) => (\n        <React.Fragment key={expIdx}>\n          {renderSectionContent(item.content)}\n        </React.Fragment>\n      ));\n    }\n    \n    return renderSectionContent(\n      \"Throughout my career, I've specialized in developing software systems that seamlessly \" +\n      \"integrate front-end experiences with robust back-end architectures. My experience spans \" +\n      \"various domains, from interactive media to data visualization systems.\"\n    );\n  };\n\n  /**\n   * Render the Projects section showcasing key work\n   */\n  const renderProjectsSection = (section) => {\n    if (person?.projects) {\n      return person.projects.map((item, projIdx) => (\n        <React.Fragment key={projIdx}>\n          {renderSectionContent(item.content)}\n        </React.Fragment>\n      ));\n    }\n    \n    return null;\n  };\n\n  /**\n   * Render appropriate content based on section ID\n   * Allows for both default section renderers and custom content override\n   */\n  const renderSection = (section) => {\n    if (section.content) {\n      return renderSectionContent(section.content);\n    }\n    \n    switch (section.id) {\n      case 'about':\n        return renderAboutSection(section);\n      case 'experience':\n        return renderExperienceSection(section);\n      case 'projects':\n        return renderProjectsSection(section);\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Container \n      ref={containerRef}\n      initial={{ opacity: 0, y: animationConfig?.initialY ?? 30 }}\n      animate={controls}\n    >\n      {/* Left sidebar wrapper */}\n      <SidebarWrapper \n        ref={sidebarWrapperRef}\n        sidebarWidth={sidebarWidth}\n      >\n        {/* Profile sidebar */}\n        <Sidebar \n          ref={sidebarRef}\n        >\n          {renderProfileInfo()}\n          {renderNavLinks()}\n        </Sidebar>\n      </SidebarWrapper>\n      \n      {/* Right content section */}\n      <ContentSection \n        ref={contentRef}\n        contentWidth={contentWidth}\n        contentPadding={contentPadding}\n      >\n        {/* Render sections based on navigationItems */}\n        {navigationItems.map((section, index) => {\n          if (index >= sectionRefs.length) return null;\n          \n          return (\n            <Section \n              key={section.id}\n              ref={sectionRefs[index]}\n              data-section={section.id}\n              id={section.id}\n            >\n              {renderSection(section)}\n            </Section>\n          );\n        })}\n        \n        {/* Additional sections */}\n        {additionalSections.map((section, index) => (\n          <Section \n            key={`additional-${index}`}\n          >\n            {section.title && (\n              <SectionTitle highlightColor={highlightColor}>\n                {section.title}\n              </SectionTitle>\n            )}\n            {renderSectionContent(section.content)}\n          </Section>\n        ))}\n      </ContentSection>\n    </Container>\n  );\n};\n\n// ============================================================================\n// STYLED COMPONENTS\n// ============================================================================\n\n/**\n * Main container for the profile card\n * Uses Framer Motion for entrance animations\n */\nconst Container = styled(motion.div)`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  max-width: 1300px;\n  margin: 0 auto;\n  min-height: 70vh;\n  position: relative;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\n/**\n * Wrapper for the sidebar to establish sizing\n */\nconst SidebarWrapper = styled.div`\n  width: ${props => props.sidebarWidth}%;\n  position: relative;\n\n  @media (max-width: 768px) {\n    width: 100% !important;\n  }\n`;\n\n/**\n * Sidebar containing profile info and navigation\n */\nconst Sidebar = styled.div`\n  padding: 3rem 2rem 2rem 0;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  position: relative;\n  top: 0;\n\n  @media (max-width: 768px) {\n    position: relative !important;\n    padding: 2rem 1rem !important;\n    align-items: center;\n    text-align: center;\n    top: 0 !important;\n    bottom: auto !important;\n  }\n`;\n\n/**\n * Content section containing all main profile information\n */\nconst ContentSection = styled.div`\n  width: ${props => props.contentWidth}%;\n  padding: 3rem 0 2rem ${props => props.contentPadding}rem;\n  margin-left: auto;\n\n  @media (max-width: 768px) {\n    width: 100% !important;\n    padding: 2rem 1rem !important;\n    margin-left: 0 !important;\n  }\n`;\n\n/**\n * Individual content section (about, experience, etc.)\n */\nconst Section = styled.div`\n  margin-bottom: 3rem;\n  scroll-margin-top: 2rem;\n`;\n\n/**\n * Profile information container\n */\nconst ProfileInfo = styled.div`\n  margin-bottom: 2rem;\n  padding-left: 5px;\n\n  @media (max-width: 768px) {\n    text-align: center;\n  }\n`;\n\n/**\n * Profile name with highlight styling\n */\nconst ProfileName = styled.h1`\n  font-size: 2.8rem;\n  font-weight: 300;\n  color: ${props => props.highlightColor};\n  letter-spacing: 0.05em;\n  margin-bottom: 0.5rem;\n\n  @media (max-width: 768px) {\n    font-size: 2.2rem !important;\n  }\n`;\n\n/**\n * Profile role or title\n */\nconst ProfileRole = styled.h2`\n  font-size: 1.2rem;\n  font-weight: 300;\n  margin-bottom: 2rem;\n  color: ${props => props.highlightColor}B3; /* 70% opacity */\n  letter-spacing: 0.05em;\n  font-family: ${props => props.fontFamily};\n  font-style: italic;\n`;\n\n/**\n * Profile tagline or brief description\n */\nconst ProfileTagline = styled.p`\n  font-size: 1.1rem;\n  line-height: 1.6;\n  margin-bottom: 3rem;\n  max-width: 90%;\n  color: ${props => props.textColor};\n  font-family: ${props => props.fontFamily};\n  font-weight: 300;\n\n  @media (max-width: 768px) {\n    max-width: 100% !important;\n    text-align: center;\n  }\n`;\n\n/**\n * Navigation links container\n */\nconst NavLinks = styled.div`\n  margin-top: 3rem;\n  will-change: transform, opacity;\n  transform: translate3d(0,0,0);\n  backface-visibility: hidden;\n  -webkit-font-smoothing: antialiased;\n\n  @media (max-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    width: 100%;\n  }\n`;\n\n/**\n * Navigation indicator line\n * Expands when active or hovered\n */\nconst NavLine = styled.div`\n  position: absolute;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  width: ${props => props.active ? props.maxLineWidth : props.minLineWidth}px;\n  height: 0.75px;\n  background-color: ${props => props.active \n    ? `${props.highlightColor}E6` /* 90% opacity */ \n    : `${props.highlightColor}80` /* 50% opacity */};\n  transition: width 0.3s ease, background-color 0.3s ease;\n`;\n\n/**\n * Navigation button/link\n */\nconst NavButton = styled.button`\n  position: relative;\n  display: block;\n  padding: 0.5rem 0 0.5rem 40px;\n  font-size: 0.85rem;\n  letter-spacing: 0.1em;\n  background: transparent;\n  border: none;\n  text-align: left;\n  outline: none;\n  box-shadow: none;\n  transition: color 0.5s ease, transform 0.5s ease;\n  color: ${props => props.active ? props.highlightColor : props.textColor};\n  cursor: pointer;\n  transform: ${props => props.active ? 'translateX(10px)' : 'none'};\n  width: fit-content;\n\n  @media (max-width: 768px) {\n    padding: 0.5rem 0 0.5rem 40px;\n  }\n`;\n\n/**\n * Stats container for displaying statistics\n */\nconst StatsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  margin-top: 3rem;\n  width: 100%;\n\n  @media (max-width: 768px) {\n    justify-content: center !important;\n    gap: 2rem;\n  }\n\n  @media (max-width: 480px) {\n    flex-direction: column !important;\n    align-items: center !important;\n    gap: 1.5rem !important;\n  }\n`;\n\n/**\n * Individual stat item with hover animation\n */\nconst Stat = styled.div`\n  flex: 1;\n  text-align: center;\n  padding: 0 1rem;\n  min-width: 100px;\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: translateY(-5px);\n  }\n\n  @media (max-width: 480px) {\n    width: 100% !important;\n    max-width: 180px !important;\n  }\n`;\n\n/**\n * Stat value (number) styling\n */\nconst StatValue = styled.div`\n  font-size: 2.5rem;\n  font-weight: 100;\n  color: ${props => props.highlightColor};\n  margin-bottom: 0.5rem;\n`;\n\n/**\n * Stat label styling\n */\nconst StatLabel = styled.div`\n  font-size: 0.85rem;\n  color: ${props => props.textColor}CC; /* 80% opacity */\n  text-transform: uppercase;\n  letter-spacing: 0.1em;\n`;\n\n/**\n * Section content paragraph styling\n */\nconst SectionContent = styled.p`\n  font-size: 1rem;\n  line-height: 1.8;\n  margin-bottom: 1.5rem;\n  color: ${props => props.textColor};\n  font-family: ${props => props.fontFamily};\n  font-weight: 300;\n`;\n\n/**\n * Section title styling for additional sections\n */\nconst SectionTitle = styled.h3`\n  font-size: 1.4rem;\n  color: ${props => props.highlightColor};\n  margin-bottom: 1rem;\n  font-weight: 300;\n`;\n\nexport default PersonProfileCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}