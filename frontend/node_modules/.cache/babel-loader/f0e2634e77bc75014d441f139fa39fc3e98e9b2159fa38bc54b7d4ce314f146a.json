{"ast":null,"code":"var _jsxFileName = \"/home/valeria/Documents/Crucible/frontend/src/components/sections/landing/LandingNavigation.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport './landingNavigation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LandingNavigation = ({\n  mainSections,\n  activeSection,\n  expandedSection,\n  expandedSubsection,\n  animatingLayout,\n  setActiveSection,\n  setExpandedSection,\n  setExpandedSubsection,\n  setAnimatingLayout\n}) => {\n  _s();\n  const sectionsContainerRef = useRef(null);\n  const [movingSections, setMovingSections] = useState({});\n\n  // Navigate to section\n  const handleNavigate = (path, event, isExpandable) => {\n    if (isExpandable) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    // For demo purposes, just log the navigation\n    console.log(`Navigating to: ${path}`);\n    // In a real app, you'd use your routing library:\n    // window.location.href = path; or history.push(path);\n  };\n\n  // Handle section hover\n  const handleSectionHover = sectionId => {\n    setActiveSection(sectionId);\n  };\n\n  // Handle section leave\n  const handleSectionLeave = () => {\n    setActiveSection(null);\n  };\n\n  // Improved section click handler - uses CSS transitions instead of manual DOM manipulation\n  const handleSectionClick = (sectionId, event) => {\n    const section = mainSections.find(s => s.id === sectionId);\n    if (section && section.expandable) {\n      event.preventDefault();\n      event.stopPropagation();\n      setAnimatingLayout(true);\n\n      // If we're already expanded, just collapse\n      if (expandedSection === sectionId) {\n        // Simple collapse - just update state\n        setExpandedSection(null);\n\n        // Reset animation state after transition completes\n        setTimeout(() => {\n          setAnimatingLayout(false);\n        }, 400);\n      } else {\n        // First, handle any currently expanded section\n        if (expandedSection) {\n          // Calculate section positions for animation\n          const expandedIndex = mainSections.findIndex(s => s.id === expandedSection);\n          const newIndex = mainSections.findIndex(s => s.id === sectionId);\n\n          // Set animation direction for each affected section\n          let newMovingSections = {};\n\n          // The sections between the expanded one and the one we're clicking should move\n          if (expandedIndex < newIndex) {\n            // The clicked section is below the currently expanded one\n            // Sections in between need to move up\n            for (let i = expandedIndex + 1; i <= newIndex; i++) {\n              newMovingSections[mainSections[i].id] = 'moving-up';\n            }\n          } else {\n            // The clicked section is above the currently expanded one\n            // Sections in between need to move down\n            for (let i = newIndex + 1; i <= expandedIndex; i++) {\n              newMovingSections[mainSections[i].id] = 'moving-down';\n            }\n          }\n          setMovingSections(newMovingSections);\n\n          // First close current expanded section\n          setExpandedSection(null);\n\n          // Wait for close animation, then open new section\n          setTimeout(() => {\n            setExpandedSection(sectionId);\n\n            // Clear movement classes after the transition completes\n            setTimeout(() => {\n              setMovingSections({});\n              setAnimatingLayout(false);\n            }, 400);\n          }, 300);\n        } else {\n          // No section is expanded, just expand this one\n          setExpandedSection(sectionId);\n\n          // Reset animation state after transition completes\n          setTimeout(() => {\n            setAnimatingLayout(false);\n          }, 400);\n        }\n      }\n    }\n  };\n\n  // Improved subsection handler with CSS transitions\n  const handleSubsectionHover = (sectionId, event) => {\n    // Make sure we have a valid event object\n    if (event) {\n      event.stopPropagation();\n    }\n    const isClickEvent = event && event.type === 'click';\n    if (isClickEvent) {\n      setAnimatingLayout(true);\n\n      // If currently expanded and clicking the same subsection, collapse it\n      if (expandedSubsection === sectionId) {\n        setExpandedSubsection(null);\n\n        // Reset animation state after transition completes\n        setTimeout(() => {\n          setAnimatingLayout(false);\n        }, 300);\n      } else {\n        // If another subsection is expanded, collapse it first\n        if (expandedSubsection) {\n          setExpandedSubsection(null);\n\n          // Wait for collapse, then expand new subsection\n          setTimeout(() => {\n            setExpandedSubsection(sectionId);\n\n            // Reset animation state after expansion completes\n            setTimeout(() => {\n              setAnimatingLayout(false);\n            }, 300);\n          }, 200);\n        } else {\n          // No subsection expanded, just expand this one\n          setExpandedSubsection(sectionId);\n\n          // Reset animation state after transition completes\n          setTimeout(() => {\n            setAnimatingLayout(false);\n          }, 300);\n        }\n      }\n    } else {\n      // For hover events, just update the state\n      setExpandedSubsection(sectionId);\n    }\n  };\n\n  // Render SVG icons for main sections\n  const renderIcon = iconType => {\n    switch (iconType) {\n      case 'circles':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-container\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"42\",\n            height: \"42\",\n            viewBox: \"0 0 42 42\",\n            fill: \"none\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"21\",\n              cy: \"21\",\n              r: \"14\",\n              stroke: \"#A08E61\",\n              strokeWidth: \"1.5\",\n              opacity: \"0.9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"16\",\n              cy: \"21\",\n              r: \"9\",\n              stroke: \"#A08E61\",\n              strokeWidth: \"1.5\",\n              opacity: \"0.7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"26\",\n              cy: \"21\",\n              r: \"9\",\n              stroke: \"#A08E61\",\n              strokeWidth: \"1.5\",\n              opacity: \"0.7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this);\n      case 'triangle':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-container\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"42\",\n            height: \"42\",\n            viewBox: \"0 0 42 42\",\n            fill: \"none\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M21 7L35 32H7L21 7Z\",\n              stroke: \"#A08E61\",\n              strokeWidth: \"1.5\",\n              opacity: \"0.9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this);\n      case 'targetCircle':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-container\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"42\",\n            height: \"42\",\n            viewBox: \"0 0 42 42\",\n            fill: \"none\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"21\",\n              cy: \"21\",\n              r: \"14\",\n              stroke: \"#A08E61\",\n              strokeWidth: \"1.5\",\n              opacity: \"0.9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"21\",\n              cy: \"21\",\n              r: \"5\",\n              fill: \"#A08E61\",\n              opacity: \"0.7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: sectionsContainerRef,\n    className: `sections-container ${animatingLayout ? 'animating' : ''}`,\n    children: mainSections.map((section, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `section-wrapper ${expandedSection === section.id ? 'expanded-section' : ''} ${movingSections[section.id] || ''}`,\n      \"data-id\": section.id,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `section-row ${activeSection === section.id ? 'active' : ''} ${expandedSection === section.id ? 'expanded' : ''}`,\n        onMouseEnter: () => handleSectionHover(section.id),\n        onMouseLeave: handleSectionLeave,\n        onClick: e => {\n          if (section.expandable) {\n            handleSectionClick(section.id, e);\n          } else {\n            handleNavigate(section.path, e);\n          }\n        },\n        style: {\n          animationDelay: `${index * 0.15 + 0.3}s`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-icon-wrapper\",\n            children: renderIcon(section.icon)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"section-title\",\n              children: section.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"section-description\",\n              children: section.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), section.expandable && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `expand-indicator ${expandedSection === section.id ? 'expanded' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"16\",\n              height: \"16\",\n              viewBox: \"0 0 16 16\",\n              fill: \"none\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M4 6L8 10L12 6\",\n                stroke: \"#A08E61\",\n                strokeWidth: \"1.5\",\n                strokeLinecap: \"round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"diagonal-cut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), section.expandable && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `subsections-container ${expandedSection === section.id ? 'visible' : ''}`,\n        children: section.subsections.map(subsection => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `subsection-wrapper ${expandedSubsection === subsection.id ? 'expanded-subsection' : ''}`,\n          \"data-id\": subsection.id,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `subsection-row ${expandedSubsection === subsection.id ? 'active' : ''}`,\n            onMouseEnter: e => handleSubsectionHover(subsection.id, e),\n            onClick: e => subsection.expandable ? handleSubsectionHover(subsection.id, e) : handleNavigate(subsection.path, e),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"subsection-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"subsection-title\",\n                children: subsection.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"subsection-description\",\n                children: subsection.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 23\n              }, this), subsection.expandable && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `expand-indicator small ${expandedSubsection === subsection.id ? 'expanded' : ''}`,\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  width: \"12\",\n                  height: \"12\",\n                  viewBox: \"0 0 16 16\",\n                  fill: \"none\",\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M4 6L8 10L12 6\",\n                    stroke: \"#A08E61\",\n                    strokeWidth: \"1.5\",\n                    strokeLinecap: \"round\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 19\n          }, this), subsection.expandable && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `nested-subsections-container ${expandedSubsection === subsection.id ? 'visible' : ''}`,\n            children: subsection.subsections.map(nestedSubsection => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nested-subsection-row\",\n              onClick: e => handleNavigate(nestedSubsection.path, e),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"nested-subsection-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"nested-subsection-title\",\n                  children: nestedSubsection.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"nested-subsection-description\",\n                  children: nestedSubsection.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 27\n              }, this)\n            }, nestedSubsection.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 21\n          }, this)]\n        }, subsection.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }, this)]\n    }, section.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(LandingNavigation, \"U11YGduA5UNAqX40acqtXRf4eJw=\");\n_c = LandingNavigation;\nexport default LandingNavigation;\nvar _c;\n$RefreshReg$(_c, \"LandingNavigation\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","LandingNavigation","mainSections","activeSection","expandedSection","expandedSubsection","animatingLayout","setActiveSection","setExpandedSection","setExpandedSubsection","setAnimatingLayout","_s","sectionsContainerRef","movingSections","setMovingSections","handleNavigate","path","event","isExpandable","preventDefault","stopPropagation","console","log","handleSectionHover","sectionId","handleSectionLeave","handleSectionClick","section","find","s","id","expandable","setTimeout","expandedIndex","findIndex","newIndex","newMovingSections","i","handleSubsectionHover","isClickEvent","type","renderIcon","iconType","className","children","width","height","viewBox","fill","xmlns","cx","cy","r","stroke","strokeWidth","opacity","fileName","_jsxFileName","lineNumber","columnNumber","d","ref","map","index","onMouseEnter","onMouseLeave","onClick","e","style","animationDelay","icon","title","description","strokeLinecap","subsections","subsection","nestedSubsection","_c","$RefreshReg$"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/sections/landing/LandingNavigation.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport './landingNavigation.css';\n\nconst LandingNavigation = ({ \n  mainSections, \n  activeSection, \n  expandedSection, \n  expandedSubsection,\n  animatingLayout,\n  setActiveSection, \n  setExpandedSection, \n  setExpandedSubsection,\n  setAnimatingLayout\n}) => {\n  const sectionsContainerRef = useRef(null);\n  const [movingSections, setMovingSections] = useState({});\n\n  // Navigate to section\n  const handleNavigate = (path, event, isExpandable) => {\n    if (isExpandable) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n    \n    // For demo purposes, just log the navigation\n    console.log(`Navigating to: ${path}`);\n    // In a real app, you'd use your routing library:\n    // window.location.href = path; or history.push(path);\n  };\n  \n  // Handle section hover\n  const handleSectionHover = (sectionId) => {\n    setActiveSection(sectionId);\n  };\n  \n  // Handle section leave\n  const handleSectionLeave = () => {\n    setActiveSection(null);\n  };\n\n  // Improved section click handler - uses CSS transitions instead of manual DOM manipulation\n  const handleSectionClick = (sectionId, event) => {\n    const section = mainSections.find(s => s.id === sectionId);\n    if (section && section.expandable) {\n      event.preventDefault();\n      event.stopPropagation();\n      \n      setAnimatingLayout(true);\n      \n      // If we're already expanded, just collapse\n      if (expandedSection === sectionId) {\n        // Simple collapse - just update state\n        setExpandedSection(null);\n        \n        // Reset animation state after transition completes\n        setTimeout(() => {\n          setAnimatingLayout(false);\n        }, 400);\n      } else {\n        // First, handle any currently expanded section\n        if (expandedSection) {\n          // Calculate section positions for animation\n          const expandedIndex = mainSections.findIndex(s => s.id === expandedSection);\n          const newIndex = mainSections.findIndex(s => s.id === sectionId);\n          \n          // Set animation direction for each affected section\n          let newMovingSections = {};\n          \n          // The sections between the expanded one and the one we're clicking should move\n          if (expandedIndex < newIndex) {\n            // The clicked section is below the currently expanded one\n            // Sections in between need to move up\n            for (let i = expandedIndex + 1; i <= newIndex; i++) {\n              newMovingSections[mainSections[i].id] = 'moving-up';\n            }\n          } else {\n            // The clicked section is above the currently expanded one\n            // Sections in between need to move down\n            for (let i = newIndex + 1; i <= expandedIndex; i++) {\n              newMovingSections[mainSections[i].id] = 'moving-down';\n            }\n          }\n          \n          setMovingSections(newMovingSections);\n          \n          // First close current expanded section\n          setExpandedSection(null);\n          \n          // Wait for close animation, then open new section\n          setTimeout(() => {\n            setExpandedSection(sectionId);\n            \n            // Clear movement classes after the transition completes\n            setTimeout(() => {\n              setMovingSections({});\n              setAnimatingLayout(false);\n            }, 400);\n          }, 300);\n        } else {\n          // No section is expanded, just expand this one\n          setExpandedSection(sectionId);\n          \n          // Reset animation state after transition completes\n          setTimeout(() => {\n            setAnimatingLayout(false);\n          }, 400);\n        }\n      }\n    }\n  };\n  \n  // Improved subsection handler with CSS transitions\n  const handleSubsectionHover = (sectionId, event) => {\n    // Make sure we have a valid event object\n    if (event) {\n      event.stopPropagation();\n    }\n    \n    const isClickEvent = event && event.type === 'click';\n    \n    if (isClickEvent) {\n      setAnimatingLayout(true);\n      \n      // If currently expanded and clicking the same subsection, collapse it\n      if (expandedSubsection === sectionId) {\n        setExpandedSubsection(null);\n        \n        // Reset animation state after transition completes\n        setTimeout(() => {\n          setAnimatingLayout(false);\n        }, 300);\n      } else {\n        // If another subsection is expanded, collapse it first\n        if (expandedSubsection) {\n          setExpandedSubsection(null);\n          \n          // Wait for collapse, then expand new subsection\n          setTimeout(() => {\n            setExpandedSubsection(sectionId);\n            \n            // Reset animation state after expansion completes\n            setTimeout(() => {\n              setAnimatingLayout(false);\n            }, 300);\n          }, 200);\n        } else {\n          // No subsection expanded, just expand this one\n          setExpandedSubsection(sectionId);\n          \n          // Reset animation state after transition completes\n          setTimeout(() => {\n            setAnimatingLayout(false);\n          }, 300);\n        }\n      }\n    } else {\n      // For hover events, just update the state\n      setExpandedSubsection(sectionId);\n    }\n  };\n\n  // Render SVG icons for main sections\n  const renderIcon = (iconType) => {\n    switch(iconType) {\n      case 'circles':\n        return (\n          <div className=\"icon-container\">\n            <svg width=\"42\" height=\"42\" viewBox=\"0 0 42 42\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <circle cx=\"21\" cy=\"21\" r=\"14\" stroke=\"#A08E61\" strokeWidth=\"1.5\" opacity=\"0.9\" />\n              <circle cx=\"16\" cy=\"21\" r=\"9\" stroke=\"#A08E61\" strokeWidth=\"1.5\" opacity=\"0.7\" />\n              <circle cx=\"26\" cy=\"21\" r=\"9\" stroke=\"#A08E61\" strokeWidth=\"1.5\" opacity=\"0.7\" />\n            </svg>\n          </div>\n        );\n      case 'triangle':\n        return (\n          <div className=\"icon-container\">\n            <svg width=\"42\" height=\"42\" viewBox=\"0 0 42 42\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M21 7L35 32H7L21 7Z\" stroke=\"#A08E61\" strokeWidth=\"1.5\" opacity=\"0.9\" />\n            </svg>\n          </div>\n        );\n      case 'targetCircle':\n        return (\n          <div className=\"icon-container\">\n            <svg width=\"42\" height=\"42\" viewBox=\"0 0 42 42\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <circle cx=\"21\" cy=\"21\" r=\"14\" stroke=\"#A08E61\" strokeWidth=\"1.5\" opacity=\"0.9\" />\n              <circle cx=\"21\" cy=\"21\" r=\"5\" fill=\"#A08E61\" opacity=\"0.7\" />\n            </svg>\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n  \n  return (\n    <div \n      ref={sectionsContainerRef}\n      className={`sections-container ${animatingLayout ? 'animating' : ''}`}\n    >\n      {mainSections.map((section, index) => (\n        <div \n          key={section.id} \n          className={`section-wrapper ${expandedSection === section.id ? 'expanded-section' : ''} ${movingSections[section.id] || ''}`} \n          data-id={section.id}\n        >\n          <div \n            className={`section-row ${activeSection === section.id ? 'active' : ''} ${expandedSection === section.id ? 'expanded' : ''}`}\n            onMouseEnter={() => handleSectionHover(section.id)}\n            onMouseLeave={handleSectionLeave}\n            onClick={(e) => {\n              if (section.expandable) {\n                handleSectionClick(section.id, e);\n              } else {\n                handleNavigate(section.path, e);\n              }\n            }}\n            style={{ animationDelay: `${index * 0.15 + 0.3}s` }}\n          >\n            <div className=\"section-content\">\n              <div className=\"section-icon-wrapper\">\n                {renderIcon(section.icon)}\n              </div>\n              <div className=\"section-text\">\n                <h2 className=\"section-title\">{section.title}</h2>\n                <p className=\"section-description\">{section.description}</p>\n              </div>\n              {section.expandable && (\n                <div className={`expand-indicator ${expandedSection === section.id ? 'expanded' : ''}`}>\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M4 6L8 10L12 6\" stroke=\"#A08E61\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n                  </svg>\n                </div>\n              )}\n            </div>\n            <div className=\"diagonal-cut\" />\n          </div>\n          \n          {/* Expandable Subsections - Using CSS max-height & opacity transitions instead of JS height manipulation */}\n          {section.expandable && (\n            <div className={`subsections-container ${expandedSection === section.id ? 'visible' : ''}`}>\n              {section.subsections.map((subsection) => (\n                <div \n                  key={subsection.id} \n                  className={`subsection-wrapper ${expandedSubsection === subsection.id ? 'expanded-subsection' : ''}`} \n                  data-id={subsection.id}\n                >\n                  <div \n                    className={`subsection-row ${expandedSubsection === subsection.id ? 'active' : ''}`}\n                    onMouseEnter={(e) => handleSubsectionHover(subsection.id, e)}\n                    onClick={(e) => subsection.expandable ? handleSubsectionHover(subsection.id, e) : handleNavigate(subsection.path, e)}\n                  >\n                    <div className=\"subsection-content\">\n                      <h3 className=\"subsection-title\">{subsection.title}</h3>\n                      <p className=\"subsection-description\">{subsection.description}</p>\n                      {subsection.expandable && (\n                        <div className={`expand-indicator small ${expandedSubsection === subsection.id ? 'expanded' : ''}`}>\n                          <svg width=\"12\" height=\"12\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M4 6L8 10L12 6\" stroke=\"#A08E61\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n                          </svg>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  \n                  {/* Nested Subsections - Using CSS max-height & opacity transitions */}\n                  {subsection.expandable && (\n                    <div className={`nested-subsections-container ${expandedSubsection === subsection.id ? 'visible' : ''}`}>\n                      {subsection.subsections.map((nestedSubsection) => (\n                        <div \n                          key={nestedSubsection.id}\n                          className=\"nested-subsection-row\"\n                          onClick={(e) => handleNavigate(nestedSubsection.path, e)}\n                        >\n                          <div className=\"nested-subsection-content\">\n                            <h4 className=\"nested-subsection-title\">{nestedSubsection.title}</h4>\n                            <p className=\"nested-subsection-description\">{nestedSubsection.description}</p>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default LandingNavigation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}