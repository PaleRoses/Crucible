{"ast":null,"code":"var _jsxFileName = \"/home/valeria/Documents/Crucible/frontend/src/components/core/Background.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect, useCallback, useMemo } from 'react';\n\n/**\n * Background Component\n * \n * Creates a stable stellar background that spans the entire document\n * with subtle parallax effects on scroll.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Background = () => {\n  _s();\n  // Refs for DOM elements and animation state\n  const containerRef = useRef(null);\n  const canvasRef = useRef(null);\n  const starsRef = useRef([]);\n  const animationFrameRef = useRef(null);\n  const lastTimeRef = useRef(0);\n  const scrollPositionRef = useRef(0);\n  const documentHeightRef = useRef(0);\n  const isInitializedRef = useRef(false);\n\n  // Component state\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0,\n    pixelRatio: 1\n  });\n  const [prefersReducedMotion, setPrefersReducedMotion] = useState(false);\n\n  // Configuration\n  const CONFIG = useMemo(() => ({\n    // Star parameters\n    starCount: 300,\n    starSizeMin: 0.8,\n    starSizeMax: 2.5,\n    starOpacityMin: 0.15,\n    starOpacityMax: 0.85,\n    // Parallax effect\n    parallaxIntensity: 0.03,\n    // Pulsing effect\n    pulseEnabled: true,\n    pulseAmount: 0.15,\n    pulseSpeed: 0.0005\n  }), []);\n\n  // Warm, golden color palette\n  const COLORS = useMemo(() => ({\n    // Main star colors (warm golden tones)\n    stars: ['rgba(255, 243, 200, alpha)',\n    // Warm yellow\n    'rgba(255, 231, 164, alpha)',\n    // Golden\n    'rgba(255, 236, 179, alpha)',\n    // Pale gold\n    'rgba(252, 249, 231, alpha)',\n    // Off-white gold\n    'rgba(255, 225, 205, alpha)' // Warm white (slight orange)\n    ],\n    // Background gradient colors\n    background: {\n      topColor: 'rgb(8, 8, 12)',\n      bottomColor: 'rgb(15, 15, 20)'\n    }\n  }), []);\n\n  // Get color with opacity\n  const getColor = useCallback((baseColor, opacity) => {\n    const safeOpacity = Math.max(0, Math.min(1, opacity || 0));\n    return baseColor.replace(/alpha\\)$/, `${safeOpacity})`);\n  }, []);\n\n  // Get the current document height\n  const updateDocumentHeight = useCallback(() => {\n    const documentHeight = Math.max(document.body.scrollHeight, document.body.offsetHeight, document.documentElement.clientHeight, document.documentElement.scrollHeight, document.documentElement.offsetHeight);\n    documentHeightRef.current = documentHeight;\n\n    // Update container height to match document\n    if (containerRef.current) {\n      containerRef.current.style.height = `${documentHeight}px`;\n    }\n    return documentHeight;\n  }, []);\n\n  // Initialize canvas with proper resolution\n  const setupCanvas = useCallback(() => {\n    if (!canvasRef.current) return false;\n    const canvas = canvasRef.current;\n\n    // Get viewport dimensions\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    const pixelRatio = window.devicePixelRatio || 1;\n\n    // Set canvas size accounting for pixel ratio\n    canvas.width = width * pixelRatio;\n    canvas.height = height * pixelRatio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n\n    // Update dimensions state\n    setDimensions({\n      width,\n      height,\n      pixelRatio\n    });\n    return true;\n  }, []);\n\n  // Generate stars with stable positions\n  const generateStars = useCallback(() => {\n    // Only generate stars once\n    if (starsRef.current.length > 0) return;\n\n    // Get document dimensions\n    const width = window.innerWidth;\n    const documentHeight = updateDocumentHeight();\n\n    // Generate stars\n    const newStars = [];\n    for (let i = 0; i < CONFIG.starCount; i++) {\n      // Use a seed-based approach for consistent positioning\n      const seed = i * 12345.6789;\n      const seedX = Math.sin(seed) * 0.5 + 0.5;\n      const seedY = Math.cos(seed * 1.234) * 0.5 + 0.5;\n      const seedZ = Math.sin(seed * 0.567) * 0.5 + 0.5;\n      const seedColor = Math.cos(seed * 0.456) * 0.5 + 0.5;\n      const seedRays = Math.sin(seed * 0.789) * 0.5 + 0.5;\n      const star = {\n        // Fixed position (will never change)\n        x: seedX * width,\n        y: seedY * documentHeight,\n        z: seedZ * 0.8 + 0.1,\n        // Depth (0.1 to 0.9)\n\n        // Visual properties\n        size: seedZ * (CONFIG.starSizeMax - CONFIG.starSizeMin) + CONFIG.starSizeMin,\n        baseOpacity: seedZ * (CONFIG.starOpacityMax - CONFIG.starOpacityMin) + CONFIG.starOpacityMin,\n        opacity: 0,\n        // Start at 0 and fade in\n\n        // Animation properties\n        pulsePhase: seed,\n        // Ray properties (some stars have rays)\n        rays: seedRays > 0.7 ? Math.floor(seedRays * 4) + 2 : 0,\n        rayLength: (seedZ * 0.7 + 0.3) * 3,\n        // Color\n        color: COLORS.stars[Math.floor(seedColor * COLORS.stars.length)]\n      };\n      newStars.push(star);\n    }\n    starsRef.current = newStars;\n  }, [CONFIG, COLORS.stars, updateDocumentHeight]);\n\n  // Update star opacities and pulsing effect\n  const updateStars = useCallback(timestamp => {\n    const parallaxOffset = scrollPositionRef.current * CONFIG.parallaxIntensity;\n    const visibleTop = scrollPositionRef.current;\n    const visibleBottom = visibleTop + window.innerHeight;\n    const timeFactor = timestamp * 0.001;\n    for (const star of starsRef.current) {\n      // Skip stars far outside the visible area\n      if (star.y < visibleTop - 200 || star.y > visibleBottom + 200) {\n        star.opacity = 0; // Hide stars that are far off-screen\n        continue;\n      }\n\n      // Fade in stars that should be visible\n      if (star.opacity < star.baseOpacity) {\n        star.opacity = Math.min(star.baseOpacity, star.opacity + 0.01);\n      }\n\n      // Apply subtle pulsing effect\n      if (CONFIG.pulseEnabled) {\n        const pulse = Math.sin(timeFactor * CONFIG.pulseSpeed + star.pulsePhase) * CONFIG.pulseAmount;\n        star.opacity = star.baseOpacity * (1 + pulse);\n      }\n\n      // Apply parallax effect\n      star.parallaxY = parallaxOffset * (1 - star.z);\n    }\n  }, [CONFIG]);\n\n  // Render a star with optional rays\n  const drawStar = useCallback((ctx, star, adjustedY) => {\n    if (star.opacity <= 0.01) return; // Skip nearly invisible stars\n\n    try {\n      // Draw glow\n      const glowRadius = Math.max(0.5, star.size * 2);\n      const gradient = ctx.createRadialGradient(star.x, adjustedY, 0, star.x, adjustedY, glowRadius);\n      gradient.addColorStop(0, getColor(star.color, star.opacity * 0.9));\n      gradient.addColorStop(0.5, getColor(star.color, star.opacity * 0.3));\n      gradient.addColorStop(1, getColor(star.color, 0));\n      ctx.beginPath();\n      ctx.fillStyle = gradient;\n      ctx.arc(star.x, adjustedY, glowRadius, 0, Math.PI * 2);\n      ctx.fill();\n\n      // Draw core\n      ctx.beginPath();\n      ctx.fillStyle = getColor(star.color, star.opacity);\n      ctx.arc(star.x, adjustedY, Math.max(0.5, star.size * 0.5), 0, Math.PI * 2);\n      ctx.fill();\n\n      // Draw rays\n      if (star.rays > 0 && star.opacity > 0.3) {\n        ctx.save();\n        ctx.translate(star.x, adjustedY);\n        for (let i = 0; i < star.rays; i++) {\n          const angle = i / star.rays * Math.PI * 2;\n          const rayLength = Math.max(0.5, star.rayLength);\n          ctx.beginPath();\n          ctx.moveTo(0, 0);\n          ctx.lineTo(Math.cos(angle) * rayLength, Math.sin(angle) * rayLength);\n\n          // Create gradient for ray\n          const rayGradient = ctx.createLinearGradient(0, 0, Math.cos(angle) * rayLength, Math.sin(angle) * rayLength);\n          rayGradient.addColorStop(0, getColor(star.color, star.opacity * 0.9));\n          rayGradient.addColorStop(1, getColor(star.color, 0));\n          ctx.strokeStyle = rayGradient;\n          ctx.lineWidth = Math.max(0.5, star.size * 0.3);\n          ctx.stroke();\n        }\n        ctx.restore();\n      }\n    } catch (error) {\n      // Silent error handling\n    }\n  }, [getColor]);\n\n  // Render the scene\n  const renderScene = useCallback(() => {\n    if (!canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Apply device pixel ratio scaling\n    ctx.setTransform(dimensions.pixelRatio, 0, 0, dimensions.pixelRatio, 0, 0);\n\n    // Clear canvas\n    ctx.clearRect(0, 0, dimensions.width, dimensions.height);\n\n    // Draw background gradient\n    const gradient = ctx.createLinearGradient(0, 0, 0, dimensions.height);\n    gradient.addColorStop(0, COLORS.background.topColor);\n    gradient.addColorStop(1, COLORS.background.bottomColor);\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, dimensions.width, dimensions.height);\n\n    // Enable blending for better glow effect\n    ctx.globalCompositeOperation = 'lighter';\n\n    // Current visible area\n    const visibleTop = scrollPositionRef.current;\n\n    // Draw stars\n    for (const star of starsRef.current) {\n      // Skip invisible stars\n      if (star.opacity <= 0.01) continue;\n\n      // Calculate adjusted Y position for viewport\n      const adjustedY = star.y - visibleTop + (star.parallaxY || 0);\n\n      // Only draw stars within or near the viewport\n      if (adjustedY >= -50 && adjustedY <= dimensions.height + 50) {\n        drawStar(ctx, star, adjustedY);\n      }\n    }\n\n    // Reset global composition\n    ctx.globalCompositeOperation = 'source-over';\n  }, [dimensions, COLORS, drawStar]);\n\n  // Animation frame handler\n  const animate = useCallback(timestamp => {\n    // Calculate delta time\n    const deltaTime = lastTimeRef.current ? timestamp - lastTimeRef.current : 16;\n    lastTimeRef.current = timestamp;\n\n    // Update stars\n    updateStars(timestamp);\n\n    // Render scene\n    renderScene();\n\n    // Continue animation loop\n    animationFrameRef.current = requestAnimationFrame(animate);\n  }, [updateStars, renderScene]);\n\n  // Handle scroll events\n  const handleScroll = useCallback(() => {\n    scrollPositionRef.current = window.scrollY;\n  }, []);\n\n  // Handle resize events\n  const handleResize = useCallback(() => {\n    // Update canvas dimensions\n    setupCanvas();\n\n    // Update document height\n    updateDocumentHeight();\n\n    // Note: we do NOT regenerate stars on resize\n    // This ensures stars stay in the same relative positions\n  }, [setupCanvas, updateDocumentHeight]);\n\n  // Detect reduced motion preference\n  useEffect(() => {\n    const reducedMotionQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\n    setPrefersReducedMotion(reducedMotionQuery.matches);\n    const handleReducedMotionChange = e => {\n      setPrefersReducedMotion(e.matches);\n    };\n    reducedMotionQuery.addEventListener('change', handleReducedMotionChange);\n    return () => {\n      reducedMotionQuery.removeEventListener('change', handleReducedMotionChange);\n    };\n  }, []);\n\n  // Initialize component\n  useEffect(() => {\n    // Only initialize once\n    if (isInitializedRef.current) return;\n    isInitializedRef.current = true;\n\n    // Setup canvas\n    setupCanvas();\n\n    // Update document height\n    updateDocumentHeight();\n\n    // Generate stars\n    generateStars();\n\n    // Add event listeners\n    window.addEventListener('scroll', handleScroll, {\n      passive: true\n    });\n    window.addEventListener('resize', handleResize);\n\n    // Start animation loop\n    animationFrameRef.current = requestAnimationFrame(animate);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n      window.removeEventListener('resize', handleResize);\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [setupCanvas, updateDocumentHeight, generateStars, animate, handleScroll, handleResize]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      zIndex: -1,\n      pointerEvents: 'none'\n    },\n    \"aria-hidden\": \"true\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 387,\n    columnNumber: 5\n  }, this);\n};\n_s(Background, \"iBAHodx+bkaY2RoClkl9Ie3aaIw=\");\n_c = Background;\nexport default Background;\nvar _c;\n$RefreshReg$(_c, \"Background\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useCallback","useMemo","jsxDEV","_jsxDEV","Background","_s","containerRef","canvasRef","starsRef","animationFrameRef","lastTimeRef","scrollPositionRef","documentHeightRef","isInitializedRef","dimensions","setDimensions","width","height","pixelRatio","prefersReducedMotion","setPrefersReducedMotion","CONFIG","starCount","starSizeMin","starSizeMax","starOpacityMin","starOpacityMax","parallaxIntensity","pulseEnabled","pulseAmount","pulseSpeed","COLORS","stars","background","topColor","bottomColor","getColor","baseColor","opacity","safeOpacity","Math","max","min","replace","updateDocumentHeight","documentHeight","document","body","scrollHeight","offsetHeight","documentElement","clientHeight","current","style","setupCanvas","canvas","window","innerWidth","innerHeight","devicePixelRatio","generateStars","length","newStars","i","seed","seedX","sin","seedY","cos","seedZ","seedColor","seedRays","star","x","y","z","size","baseOpacity","pulsePhase","rays","floor","rayLength","color","push","updateStars","timestamp","parallaxOffset","visibleTop","visibleBottom","timeFactor","pulse","parallaxY","drawStar","ctx","adjustedY","glowRadius","gradient","createRadialGradient","addColorStop","beginPath","fillStyle","arc","PI","fill","save","translate","angle","moveTo","lineTo","rayGradient","createLinearGradient","strokeStyle","lineWidth","stroke","restore","error","renderScene","getContext","setTransform","clearRect","fillRect","globalCompositeOperation","animate","deltaTime","requestAnimationFrame","handleScroll","scrollY","handleResize","reducedMotionQuery","matchMedia","matches","handleReducedMotionChange","e","addEventListener","removeEventListener","passive","cancelAnimationFrame","ref","position","top","left","overflow","zIndex","pointerEvents","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/core/Background.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect, useCallback, useMemo } from 'react';\n\n/**\n * Background Component\n * \n * Creates a stable stellar background that spans the entire document\n * with subtle parallax effects on scroll.\n */\nconst Background = () => {\n  // Refs for DOM elements and animation state\n  const containerRef = useRef(null);\n  const canvasRef = useRef(null);\n  const starsRef = useRef([]);\n  const animationFrameRef = useRef(null);\n  const lastTimeRef = useRef(0);\n  const scrollPositionRef = useRef(0);\n  const documentHeightRef = useRef(0);\n  const isInitializedRef = useRef(false);\n  \n  // Component state\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0, pixelRatio: 1 });\n  const [prefersReducedMotion, setPrefersReducedMotion] = useState(false);\n  \n  // Configuration\n  const CONFIG = useMemo(() => ({\n    // Star parameters\n    starCount: 300,\n    starSizeMin: 0.8,\n    starSizeMax: 2.5,\n    starOpacityMin: 0.15,\n    starOpacityMax: 0.85,\n    \n    // Parallax effect\n    parallaxIntensity: 0.03,\n    \n    // Pulsing effect\n    pulseEnabled: true,\n    pulseAmount: 0.15,\n    pulseSpeed: 0.0005\n  }), []);\n  \n  // Warm, golden color palette\n  const COLORS = useMemo(() => ({\n    // Main star colors (warm golden tones)\n    stars: [\n      'rgba(255, 243, 200, alpha)', // Warm yellow\n      'rgba(255, 231, 164, alpha)', // Golden\n      'rgba(255, 236, 179, alpha)', // Pale gold\n      'rgba(252, 249, 231, alpha)', // Off-white gold\n      'rgba(255, 225, 205, alpha)'  // Warm white (slight orange)\n    ],\n    \n    // Background gradient colors\n    background: {\n      topColor: 'rgb(8, 8, 12)',\n      bottomColor: 'rgb(15, 15, 20)'\n    }\n  }), []);\n  \n  // Get color with opacity\n  const getColor = useCallback((baseColor, opacity) => {\n    const safeOpacity = Math.max(0, Math.min(1, opacity || 0));\n    return baseColor.replace(/alpha\\)$/, `${safeOpacity})`);\n  }, []);\n  \n  // Get the current document height\n  const updateDocumentHeight = useCallback(() => {\n    const documentHeight = Math.max(\n      document.body.scrollHeight,\n      document.body.offsetHeight,\n      document.documentElement.clientHeight,\n      document.documentElement.scrollHeight,\n      document.documentElement.offsetHeight\n    );\n    documentHeightRef.current = documentHeight;\n    \n    // Update container height to match document\n    if (containerRef.current) {\n      containerRef.current.style.height = `${documentHeight}px`;\n    }\n    \n    return documentHeight;\n  }, []);\n  \n  // Initialize canvas with proper resolution\n  const setupCanvas = useCallback(() => {\n    if (!canvasRef.current) return false;\n    \n    const canvas = canvasRef.current;\n    \n    // Get viewport dimensions\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    const pixelRatio = window.devicePixelRatio || 1;\n    \n    // Set canvas size accounting for pixel ratio\n    canvas.width = width * pixelRatio;\n    canvas.height = height * pixelRatio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n    \n    // Update dimensions state\n    setDimensions({\n      width,\n      height,\n      pixelRatio\n    });\n    \n    return true;\n  }, []);\n  \n  // Generate stars with stable positions\n  const generateStars = useCallback(() => {\n    // Only generate stars once\n    if (starsRef.current.length > 0) return;\n    \n    // Get document dimensions\n    const width = window.innerWidth;\n    const documentHeight = updateDocumentHeight();\n    \n    // Generate stars\n    const newStars = [];\n    \n    for (let i = 0; i < CONFIG.starCount; i++) {\n      // Use a seed-based approach for consistent positioning\n      const seed = i * 12345.6789;\n      const seedX = Math.sin(seed) * 0.5 + 0.5;\n      const seedY = Math.cos(seed * 1.234) * 0.5 + 0.5;\n      const seedZ = Math.sin(seed * 0.567) * 0.5 + 0.5;\n      const seedColor = Math.cos(seed * 0.456) * 0.5 + 0.5;\n      const seedRays = Math.sin(seed * 0.789) * 0.5 + 0.5;\n      \n      const star = {\n        // Fixed position (will never change)\n        x: seedX * width,\n        y: seedY * documentHeight,\n        z: seedZ * 0.8 + 0.1, // Depth (0.1 to 0.9)\n        \n        // Visual properties\n        size: (seedZ * (CONFIG.starSizeMax - CONFIG.starSizeMin) + CONFIG.starSizeMin),\n        baseOpacity: seedZ * (CONFIG.starOpacityMax - CONFIG.starOpacityMin) + CONFIG.starOpacityMin,\n        opacity: 0, // Start at 0 and fade in\n        \n        // Animation properties\n        pulsePhase: seed,\n        \n        // Ray properties (some stars have rays)\n        rays: seedRays > 0.7 ? Math.floor(seedRays * 4) + 2 : 0,\n        rayLength: (seedZ * 0.7 + 0.3) * 3,\n        \n        // Color\n        color: COLORS.stars[Math.floor(seedColor * COLORS.stars.length)]\n      };\n      \n      newStars.push(star);\n    }\n    \n    starsRef.current = newStars;\n  }, [CONFIG, COLORS.stars, updateDocumentHeight]);\n  \n  // Update star opacities and pulsing effect\n  const updateStars = useCallback((timestamp) => {\n    const parallaxOffset = scrollPositionRef.current * CONFIG.parallaxIntensity;\n    const visibleTop = scrollPositionRef.current;\n    const visibleBottom = visibleTop + window.innerHeight;\n    const timeFactor = timestamp * 0.001;\n    \n    for (const star of starsRef.current) {\n      // Skip stars far outside the visible area\n      if (star.y < visibleTop - 200 || star.y > visibleBottom + 200) {\n        star.opacity = 0; // Hide stars that are far off-screen\n        continue;\n      }\n      \n      // Fade in stars that should be visible\n      if (star.opacity < star.baseOpacity) {\n        star.opacity = Math.min(star.baseOpacity, star.opacity + 0.01);\n      }\n      \n      // Apply subtle pulsing effect\n      if (CONFIG.pulseEnabled) {\n        const pulse = Math.sin(timeFactor * CONFIG.pulseSpeed + star.pulsePhase) * CONFIG.pulseAmount;\n        star.opacity = star.baseOpacity * (1 + pulse);\n      }\n      \n      // Apply parallax effect\n      star.parallaxY = parallaxOffset * (1 - star.z);\n    }\n  }, [CONFIG]);\n  \n  // Render a star with optional rays\n  const drawStar = useCallback((ctx, star, adjustedY) => {\n    if (star.opacity <= 0.01) return; // Skip nearly invisible stars\n    \n    try {\n      // Draw glow\n      const glowRadius = Math.max(0.5, star.size * 2);\n      const gradient = ctx.createRadialGradient(\n        star.x, adjustedY, 0, \n        star.x, adjustedY, glowRadius\n      );\n      \n      gradient.addColorStop(0, getColor(star.color, star.opacity * 0.9));\n      gradient.addColorStop(0.5, getColor(star.color, star.opacity * 0.3));\n      gradient.addColorStop(1, getColor(star.color, 0));\n      \n      ctx.beginPath();\n      ctx.fillStyle = gradient;\n      ctx.arc(star.x, adjustedY, glowRadius, 0, Math.PI * 2);\n      ctx.fill();\n      \n      // Draw core\n      ctx.beginPath();\n      ctx.fillStyle = getColor(star.color, star.opacity);\n      ctx.arc(star.x, adjustedY, Math.max(0.5, star.size * 0.5), 0, Math.PI * 2);\n      ctx.fill();\n      \n      // Draw rays\n      if (star.rays > 0 && star.opacity > 0.3) {\n        ctx.save();\n        ctx.translate(star.x, adjustedY);\n        \n        for (let i = 0; i < star.rays; i++) {\n          const angle = (i / star.rays) * Math.PI * 2;\n          const rayLength = Math.max(0.5, star.rayLength);\n          \n          ctx.beginPath();\n          ctx.moveTo(0, 0);\n          ctx.lineTo(Math.cos(angle) * rayLength, Math.sin(angle) * rayLength);\n          \n          // Create gradient for ray\n          const rayGradient = ctx.createLinearGradient(\n            0, 0,\n            Math.cos(angle) * rayLength, Math.sin(angle) * rayLength\n          );\n          rayGradient.addColorStop(0, getColor(star.color, star.opacity * 0.9));\n          rayGradient.addColorStop(1, getColor(star.color, 0));\n          \n          ctx.strokeStyle = rayGradient;\n          ctx.lineWidth = Math.max(0.5, star.size * 0.3);\n          ctx.stroke();\n        }\n        \n        ctx.restore();\n      }\n    } catch (error) {\n      // Silent error handling\n    }\n  }, [getColor]);\n  \n  // Render the scene\n  const renderScene = useCallback(() => {\n    if (!canvasRef.current) return;\n    \n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    if (!ctx) return;\n    \n    // Apply device pixel ratio scaling\n    ctx.setTransform(dimensions.pixelRatio, 0, 0, dimensions.pixelRatio, 0, 0);\n    \n    // Clear canvas\n    ctx.clearRect(0, 0, dimensions.width, dimensions.height);\n    \n    // Draw background gradient\n    const gradient = ctx.createLinearGradient(0, 0, 0, dimensions.height);\n    gradient.addColorStop(0, COLORS.background.topColor);\n    gradient.addColorStop(1, COLORS.background.bottomColor);\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, dimensions.width, dimensions.height);\n    \n    // Enable blending for better glow effect\n    ctx.globalCompositeOperation = 'lighter';\n    \n    // Current visible area\n    const visibleTop = scrollPositionRef.current;\n    \n    // Draw stars\n    for (const star of starsRef.current) {\n      // Skip invisible stars\n      if (star.opacity <= 0.01) continue;\n      \n      // Calculate adjusted Y position for viewport\n      const adjustedY = star.y - visibleTop + (star.parallaxY || 0);\n      \n      // Only draw stars within or near the viewport\n      if (adjustedY >= -50 && adjustedY <= dimensions.height + 50) {\n        drawStar(ctx, star, adjustedY);\n      }\n    }\n    \n    // Reset global composition\n    ctx.globalCompositeOperation = 'source-over';\n  }, [dimensions, COLORS, drawStar]);\n  \n  // Animation frame handler\n  const animate = useCallback((timestamp) => {\n    // Calculate delta time\n    const deltaTime = lastTimeRef.current ? timestamp - lastTimeRef.current : 16;\n    lastTimeRef.current = timestamp;\n    \n    // Update stars\n    updateStars(timestamp);\n    \n    // Render scene\n    renderScene();\n    \n    // Continue animation loop\n    animationFrameRef.current = requestAnimationFrame(animate);\n  }, [updateStars, renderScene]);\n  \n  // Handle scroll events\n  const handleScroll = useCallback(() => {\n    scrollPositionRef.current = window.scrollY;\n  }, []);\n  \n  // Handle resize events\n  const handleResize = useCallback(() => {\n    // Update canvas dimensions\n    setupCanvas();\n    \n    // Update document height\n    updateDocumentHeight();\n    \n    // Note: we do NOT regenerate stars on resize\n    // This ensures stars stay in the same relative positions\n  }, [setupCanvas, updateDocumentHeight]);\n  \n  // Detect reduced motion preference\n  useEffect(() => {\n    const reducedMotionQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\n    setPrefersReducedMotion(reducedMotionQuery.matches);\n    \n    const handleReducedMotionChange = (e) => {\n      setPrefersReducedMotion(e.matches);\n    };\n    \n    reducedMotionQuery.addEventListener('change', handleReducedMotionChange);\n    \n    return () => {\n      reducedMotionQuery.removeEventListener('change', handleReducedMotionChange);\n    };\n  }, []);\n  \n  // Initialize component\n  useEffect(() => {\n    // Only initialize once\n    if (isInitializedRef.current) return;\n    isInitializedRef.current = true;\n    \n    // Setup canvas\n    setupCanvas();\n    \n    // Update document height\n    updateDocumentHeight();\n    \n    // Generate stars\n    generateStars();\n    \n    // Add event listeners\n    window.addEventListener('scroll', handleScroll, { passive: true });\n    window.addEventListener('resize', handleResize);\n    \n    // Start animation loop\n    animationFrameRef.current = requestAnimationFrame(animate);\n    \n    // Cleanup\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n      window.removeEventListener('resize', handleResize);\n      \n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [\n    setupCanvas, \n    updateDocumentHeight, \n    generateStars, \n    animate, \n    handleScroll, \n    handleResize\n  ]);\n  \n  return (\n    <div\n      ref={containerRef}\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        zIndex: -1,\n        pointerEvents: 'none'\n      }}\n      aria-hidden=\"true\"\n    >\n      <canvas\n        ref={canvasRef}\n        style={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%'\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Background;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}