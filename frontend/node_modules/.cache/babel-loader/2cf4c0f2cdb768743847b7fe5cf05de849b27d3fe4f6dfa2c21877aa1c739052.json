{"ast":null,"code":"var _jsxFileName = \"/home/valeria/Documents/Crucible/frontend/src/components/sections/codex/creators/creatorshowcase/evosimutils/EvoSimShowcaseBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { createUseStyles } from 'react-jss';\n\n// Styles for the showcase navigation bar\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  // Main container\n  navContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    backgroundColor: 'rgba(10, 10, 15, 0.9)',\n    borderBottom: '1px solid rgba(191, 173, 127, 0.4)',\n    boxShadow: '0 4px 15px rgba(0, 0, 0, 0.4)',\n    zIndex: 100\n  },\n  // Upper navigation section with primary controls\n  upperNav: {\n    display: 'flex',\n    padding: '0.75rem 1.5rem',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid rgba(191, 173, 127, 0.2)'\n  },\n  // Logo and title section\n  titleSection: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.75rem'\n  },\n  logoIcon: {\n    width: '24px',\n    height: '24px',\n    borderRadius: '50%',\n    background: 'linear-gradient(135deg, #bfad7f 0%, #7D6B9E 100%)',\n    boxShadow: '0 0 10px rgba(191, 173, 127, 0.5)'\n  },\n  title: {\n    color: '#bfad7f',\n    fontSize: '1.5rem',\n    margin: 0,\n    fontWeight: 300,\n    letterSpacing: '0.05em',\n    textShadow: '0 2px 5px rgba(0, 0, 0, 0.5)'\n  },\n  // Control buttons section\n  controlsSection: {\n    display: 'flex',\n    gap: '1rem',\n    alignItems: 'center'\n  },\n  // Body shape selector\n  bodyShapeSelector: {\n    position: 'relative'\n  },\n  selectorButton: {\n    backgroundColor: 'rgba(30, 30, 40, 0.6)',\n    border: '1px solid rgba(191, 173, 127, 0.3)',\n    color: '#e0e0e0',\n    padding: '0.5rem 1rem',\n    borderRadius: '4px',\n    fontFamily: 'inherit',\n    fontSize: '0.9rem',\n    cursor: 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.5rem',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(191, 173, 127, 0.2)',\n      borderColor: 'rgba(191, 173, 127, 0.6)'\n    }\n  },\n  selectorMenu: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    backgroundColor: 'rgba(15, 15, 20, 0.95)',\n    minWidth: '250px',\n    maxHeight: '60vh',\n    overflowY: 'auto',\n    borderRadius: '4px',\n    padding: '0.5rem',\n    boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5)',\n    zIndex: 101,\n    border: '1px solid rgba(191, 173, 127, 0.3)'\n  },\n  menuItem: {\n    padding: '0.75rem',\n    cursor: 'pointer',\n    borderRadius: '3px',\n    transition: 'all 0.15s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(191, 173, 127, 0.2)'\n    }\n  },\n  menuItemActive: {\n    backgroundColor: 'rgba(191, 173, 127, 0.3)'\n  },\n  menuItemName: {\n    fontSize: '0.95rem',\n    color: '#bfad7f',\n    fontWeight: 500,\n    marginBottom: '0.25rem'\n  },\n  menuItemDesc: {\n    fontSize: '0.8rem',\n    color: 'rgba(224, 224, 224, 0.7)'\n  },\n  // Filter dropdown\n  filterSelector: {\n    position: 'relative'\n  },\n  // Main navigation tabs\n  navTabs: {\n    display: 'flex',\n    marginLeft: 'auto'\n  },\n  navTab: {\n    padding: '0.5rem 1rem',\n    backgroundColor: 'transparent',\n    border: 'none',\n    borderBottom: '2px solid transparent',\n    color: 'rgba(224, 224, 224, 0.7)',\n    cursor: 'pointer',\n    fontSize: '0.9rem',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      color: '#bfad7f',\n      borderBottomColor: 'rgba(191, 173, 127, 0.3)'\n    }\n  },\n  navTabActive: {\n    color: '#bfad7f',\n    borderBottomColor: '#bfad7f'\n  },\n  // View control buttons\n  viewControls: {\n    display: 'flex',\n    gap: '0.5rem',\n    marginLeft: '1rem',\n    alignItems: 'center'\n  },\n  viewButton: {\n    backgroundColor: 'rgba(30, 30, 40, 0.6)',\n    border: '1px solid rgba(191, 173, 127, 0.3)',\n    color: '#e0e0e0',\n    width: '28px',\n    height: '28px',\n    borderRadius: '4px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: '0.9rem',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(191, 173, 127, 0.2)',\n      borderColor: 'rgba(191, 173, 127, 0.6)'\n    }\n  },\n  // Content panels section\n  contentPanel: {\n    padding: '1rem 1.5rem',\n    overflow: 'hidden',\n    transition: 'height 0.3s ease, opacity 0.3s ease'\n  },\n  // Network visualization controls panel\n  visualizationPanel: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    borderBottom: '1px solid rgba(191, 173, 127, 0.2)',\n    paddingBottom: '1rem',\n    flexWrap: 'wrap',\n    gap: '1.5rem'\n  },\n  sectionTitle: {\n    color: 'rgba(191, 173, 127, 0.8)',\n    fontSize: '1rem',\n    margin: 0,\n    marginBottom: '0.5rem'\n  },\n  // Visualization mode buttons\n  visualizationButtons: {\n    display: 'flex',\n    gap: '0.5rem'\n  },\n  visualButton: {\n    backgroundColor: 'rgba(15, 15, 20, 0.6)',\n    border: '1px solid rgba(191, 173, 127, 0.4)',\n    color: '#e0e0e0',\n    padding: '0.5rem 1rem',\n    borderRadius: '4px',\n    fontFamily: 'inherit',\n    fontSize: '0.9rem',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(191, 173, 127, 0.2)'\n    }\n  },\n  visualButtonActive: {\n    backgroundColor: 'rgba(191, 173, 127, 0.3)',\n    borderColor: 'rgba(191, 173, 127, 0.7)'\n  },\n  // Trait probabilities section\n  probabilitiesSection: {\n    flex: 1,\n    minWidth: '280px'\n  },\n  emergenceButton: {\n    backgroundColor: 'rgba(125, 107, 158, 0.3)',\n    border: '1px solid rgba(125, 107, 158, 0.6)',\n    color: '#e0e0e0',\n    padding: '0.5rem 1rem',\n    borderRadius: '4px',\n    fontFamily: 'inherit',\n    fontSize: '0.9rem',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(125, 107, 158, 0.4)'\n    }\n  },\n  // Tab content for traits\n  traitsPanel: {\n    marginTop: '1rem'\n  },\n  // Trait category section\n  categorySection: {\n    marginBottom: '1.5rem'\n  },\n  categoryHeading: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.75rem',\n    marginBottom: '0.75rem'\n  },\n  categoryIcon: {\n    width: '16px',\n    height: '16px',\n    borderRadius: '50%'\n  },\n  categoryName: {\n    color: '#e0e0e0',\n    fontSize: '1rem',\n    margin: 0\n  },\n  // Trait cards container\n  traitCards: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',\n    gap: '0.75rem'\n  },\n  traitCard: {\n    backgroundColor: 'rgba(30, 30, 40, 0.6)',\n    border: '1px solid rgba(191, 173, 127, 0.3)',\n    borderRadius: '4px',\n    padding: '0.75rem',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(191, 173, 127, 0.15)',\n      borderColor: 'rgba(191, 173, 127, 0.5)'\n    }\n  },\n  traitCardActive: {\n    backgroundColor: 'rgba(191, 173, 127, 0.2)',\n    borderColor: 'rgba(191, 173, 127, 0.6)',\n    boxShadow: '0 0 10px rgba(191, 173, 127, 0.2)'\n  },\n  traitHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '0.5rem'\n  },\n  traitName: {\n    color: '#bfad7f',\n    fontSize: '0.95rem',\n    margin: 0,\n    fontWeight: 500\n  },\n  traitTier: {\n    backgroundColor: 'rgba(191, 173, 127, 0.2)',\n    color: '#bfad7f',\n    padding: '0.1rem 0.5rem',\n    borderRadius: '2px',\n    fontSize: '0.75rem'\n  },\n  traitDesc: {\n    color: 'rgba(224, 224, 224, 0.7)',\n    fontSize: '0.8rem',\n    margin: 0,\n    lineHeight: 1.4\n  },\n  // Trait probabilities display\n  traitProbabilities: {\n    marginTop: '1rem'\n  },\n  probabilityChart: {\n    width: '100%',\n    background: 'rgba(15, 15, 20, 0.5)',\n    borderRadius: '4px',\n    padding: '1rem',\n    border: '1px solid rgba(191, 173, 127, 0.2)'\n  },\n  probabilityBar: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: '0.5rem'\n  },\n  probabilityLabel: {\n    color: '#e0e0e0',\n    fontSize: '0.85rem',\n    width: '120px',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n  },\n  probabilityTrack: {\n    flex: 1,\n    height: '8px',\n    backgroundColor: 'rgba(30, 30, 40, 0.6)',\n    borderRadius: '4px',\n    overflow: 'hidden',\n    position: 'relative'\n  },\n  probabilityFill: {\n    position: 'absolute',\n    height: '100%',\n    backgroundColor: '#7D6B9E',\n    borderRadius: '4px',\n    transition: 'width 0.3s ease'\n  },\n  probabilityValue: {\n    color: '#bfad7f',\n    fontSize: '0.85rem',\n    marginLeft: '0.75rem',\n    fontWeight: 'bold',\n    width: '40px',\n    textAlign: 'right'\n  },\n  // Environment panel\n  environmentPanel: {\n    marginTop: '1rem'\n  },\n  // Enhanced sliders grid\n  sliderGrid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',\n    gap: '1.5rem',\n    marginTop: '1rem'\n  },\n  sliderContainer: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  sliderHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '0.5rem'\n  },\n  sliderLabel: {\n    color: '#e0e0e0',\n    fontSize: '0.95rem'\n  },\n  sliderValue: {\n    fontWeight: 'bold',\n    color: '#bfad7f',\n    fontSize: '0.95rem'\n  },\n  sliderTrack: {\n    width: '100%',\n    height: '8px',\n    backgroundColor: 'rgba(30, 30, 40, 0.6)',\n    borderRadius: '4px',\n    position: 'relative',\n    margin: '0.5rem 0'\n  },\n  sliderFill: {\n    position: 'absolute',\n    height: '100%',\n    borderRadius: '4px',\n    transition: 'width 0.3s ease'\n  },\n  sliderThumb: {\n    width: '18px',\n    height: '18px',\n    borderRadius: '50%',\n    backgroundColor: '#bfad7f',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translate(-50%, -50%)',\n    cursor: 'pointer',\n    border: '2px solid rgba(15, 15, 20, 0.9)',\n    boxShadow: '0 0 5px rgba(191, 173, 127, 0.5)',\n    transition: 'transform 0.1s ease',\n    '&:hover': {\n      transform: 'translate(-50%, -50%) scale(1.1)'\n    }\n  },\n  sliderInput: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    opacity: 0,\n    cursor: 'pointer'\n  },\n  // Slider scale labels\n  sliderScale: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    fontSize: '0.8rem',\n    color: 'rgba(224, 224, 224, 0.6)'\n  },\n  // Environmental stress indicators\n  environmentalStressSection: {\n    marginTop: '2rem',\n    padding: '1rem',\n    backgroundColor: 'rgba(15, 15, 20, 0.6)',\n    borderRadius: '4px',\n    border: '1px solid rgba(191, 173, 127, 0.2)'\n  },\n  stressHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '1rem'\n  },\n  stressTitle: {\n    color: '#bfad7f',\n    fontSize: '1rem',\n    margin: 0\n  },\n  stressValue: {\n    fontWeight: 'bold',\n    fontSize: '1.1rem'\n  },\n  adaptationBar: {\n    width: '100%',\n    height: '12px',\n    backgroundColor: 'rgba(30, 30, 40, 0.6)',\n    borderRadius: '6px',\n    overflow: 'hidden',\n    position: 'relative',\n    marginBottom: '0.75rem'\n  },\n  adaptationFill: {\n    height: '100%',\n    transition: 'width 0.5s ease, background-color 0.5s ease'\n  },\n  adaptationLabel: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    fontSize: '0.85rem',\n    color: 'rgba(224, 224, 224, 0.8)'\n  },\n  // Synthesis panel\n  synthesisPanel: {\n    marginTop: '1rem'\n  },\n  synthesisCard: {\n    backgroundColor: 'rgba(30, 30, 40, 0.6)',\n    border: '1px solid rgba(125, 107, 158, 0.4)',\n    borderRadius: '4px',\n    padding: '1rem',\n    marginBottom: '1rem'\n  },\n  synthesisHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '0.75rem'\n  },\n  synthesisTitle: {\n    color: '#7D6B9E',\n    fontSize: '1.1rem',\n    margin: 0\n  },\n  synthesisProbability: {\n    backgroundColor: 'rgba(125, 107, 158, 0.3)',\n    color: '#e0e0e0',\n    padding: '0.25rem 0.5rem',\n    borderRadius: '4px',\n    fontSize: '0.85rem'\n  },\n  synthesisDesc: {\n    color: 'rgba(224, 224, 224, 0.8)',\n    fontSize: '0.9rem',\n    lineHeight: 1.5,\n    margin: '0.5rem 0'\n  },\n  synthesisRequirements: {\n    backgroundColor: 'rgba(15, 15, 20, 0.5)',\n    padding: '0.75rem',\n    borderRadius: '4px',\n    marginTop: '0.75rem'\n  },\n  requirementTitle: {\n    color: '#bfad7f',\n    fontSize: '0.9rem',\n    margin: '0 0 0.5rem 0'\n  },\n  requirementList: {\n    margin: 0,\n    padding: '0 0 0 1.5rem',\n    color: 'rgba(224, 224, 224, 0.7)',\n    fontSize: '0.85rem',\n    '& li': {\n      marginBottom: '0.25rem'\n    }\n  },\n  // Media queries for responsiveness\n  '@media (max-width: 768px)': {\n    upperNav: {\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      gap: '0.75rem'\n    },\n    controlsSection: {\n      width: '100%',\n      justifyContent: 'space-between'\n    },\n    navTabs: {\n      marginTop: '0.5rem',\n      width: '100%',\n      justifyContent: 'space-between'\n    },\n    visualizationPanel: {\n      flexDirection: 'column'\n    },\n    sliderGrid: {\n      gridTemplateColumns: '1fr'\n    }\n  }\n});\n\n/**\n * EvoSimShowcaseBar - Enhanced navigation component for the Evolution Simulator\n * \n * @param {Object} props\n * @param {string} props.selectedBodyShape - Currently selected body shape\n * @param {Function} props.onBodyShapeChange - Handler for body shape changes\n * @param {string} props.activeTab - Currently active main tab\n * @param {Function} props.onTabChange - Handler for tab changes\n * @param {string} props.visualizationMode - Current visualization mode\n * @param {Function} props.onVisualizationModeChange - Handler for visualization mode changes\n * @param {Object} props.environment - Current environmental conditions\n * @param {Function} props.onEnvironmentChange - Handler for environment changes\n * @param {boolean} props.showEmergence - Whether to show emergence probabilities\n * @param {Function} props.onToggleEmergence - Handler for toggling emergence probabilities\n * @param {Object} props.selectedTraits - Currently selected traits for each category\n * @param {Function} props.onTraitChange - Handler for trait changes\n * @param {number} props.zoom - Current zoom level\n * @param {Function} props.onZoomChange - Handler for zoom changes\n * @param {string} props.selectedCategory - Currently selected category filter\n * @param {Function} props.onCategoryFilterChange - Handler for category filter changes\n */\nconst EvoSimShowcaseBar = ({\n  selectedBodyShape = 'quadrupedal',\n  onBodyShapeChange,\n  activeTab = 'traits',\n  onTabChange,\n  visualizationMode = 'direct',\n  onVisualizationModeChange,\n  environment = {},\n  onEnvironmentChange,\n  showEmergence = false,\n  onToggleEmergence,\n  selectedTraits = {},\n  onTraitChange,\n  zoom = 1,\n  onZoomChange,\n  selectedCategory = null,\n  onCategoryFilterChange\n}) => {\n  _s();\n  const classes = useStyles();\n\n  // Local state for dropdown menus\n  const [showBodyShapeMenu, setShowBodyShapeMenu] = useState(false);\n  const [showCategoryMenu, setShowCategoryMenu] = useState(false);\n  const [showTraitMenus, setShowTraitMenus] = useState({});\n\n  // State for calculated values\n  const [totalEffectiveStress, setTotalEffectiveStress] = useState(0);\n  const [adaptationProbability, setAdaptationProbability] = useState(0);\n\n  // Define body shapes\n  const bodyShapes = [{\n    id: 'bipedal',\n    name: 'Bipedal',\n    description: 'Upright forms with manipulative upper limbs'\n  }, {\n    id: 'quadrupedal',\n    name: 'Quadrupedal',\n    description: 'Four-limbed forms optimized for stability and movement'\n  }, {\n    id: 'serpentine',\n    name: 'Serpentine',\n    description: 'Elongated, limbless forms specialized for flexibility'\n  }, {\n    id: 'amorphous',\n    name: 'Amorphous',\n    description: 'Malleable forms without fixed structure'\n  }, {\n    id: 'insectoid',\n    name: 'Multi-limbed',\n    description: 'Multi-limbed, segmented forms'\n  }, {\n    id: 'avian',\n    name: 'Avian',\n    description: 'Forms optimized for flight and aerial movement'\n  }, {\n    id: 'aquatic',\n    name: 'Aquatic',\n    description: 'Forms specialized for water environments'\n  }];\n\n  // Define trait categories\n  const traitCategories = [{\n    id: 'locomotion',\n    name: 'Locomotion',\n    color: '#7D6B9E'\n  }, {\n    id: 'metabolism',\n    name: 'Metabolism',\n    color: '#5C9D8B'\n  }, {\n    id: 'sensory',\n    name: 'Sensory Acuity',\n    color: '#C99846'\n  }, {\n    id: 'etheric',\n    name: 'Etheric Adaptation',\n    color: '#B54B4B'\n  }, {\n    id: 'thermal',\n    name: 'Thermal Regulation',\n    color: '#A67C52'\n  }];\n\n  // Define environmental pressures with more detailed info\n  const environmentalPressures = [{\n    id: 'eldritch_influence',\n    name: 'Eldritch Influence',\n    default: 0.5,\n    min: 0,\n    max: 1,\n    minLabel: 'None',\n    maxLabel: 'Overwhelming',\n    color: '#7D6B9E',\n    description: 'The presence of otherworldly, reality-bending forces'\n  }, {\n    id: 'corruption_level',\n    name: 'Corruption Level',\n    default: 0.5,\n    min: 0,\n    max: 1,\n    minLabel: 'Pure',\n    maxLabel: 'Corrupted',\n    color: '#B54B4B',\n    description: 'The degree to which the environment has been tainted by unnatural forces'\n  }, {\n    id: 'resource_scarcity',\n    name: 'Resource Scarcity',\n    default: 0.5,\n    min: 0,\n    max: 1,\n    minLabel: 'Abundant',\n    maxLabel: 'Barren',\n    color: '#5C9D8B',\n    description: 'The availability of essential resources for survival'\n  }, {\n    id: 'ambient_magic',\n    name: 'Ambient Magic',\n    default: 0.5,\n    min: 0,\n    max: 1,\n    minLabel: 'Mundane',\n    maxLabel: 'Saturated',\n    color: '#bfad7f',\n    description: 'The concentration of magical energies in the environment'\n  }, {\n    id: 'darkness',\n    name: 'Darkness',\n    default: 0.5,\n    min: 0,\n    max: 1,\n    minLabel: 'Light',\n    maxLabel: 'Dark',\n    color: '#333333',\n    description: 'The level of light available in the environment'\n  }];\n\n  // Sample trait data (would be provided by props)\n  const traitsByCategory = {\n    locomotion: [{\n      id: 'running',\n      name: 'Swift Limbs',\n      tier: 1,\n      description: 'Limbs designed for quick locomotion across varied terrain.',\n      probability: 0.82\n    }, {\n      id: 'climbing',\n      name: 'Grasping Appendages',\n      tier: 1,\n      description: 'Specialized limb structures with superior grip for vertical movement.',\n      probability: 0.65\n    }, {\n      id: 'webbed',\n      name: 'Webbed Appendages',\n      tier: 1,\n      description: 'Limbs with membrane structures optimized for aquatic movement.',\n      probability: 0.43\n    }],\n    metabolism: [{\n      id: 'carnivore',\n      name: 'Carnivore Digestion',\n      tier: 1,\n      description: 'Specialized digestive system optimized for meat processing.',\n      probability: 0.76\n    }, {\n      id: 'omnivore',\n      name: 'Omnivore Adaptation',\n      tier: 1,\n      description: 'Versatile digestive system capable of processing diverse food sources.',\n      probability: 0.59\n    }],\n    sensory: [{\n      id: 'acute_vision',\n      name: 'Acute Vision',\n      tier: 1,\n      description: 'Highly developed visual organs with exceptional acuity.',\n      probability: 0.68\n    }, {\n      id: 'sonar_mapping',\n      name: 'Echolocation',\n      tier: 1,\n      description: 'Ability to emit and detect sound waves for environmental mapping.',\n      probability: 0.52\n    }],\n    etheric: [{\n      id: 'ether_sensing',\n      name: 'Ether Sensing',\n      tier: 1,\n      description: 'Specialized organs that can detect and interpret etheric energy patterns.',\n      probability: 0.74\n    }, {\n      id: 'ether_channeling',\n      name: 'Ether Channeling',\n      tier: 1,\n      description: 'Biological structures capable of directing and manipulating etheric energies.',\n      probability: 0.47\n    }],\n    thermal: [{\n      id: 'thick_blubber',\n      name: 'Thick Blubber',\n      tier: 1,\n      description: 'Dense fatty tissue layer providing insulation in cold environments.',\n      probability: 0.39\n    }, {\n      id: 'reflective_scales',\n      name: 'Reflective Scales',\n      tier: 1,\n      description: 'Light-reflecting scales that help regulate heat absorption.',\n      probability: 0.85\n    }]\n  };\n\n  // Sample synthesis options\n  const synthesisOptions = [{\n    id: 'dimensional_sight',\n    name: 'Dimensional Sight',\n    description: 'Advanced visual organs that can perceive multiple planes of reality simultaneously, revealing hidden truths and dangers.',\n    probability: 0.37,\n    requirements: ['Requires Eldritch Influence > 0.7', 'Requires Acute Vision trait', 'Requires Ether Sensing trait']\n  }, {\n    id: 'void_communion',\n    name: 'Void Communion',\n    description: 'Specialized neural structures that establish a symbiotic relationship with eldritch entities, granting access to forbidden knowledge.',\n    probability: 0.19,\n    requirements: ['Requires Corruption Level > 0.6', 'Requires Ether Channeling trait', 'Requires prolonged exposure to high Eldritch Influence']\n  }];\n\n  // Calculate effective stress and adaptation probability\n  useEffect(() => {\n    // Simplified calculation for this example\n    const stressValues = environmentalPressures.map(pressure => environment[pressure.id] !== undefined ? environment[pressure.id] : pressure.default);\n    const avgStress = stressValues.reduce((sum, value) => sum + value, 0) / stressValues.length;\n    setTotalEffectiveStress(avgStress);\n\n    // Simplified adaptation probability based on sigmoid function\n    const adaptProb = 1 / (1 + Math.exp(-10 * (avgStress - 0.5)));\n    setAdaptationProbability(adaptProb);\n  }, [environment]);\n\n  // Handle body shape selection\n  const handleSelectBodyShape = shapeId => {\n    onBodyShapeChange(shapeId);\n    setShowBodyShapeMenu(false);\n  };\n\n  // Handle category filter selection\n  const handleSelectCategory = categoryId => {\n    onCategoryFilterChange(categoryId);\n    setShowCategoryMenu(false);\n  };\n\n  // Handle trait selection\n  const handleSelectTrait = (categoryId, traitId) => {\n    onTraitChange(categoryId, traitId);\n  };\n\n  // Handle trait category dropdown toggle\n  const handleToggleTraitMenu = categoryId => {\n    setShowTraitMenus(prev => ({\n      ...prev,\n      [categoryId]: !prev[categoryId]\n    }));\n\n    // Close other menus\n    setShowBodyShapeMenu(false);\n    setShowCategoryMenu(false);\n    Object.keys(showTraitMenus).forEach(key => {\n      if (key !== categoryId) {\n        setShowTraitMenus(prev => ({\n          ...prev,\n          [key]: false\n        }));\n      }\n    });\n  };\n\n  // Handle environment pressure change\n  const handleEnvironmentChange = (pressureId, value) => {\n    onEnvironmentChange({\n      ...environment,\n      [pressureId]: parseFloat(value)\n    });\n  };\n\n  // Get zoom controls\n  const handleZoom = direction => {\n    const newZoom = direction === 'in' ? Math.min(zoom + 0.1, 3) : Math.max(zoom - 0.1, 0.5);\n    onZoomChange(newZoom);\n  };\n\n  // Get selected body shape name\n  const getSelectedBodyShapeName = () => {\n    const shape = bodyShapes.find(shape => shape.id === selectedBodyShape);\n    return shape ? shape.name : 'Select Body Shape';\n  };\n\n  // Get selected category name\n  const getSelectedCategoryName = () => {\n    if (!selectedCategory) return 'All Categories';\n    const category = traitCategories.find(cat => cat.id === selectedCategory);\n    return category ? category.name : 'All Categories';\n  };\n\n  // Render environmental stress bars with appropriate colors\n  const getStressColor = value => {\n    if (value < 0.4) return '#5C9D8B';\n    if (value < 0.7) return '#C99846';\n    return '#B54B4B';\n  };\n\n  // Render environmental pressure sliders\n  const renderEnvironmentalPressure = pressure => {\n    const value = environment[pressure.id] !== undefined ? environment[pressure.id] : pressure.default;\n    const percentage = value * 100;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sliderContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.sliderHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.sliderLabel,\n          children: pressure.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.sliderValue,\n          children: value.toFixed(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.sliderTrack,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.sliderFill,\n          style: {\n            width: `${percentage}%`,\n            backgroundColor: pressure.color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: pressure.min,\n          max: pressure.max,\n          step: \"0.1\",\n          value: value,\n          onChange: e => handleEnvironmentChange(pressure.id, e.target.value),\n          className: classes.sliderInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.sliderThumb,\n          style: {\n            left: `${percentage}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.sliderScale,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: pressure.minLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: pressure.maxLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 867,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '0.8rem',\n          color: 'rgba(224, 224, 224, 0.6)',\n          marginTop: '0.25rem'\n        },\n        children: pressure.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 9\n      }, this)]\n    }, pressure.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render trait cards\n  const renderTraitCards = categoryId => {\n    const traits = traitsByCategory[categoryId] || [];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.traitCards,\n      children: traits.map(trait => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.traitCard} ${selectedTraits[categoryId] === trait.id ? classes.traitCardActive : ''}`,\n        onClick: () => handleSelectTrait(categoryId, trait.id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.traitHeader,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: classes.traitName,\n            children: trait.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 892,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.traitTier,\n            children: [\"Tier \", trait.tier]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 893,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.traitDesc,\n          children: trait.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 13\n        }, this)]\n      }, trait.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 886,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 884,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render trait category sections\n  const renderTraitCategories = () => {\n    return traitCategories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.categorySection,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.categoryHeading,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.categoryIcon,\n          style: {\n            backgroundColor: category.color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 907,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: classes.categoryName,\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 906,\n        columnNumber: 9\n      }, this), renderTraitCards(category.id)]\n    }, category.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 905,\n      columnNumber: 7\n    }, this));\n  };\n\n  // Render trait probabilities chart\n  const renderProbabilitiesChart = () => {\n    // Flatten all traits into a single array and sort by probability\n    const allTraits = Object.values(traitsByCategory).flat().sort((a, b) => b.probability - a.probability).slice(0, 5); // Show top 5\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.probabilityChart,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          color: '#bfad7f',\n          margin: '0 0 1rem 0'\n        },\n        children: \"Highest Adaptation Probabilities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 928,\n        columnNumber: 9\n      }, this), allTraits.map(trait => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.probabilityBar,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.probabilityLabel,\n          children: trait.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 931,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.probabilityTrack,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.probabilityFill,\n            style: {\n              width: `${trait.probability * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.probabilityValue,\n          children: [(trait.probability * 100).toFixed(0), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 13\n        }, this)]\n      }, trait.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 930,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 927,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render synthesis options\n  const renderSynthesisOptions = () => {\n    return synthesisOptions.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.synthesisCard,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.synthesisHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: classes.synthesisTitle,\n          children: option.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.synthesisProbability,\n          children: [(option.probability * 100).toFixed(0), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.synthesisDesc,\n        children: option.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.synthesisRequirements,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: classes.requirementTitle,\n          children: \"Requirements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 955,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: classes.requirementList,\n          children: option.requirements.map((req, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: req\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 958,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 9\n      }, this)]\n    }, option.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 948,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.navContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.upperNav,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.titleSection,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.logoIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 971,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: classes.title,\n          children: \"Crescent Evolution System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 972,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 970,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.controlsSection,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.bodyShapeSelector,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.selectorButton,\n            onClick: () => {\n              setShowBodyShapeMenu(!showBodyShapeMenu);\n              setShowCategoryMenu(false);\n              setShowTraitMenus({});\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Body Shape:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 986,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: getSelectedBodyShapeName()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 987,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '0.7rem',\n                marginLeft: '0.25rem'\n              },\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 988,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 978,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n            children: showBodyShapeMenu && /*#__PURE__*/_jsxDEV(motion.div, {\n              className: classes.selectorMenu,\n              initial: {\n                opacity: 0,\n                y: -10\n              },\n              animate: {\n                opacity: 1,\n                y: 0\n              },\n              exit: {\n                opacity: 0,\n                y: -10\n              },\n              transition: {\n                duration: 0.2\n              },\n              children: bodyShapes.map(shape => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${classes.menuItem} ${selectedBodyShape === shape.id ? classes.menuItemActive : ''}`,\n                onClick: () => handleSelectBodyShape(shape.id),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.menuItemName,\n                  children: shape.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1006,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.menuItemDesc,\n                  children: shape.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1007,\n                  columnNumber: 23\n                }, this)]\n              }, shape.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1001,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 993,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 991,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.filterSelector,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.selectorButton,\n            onClick: () => {\n              setShowCategoryMenu(!showCategoryMenu);\n              setShowBodyShapeMenu(false);\n              setShowTraitMenus({});\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Filter:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1025,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: getSelectedCategoryName()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1026,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '0.7rem',\n                marginLeft: '0.25rem'\n              },\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1027,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1017,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n            children: showCategoryMenu && /*#__PURE__*/_jsxDEV(motion.div, {\n              className: classes.selectorMenu,\n              initial: {\n                opacity: 0,\n                y: -10\n              },\n              animate: {\n                opacity: 1,\n                y: 0\n              },\n              exit: {\n                opacity: 0,\n                y: -10\n              },\n              transition: {\n                duration: 0.2\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${classes.menuItem} ${!selectedCategory ? classes.menuItemActive : ''}`,\n                onClick: () => handleSelectCategory(null),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.menuItemName,\n                  children: \"All Categories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1043,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1039,\n                columnNumber: 19\n              }, this), traitCategories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${classes.menuItem} ${selectedCategory === category.id ? classes.menuItemActive : ''}`,\n                onClick: () => handleSelectCategory(category.id),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.menuItemName,\n                  children: category.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1052,\n                  columnNumber: 23\n                }, this)\n              }, category.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1047,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1032,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1030,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.navTabs,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${classes.navTab} ${activeTab === 'traits' ? classes.navTabActive : ''}`,\n            onClick: () => onTabChange('traits'),\n            children: \"Traits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1062,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${classes.navTab} ${activeTab === 'environment' ? classes.navTabActive : ''}`,\n            onClick: () => onTabChange('environment'),\n            children: \"Environment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1068,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${classes.navTab} ${activeTab === 'synthesis' ? classes.navTabActive : ''}`,\n            onClick: () => onTabChange('synthesis'),\n            children: \"Synthesis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1074,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1061,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.viewControls,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.viewButton,\n            onClick: () => handleZoom('in'),\n            title: \"Zoom In\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1084,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.viewButton,\n            onClick: () => handleZoom('out'),\n            title: \"Zoom Out\",\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1091,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1083,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 975,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 969,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.visualizationPanel,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: classes.sectionTitle,\n          children: \"Network Visualization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.visualizationButtons,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${classes.visualButton} ${visualizationMode === 'direct' ? classes.visualButtonActive : ''}`,\n            onClick: () => onVisualizationModeChange('direct'),\n            children: \"Direct Connections\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${classes.visualButton} ${visualizationMode === 'tree' ? classes.visualButtonActive : ''}`,\n            onClick: () => onVisualizationModeChange('tree'),\n            children: \"Evolutionary Tree\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${classes.visualButton} ${visualizationMode === 'category' ? classes.visualButtonActive : ''}`,\n            onClick: () => onVisualizationModeChange('category'),\n            children: \"Trait Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.probabilitiesSection,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: classes.sectionTitle,\n          children: \"Trait Probabilities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.emergenceButton,\n          onClick: onToggleEmergence,\n          children: [showEmergence ? 'Hide' : 'Show', \" Emergence Probabilities\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.contentPanel,\n      children: [activeTab === 'traits' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.traitsPanel,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '2rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1\n            },\n            children: renderTraitCategories()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '300px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.traitProbabilities,\n              children: renderProbabilitiesChart()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1150,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1149,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1145,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1144,\n        columnNumber: 11\n      }, this), activeTab === 'environment' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.environmentPanel,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.sliderGrid,\n          children: environmentalPressures.map(pressure => renderEnvironmentalPressure(pressure))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.environmentalStressSection,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.stressHeader,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: classes.stressTitle,\n              children: \"Environmental Stress Impact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1167,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.stressValue,\n              style: {\n                color: getStressColor(totalEffectiveStress)\n              },\n              children: [(totalEffectiveStress * 100).toFixed(0), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1168,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.adaptationBar,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.adaptationFill,\n              style: {\n                width: `${totalEffectiveStress * 100}%`,\n                backgroundColor: getStressColor(totalEffectiveStress)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1177,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.stressHeader,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: classes.stressTitle,\n              children: \"Adaptation Probability\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.stressValue,\n              style: {\n                color: getStressColor(adaptationProbability)\n              },\n              children: [(adaptationProbability * 100).toFixed(0), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1188,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.adaptationBar,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.adaptationFill,\n              style: {\n                width: `${adaptationProbability * 100}%`,\n                backgroundColor: getStressColor(adaptationProbability)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1197,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.adaptationLabel,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Stable\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1207,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Adaptation Likely\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1208,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1206,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1160,\n        columnNumber: 11\n      }, this), activeTab === 'synthesis' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.synthesisPanel,\n        children: renderSynthesisOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1216,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 967,\n    columnNumber: 5\n  }, this);\n};\n_s(EvoSimShowcaseBar, \"1o4fdqtkDE4V1l6KKsYGN2bWjhY=\", false, function () {\n  return [useStyles];\n});\n_c = EvoSimShowcaseBar;\nexport default EvoSimShowcaseBar;\nvar _c;\n$RefreshReg$(_c, \"EvoSimShowcaseBar\");","map":{"version":3,"names":["React","useState","useEffect","motion","AnimatePresence","createUseStyles","jsxDEV","_jsxDEV","useStyles","navContainer","display","flexDirection","width","backgroundColor","borderBottom","boxShadow","zIndex","upperNav","padding","justifyContent","alignItems","titleSection","gap","logoIcon","height","borderRadius","background","title","color","fontSize","margin","fontWeight","letterSpacing","textShadow","controlsSection","bodyShapeSelector","position","selectorButton","border","fontFamily","cursor","transition","borderColor","selectorMenu","top","left","minWidth","maxHeight","overflowY","menuItem","menuItemActive","menuItemName","marginBottom","menuItemDesc","filterSelector","navTabs","marginLeft","navTab","borderBottomColor","navTabActive","viewControls","viewButton","contentPanel","overflow","visualizationPanel","paddingBottom","flexWrap","sectionTitle","visualizationButtons","visualButton","visualButtonActive","probabilitiesSection","flex","emergenceButton","traitsPanel","marginTop","categorySection","categoryHeading","categoryIcon","categoryName","traitCards","gridTemplateColumns","traitCard","traitCardActive","traitHeader","traitName","traitTier","traitDesc","lineHeight","traitProbabilities","probabilityChart","probabilityBar","probabilityLabel","textOverflow","whiteSpace","probabilityTrack","probabilityFill","probabilityValue","textAlign","environmentPanel","sliderGrid","sliderContainer","sliderHeader","sliderLabel","sliderValue","sliderTrack","sliderFill","sliderThumb","transform","sliderInput","opacity","sliderScale","environmentalStressSection","stressHeader","stressTitle","stressValue","adaptationBar","adaptationFill","adaptationLabel","synthesisPanel","synthesisCard","synthesisHeader","synthesisTitle","synthesisProbability","synthesisDesc","synthesisRequirements","requirementTitle","requirementList","EvoSimShowcaseBar","selectedBodyShape","onBodyShapeChange","activeTab","onTabChange","visualizationMode","onVisualizationModeChange","environment","onEnvironmentChange","showEmergence","onToggleEmergence","selectedTraits","onTraitChange","zoom","onZoomChange","selectedCategory","onCategoryFilterChange","_s","classes","showBodyShapeMenu","setShowBodyShapeMenu","showCategoryMenu","setShowCategoryMenu","showTraitMenus","setShowTraitMenus","totalEffectiveStress","setTotalEffectiveStress","adaptationProbability","setAdaptationProbability","bodyShapes","id","name","description","traitCategories","environmentalPressures","default","min","max","minLabel","maxLabel","traitsByCategory","locomotion","tier","probability","metabolism","sensory","etheric","thermal","synthesisOptions","requirements","stressValues","map","pressure","undefined","avgStress","reduce","sum","value","length","adaptProb","Math","exp","handleSelectBodyShape","shapeId","handleSelectCategory","categoryId","handleSelectTrait","traitId","handleToggleTraitMenu","prev","Object","keys","forEach","key","handleEnvironmentChange","pressureId","parseFloat","handleZoom","direction","newZoom","getSelectedBodyShapeName","shape","find","getSelectedCategoryName","category","cat","getStressColor","renderEnvironmentalPressure","percentage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","style","type","step","onChange","e","target","renderTraitCards","traits","trait","onClick","renderTraitCategories","renderProbabilitiesChart","allTraits","values","flat","sort","a","b","slice","renderSynthesisOptions","option","req","index","div","initial","y","animate","exit","duration","_c","$RefreshReg$"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/sections/codex/creators/creatorshowcase/evosimutils/EvoSimShowcaseBar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { createUseStyles } from 'react-jss';\n\n// Styles for the showcase navigation bar\nconst useStyles = createUseStyles({\n  // Main container\n  navContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    backgroundColor: 'rgba(10, 10, 15, 0.9)',\n    borderBottom: '1px solid rgba(191, 173, 127, 0.4)',\n    boxShadow: '0 4px 15px rgba(0, 0, 0, 0.4)',\n    zIndex: 100,\n  },\n  \n  // Upper navigation section with primary controls\n  upperNav: {\n    display: 'flex',\n    padding: '0.75rem 1.5rem',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid rgba(191, 173, 127, 0.2)',\n  },\n  \n  // Logo and title section\n  titleSection: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.75rem',\n  },\n  logoIcon: {\n    width: '24px',\n    height: '24px',\n    borderRadius: '50%',\n    background: 'linear-gradient(135deg, #bfad7f 0%, #7D6B9E 100%)',\n    boxShadow: '0 0 10px rgba(191, 173, 127, 0.5)',\n  },\n  title: {\n    color: '#bfad7f',\n    fontSize: '1.5rem',\n    margin: 0,\n    fontWeight: 300,\n    letterSpacing: '0.05em',\n    textShadow: '0 2px 5px rgba(0, 0, 0, 0.5)',\n  },\n  \n  // Control buttons section\n  controlsSection: {\n    display: 'flex',\n    gap: '1rem',\n    alignItems: 'center',\n  },\n  \n  // Body shape selector\n  bodyShapeSelector: {\n    position: 'relative',\n  },\n  selectorButton: {\n    backgroundColor: 'rgba(30, 30, 40, 0.6)',\n    border: '1px solid rgba(191, 173, 127, 0.3)',\n    color: '#e0e0e0',\n    padding: '0.5rem 1rem',\n    borderRadius: '4px',\n    fontFamily: 'inherit',\n    fontSize: '0.9rem',\n    cursor: 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.5rem',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(191, 173, 127, 0.2)',\n      borderColor: 'rgba(191, 173, 127, 0.6)',\n    },\n  },\n  selectorMenu: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    backgroundColor: 'rgba(15, 15, 20, 0.95)',\n    minWidth: '250px',\n    maxHeight: '60vh',\n    overflowY: 'auto',\n    borderRadius: '4px',\n    padding: '0.5rem',\n    boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5)',\n    zIndex: 101,\n    border: '1px solid rgba(191, 173, 127, 0.3)',\n  },\n  menuItem: {\n    padding: '0.75rem',\n    cursor: 'pointer',\n    borderRadius: '3px',\n    transition: 'all 0.15s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(191, 173, 127, 0.2)',\n    },\n  },\n  menuItemActive: {\n    backgroundColor: 'rgba(191, 173, 127, 0.3)',\n  },\n  menuItemName: {\n    fontSize: '0.95rem',\n    color: '#bfad7f',\n    fontWeight: 500,\n    marginBottom: '0.25rem',\n  },\n  menuItemDesc: {\n    fontSize: '0.8rem',\n    color: 'rgba(224, 224, 224, 0.7)',\n  },\n  \n  // Filter dropdown\n  filterSelector: {\n    position: 'relative',\n  },\n  \n  // Main navigation tabs\n  navTabs: {\n    display: 'flex',\n    marginLeft: 'auto',\n  },\n  navTab: {\n    padding: '0.5rem 1rem',\n    backgroundColor: 'transparent',\n    border: 'none',\n    borderBottom: '2px solid transparent',\n    color: 'rgba(224, 224, 224, 0.7)',\n    cursor: 'pointer',\n    fontSize: '0.9rem',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      color: '#bfad7f',\n      borderBottomColor: 'rgba(191, 173, 127, 0.3)',\n    },\n  },\n  navTabActive: {\n    color: '#bfad7f',\n    borderBottomColor: '#bfad7f',\n  },\n  \n  // View control buttons\n  viewControls: {\n    display: 'flex',\n    gap: '0.5rem',\n    marginLeft: '1rem',\n    alignItems: 'center',\n  },\n  viewButton: {\n    backgroundColor: 'rgba(30, 30, 40, 0.6)',\n    border: '1px solid rgba(191, 173, 127, 0.3)',\n    color: '#e0e0e0',\n    width: '28px',\n    height: '28px',\n    borderRadius: '4px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: '0.9rem',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(191, 173, 127, 0.2)',\n      borderColor: 'rgba(191, 173, 127, 0.6)',\n    },\n  },\n  \n  // Content panels section\n  contentPanel: {\n    padding: '1rem 1.5rem',\n    overflow: 'hidden',\n    transition: 'height 0.3s ease, opacity 0.3s ease',\n  },\n  \n  // Network visualization controls panel\n  visualizationPanel: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    borderBottom: '1px solid rgba(191, 173, 127, 0.2)',\n    paddingBottom: '1rem',\n    flexWrap: 'wrap',\n    gap: '1.5rem',\n  },\n  sectionTitle: {\n    color: 'rgba(191, 173, 127, 0.8)',\n    fontSize: '1rem',\n    margin: 0,\n    marginBottom: '0.5rem',\n  },\n  \n  // Visualization mode buttons\n  visualizationButtons: {\n    display: 'flex',\n    gap: '0.5rem',\n  },\n  visualButton: {\n    backgroundColor: 'rgba(15, 15, 20, 0.6)',\n    border: '1px solid rgba(191, 173, 127, 0.4)',\n    color: '#e0e0e0',\n    padding: '0.5rem 1rem',\n    borderRadius: '4px',\n    fontFamily: 'inherit',\n    fontSize: '0.9rem',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(191, 173, 127, 0.2)',\n    },\n  },\n  visualButtonActive: {\n    backgroundColor: 'rgba(191, 173, 127, 0.3)',\n    borderColor: 'rgba(191, 173, 127, 0.7)',\n  },\n  \n  // Trait probabilities section\n  probabilitiesSection: {\n    flex: 1,\n    minWidth: '280px',\n  },\n  emergenceButton: {\n    backgroundColor: 'rgba(125, 107, 158, 0.3)',\n    border: '1px solid rgba(125, 107, 158, 0.6)',\n    color: '#e0e0e0',\n    padding: '0.5rem 1rem',\n    borderRadius: '4px',\n    fontFamily: 'inherit',\n    fontSize: '0.9rem',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(125, 107, 158, 0.4)',\n    },\n  },\n  \n  // Tab content for traits\n  traitsPanel: {\n    marginTop: '1rem',\n  },\n  \n  // Trait category section\n  categorySection: {\n    marginBottom: '1.5rem',\n  },\n  categoryHeading: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.75rem',\n    marginBottom: '0.75rem',\n  },\n  categoryIcon: {\n    width: '16px',\n    height: '16px',\n    borderRadius: '50%',\n  },\n  categoryName: {\n    color: '#e0e0e0',\n    fontSize: '1rem',\n    margin: 0,\n  },\n  \n  // Trait cards container\n  traitCards: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',\n    gap: '0.75rem',\n  },\n  traitCard: {\n    backgroundColor: 'rgba(30, 30, 40, 0.6)',\n    border: '1px solid rgba(191, 173, 127, 0.3)',\n    borderRadius: '4px',\n    padding: '0.75rem',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(191, 173, 127, 0.15)',\n      borderColor: 'rgba(191, 173, 127, 0.5)',\n    },\n  },\n  traitCardActive: {\n    backgroundColor: 'rgba(191, 173, 127, 0.2)',\n    borderColor: 'rgba(191, 173, 127, 0.6)',\n    boxShadow: '0 0 10px rgba(191, 173, 127, 0.2)',\n  },\n  traitHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '0.5rem',\n  },\n  traitName: {\n    color: '#bfad7f',\n    fontSize: '0.95rem',\n    margin: 0,\n    fontWeight: 500,\n  },\n  traitTier: {\n    backgroundColor: 'rgba(191, 173, 127, 0.2)',\n    color: '#bfad7f',\n    padding: '0.1rem 0.5rem',\n    borderRadius: '2px',\n    fontSize: '0.75rem',\n  },\n  traitDesc: {\n    color: 'rgba(224, 224, 224, 0.7)',\n    fontSize: '0.8rem',\n    margin: 0,\n    lineHeight: 1.4,\n  },\n  \n  // Trait probabilities display\n  traitProbabilities: {\n    marginTop: '1rem',\n  },\n  probabilityChart: {\n    width: '100%',\n    background: 'rgba(15, 15, 20, 0.5)',\n    borderRadius: '4px',\n    padding: '1rem',\n    border: '1px solid rgba(191, 173, 127, 0.2)',\n  },\n  probabilityBar: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: '0.5rem',\n  },\n  probabilityLabel: {\n    color: '#e0e0e0',\n    fontSize: '0.85rem',\n    width: '120px',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  probabilityTrack: {\n    flex: 1,\n    height: '8px',\n    backgroundColor: 'rgba(30, 30, 40, 0.6)',\n    borderRadius: '4px',\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  probabilityFill: {\n    position: 'absolute',\n    height: '100%',\n    backgroundColor: '#7D6B9E',\n    borderRadius: '4px',\n    transition: 'width 0.3s ease',\n  },\n  probabilityValue: {\n    color: '#bfad7f',\n    fontSize: '0.85rem',\n    marginLeft: '0.75rem',\n    fontWeight: 'bold',\n    width: '40px',\n    textAlign: 'right',\n  },\n  \n  // Environment panel\n  environmentPanel: {\n    marginTop: '1rem',\n  },\n  \n  // Enhanced sliders grid\n  sliderGrid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',\n    gap: '1.5rem',\n    marginTop: '1rem',\n  },\n  sliderContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  sliderHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '0.5rem',\n  },\n  sliderLabel: {\n    color: '#e0e0e0',\n    fontSize: '0.95rem',\n  },\n  sliderValue: {\n    fontWeight: 'bold',\n    color: '#bfad7f',\n    fontSize: '0.95rem',\n  },\n  sliderTrack: {\n    width: '100%',\n    height: '8px',\n    backgroundColor: 'rgba(30, 30, 40, 0.6)',\n    borderRadius: '4px',\n    position: 'relative',\n    margin: '0.5rem 0',\n  },\n  sliderFill: {\n    position: 'absolute',\n    height: '100%',\n    borderRadius: '4px',\n    transition: 'width 0.3s ease',\n  },\n  sliderThumb: {\n    width: '18px',\n    height: '18px',\n    borderRadius: '50%',\n    backgroundColor: '#bfad7f',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translate(-50%, -50%)',\n    cursor: 'pointer',\n    border: '2px solid rgba(15, 15, 20, 0.9)',\n    boxShadow: '0 0 5px rgba(191, 173, 127, 0.5)',\n    transition: 'transform 0.1s ease',\n    '&:hover': {\n      transform: 'translate(-50%, -50%) scale(1.1)',\n    },\n  },\n  sliderInput: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    opacity: 0,\n    cursor: 'pointer',\n  },\n  \n  // Slider scale labels\n  sliderScale: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    fontSize: '0.8rem',\n    color: 'rgba(224, 224, 224, 0.6)',\n  },\n  \n  // Environmental stress indicators\n  environmentalStressSection: {\n    marginTop: '2rem',\n    padding: '1rem',\n    backgroundColor: 'rgba(15, 15, 20, 0.6)',\n    borderRadius: '4px',\n    border: '1px solid rgba(191, 173, 127, 0.2)',\n  },\n  stressHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '1rem',\n  },\n  stressTitle: {\n    color: '#bfad7f',\n    fontSize: '1rem',\n    margin: 0,\n  },\n  stressValue: {\n    fontWeight: 'bold',\n    fontSize: '1.1rem',\n  },\n  adaptationBar: {\n    width: '100%',\n    height: '12px',\n    backgroundColor: 'rgba(30, 30, 40, 0.6)',\n    borderRadius: '6px',\n    overflow: 'hidden',\n    position: 'relative',\n    marginBottom: '0.75rem',\n  },\n  adaptationFill: {\n    height: '100%',\n    transition: 'width 0.5s ease, background-color 0.5s ease',\n  },\n  adaptationLabel: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    fontSize: '0.85rem',\n    color: 'rgba(224, 224, 224, 0.8)',\n  },\n  \n  // Synthesis panel\n  synthesisPanel: {\n    marginTop: '1rem',\n  },\n  synthesisCard: {\n    backgroundColor: 'rgba(30, 30, 40, 0.6)',\n    border: '1px solid rgba(125, 107, 158, 0.4)',\n    borderRadius: '4px',\n    padding: '1rem',\n    marginBottom: '1rem',\n  },\n  synthesisHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '0.75rem',\n  },\n  synthesisTitle: {\n    color: '#7D6B9E',\n    fontSize: '1.1rem',\n    margin: 0,\n  },\n  synthesisProbability: {\n    backgroundColor: 'rgba(125, 107, 158, 0.3)',\n    color: '#e0e0e0',\n    padding: '0.25rem 0.5rem',\n    borderRadius: '4px',\n    fontSize: '0.85rem',\n  },\n  synthesisDesc: {\n    color: 'rgba(224, 224, 224, 0.8)',\n    fontSize: '0.9rem',\n    lineHeight: 1.5,\n    margin: '0.5rem 0',\n  },\n  synthesisRequirements: {\n    backgroundColor: 'rgba(15, 15, 20, 0.5)',\n    padding: '0.75rem',\n    borderRadius: '4px',\n    marginTop: '0.75rem',\n  },\n  requirementTitle: {\n    color: '#bfad7f',\n    fontSize: '0.9rem',\n    margin: '0 0 0.5rem 0',\n  },\n  requirementList: {\n    margin: 0,\n    padding: '0 0 0 1.5rem',\n    color: 'rgba(224, 224, 224, 0.7)',\n    fontSize: '0.85rem',\n    '& li': {\n      marginBottom: '0.25rem',\n    },\n  },\n  \n  // Media queries for responsiveness\n  '@media (max-width: 768px)': {\n    upperNav: {\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      gap: '0.75rem',\n    },\n    controlsSection: {\n      width: '100%',\n      justifyContent: 'space-between',\n    },\n    navTabs: {\n      marginTop: '0.5rem',\n      width: '100%',\n      justifyContent: 'space-between',\n    },\n    visualizationPanel: {\n      flexDirection: 'column',\n    },\n    sliderGrid: {\n      gridTemplateColumns: '1fr',\n    },\n  }\n});\n\n/**\n * EvoSimShowcaseBar - Enhanced navigation component for the Evolution Simulator\n * \n * @param {Object} props\n * @param {string} props.selectedBodyShape - Currently selected body shape\n * @param {Function} props.onBodyShapeChange - Handler for body shape changes\n * @param {string} props.activeTab - Currently active main tab\n * @param {Function} props.onTabChange - Handler for tab changes\n * @param {string} props.visualizationMode - Current visualization mode\n * @param {Function} props.onVisualizationModeChange - Handler for visualization mode changes\n * @param {Object} props.environment - Current environmental conditions\n * @param {Function} props.onEnvironmentChange - Handler for environment changes\n * @param {boolean} props.showEmergence - Whether to show emergence probabilities\n * @param {Function} props.onToggleEmergence - Handler for toggling emergence probabilities\n * @param {Object} props.selectedTraits - Currently selected traits for each category\n * @param {Function} props.onTraitChange - Handler for trait changes\n * @param {number} props.zoom - Current zoom level\n * @param {Function} props.onZoomChange - Handler for zoom changes\n * @param {string} props.selectedCategory - Currently selected category filter\n * @param {Function} props.onCategoryFilterChange - Handler for category filter changes\n */\nconst EvoSimShowcaseBar = ({\n  selectedBodyShape = 'quadrupedal',\n  onBodyShapeChange,\n  activeTab = 'traits',\n  onTabChange,\n  visualizationMode = 'direct',\n  onVisualizationModeChange,\n  environment = {},\n  onEnvironmentChange,\n  showEmergence = false,\n  onToggleEmergence,\n  selectedTraits = {},\n  onTraitChange,\n  zoom = 1,\n  onZoomChange,\n  selectedCategory = null,\n  onCategoryFilterChange\n}) => {\n  const classes = useStyles();\n  \n  // Local state for dropdown menus\n  const [showBodyShapeMenu, setShowBodyShapeMenu] = useState(false);\n  const [showCategoryMenu, setShowCategoryMenu] = useState(false);\n  const [showTraitMenus, setShowTraitMenus] = useState({});\n  \n  // State for calculated values\n  const [totalEffectiveStress, setTotalEffectiveStress] = useState(0);\n  const [adaptationProbability, setAdaptationProbability] = useState(0);\n  \n  // Define body shapes\n  const bodyShapes = [\n    { id: 'bipedal', name: 'Bipedal', description: 'Upright forms with manipulative upper limbs' },\n    { id: 'quadrupedal', name: 'Quadrupedal', description: 'Four-limbed forms optimized for stability and movement' },\n    { id: 'serpentine', name: 'Serpentine', description: 'Elongated, limbless forms specialized for flexibility' },\n    { id: 'amorphous', name: 'Amorphous', description: 'Malleable forms without fixed structure' },\n    { id: 'insectoid', name: 'Multi-limbed', description: 'Multi-limbed, segmented forms' },\n    { id: 'avian', name: 'Avian', description: 'Forms optimized for flight and aerial movement' },\n    { id: 'aquatic', name: 'Aquatic', description: 'Forms specialized for water environments' }\n  ];\n  \n  // Define trait categories\n  const traitCategories = [\n    { id: 'locomotion', name: 'Locomotion', color: '#7D6B9E' },\n    { id: 'metabolism', name: 'Metabolism', color: '#5C9D8B' },\n    { id: 'sensory', name: 'Sensory Acuity', color: '#C99846' },\n    { id: 'etheric', name: 'Etheric Adaptation', color: '#B54B4B' },\n    { id: 'thermal', name: 'Thermal Regulation', color: '#A67C52' }\n  ];\n  \n  // Define environmental pressures with more detailed info\n  const environmentalPressures = [\n    { \n      id: 'eldritch_influence', \n      name: 'Eldritch Influence', \n      default: 0.5,\n      min: 0,\n      max: 1,\n      minLabel: 'None',\n      maxLabel: 'Overwhelming',\n      color: '#7D6B9E',\n      description: 'The presence of otherworldly, reality-bending forces'\n    },\n    { \n      id: 'corruption_level', \n      name: 'Corruption Level', \n      default: 0.5,\n      min: 0,\n      max: 1,\n      minLabel: 'Pure',\n      maxLabel: 'Corrupted',\n      color: '#B54B4B',\n      description: 'The degree to which the environment has been tainted by unnatural forces'\n    },\n    { \n      id: 'resource_scarcity', \n      name: 'Resource Scarcity', \n      default: 0.5,\n      min: 0,\n      max: 1,\n      minLabel: 'Abundant',\n      maxLabel: 'Barren',\n      color: '#5C9D8B',\n      description: 'The availability of essential resources for survival'\n    },\n    { \n      id: 'ambient_magic', \n      name: 'Ambient Magic', \n      default: 0.5,\n      min: 0,\n      max: 1,\n      minLabel: 'Mundane',\n      maxLabel: 'Saturated',\n      color: '#bfad7f',\n      description: 'The concentration of magical energies in the environment'\n    },\n    { \n      id: 'darkness', \n      name: 'Darkness', \n      default: 0.5,\n      min: 0,\n      max: 1,\n      minLabel: 'Light',\n      maxLabel: 'Dark',\n      color: '#333333',\n      description: 'The level of light available in the environment'\n    }\n  ];\n  \n  // Sample trait data (would be provided by props)\n  const traitsByCategory = {\n    locomotion: [\n      { id: 'running', name: 'Swift Limbs', tier: 1, description: 'Limbs designed for quick locomotion across varied terrain.', probability: 0.82 },\n      { id: 'climbing', name: 'Grasping Appendages', tier: 1, description: 'Specialized limb structures with superior grip for vertical movement.', probability: 0.65 },\n      { id: 'webbed', name: 'Webbed Appendages', tier: 1, description: 'Limbs with membrane structures optimized for aquatic movement.', probability: 0.43 }\n    ],\n    metabolism: [\n      { id: 'carnivore', name: 'Carnivore Digestion', tier: 1, description: 'Specialized digestive system optimized for meat processing.', probability: 0.76 },\n      { id: 'omnivore', name: 'Omnivore Adaptation', tier: 1, description: 'Versatile digestive system capable of processing diverse food sources.', probability: 0.59 }\n    ],\n    sensory: [\n      { id: 'acute_vision', name: 'Acute Vision', tier: 1, description: 'Highly developed visual organs with exceptional acuity.', probability: 0.68 },\n      { id: 'sonar_mapping', name: 'Echolocation', tier: 1, description: 'Ability to emit and detect sound waves for environmental mapping.', probability: 0.52 }\n    ],\n    etheric: [\n      { id: 'ether_sensing', name: 'Ether Sensing', tier: 1, description: 'Specialized organs that can detect and interpret etheric energy patterns.', probability: 0.74 },\n      { id: 'ether_channeling', name: 'Ether Channeling', tier: 1, description: 'Biological structures capable of directing and manipulating etheric energies.', probability: 0.47 }\n    ],\n    thermal: [\n      { id: 'thick_blubber', name: 'Thick Blubber', tier: 1, description: 'Dense fatty tissue layer providing insulation in cold environments.', probability: 0.39 },\n      { id: 'reflective_scales', name: 'Reflective Scales', tier: 1, description: 'Light-reflecting scales that help regulate heat absorption.', probability: 0.85 }\n    ]\n  };\n  \n  // Sample synthesis options\n  const synthesisOptions = [\n    {\n      id: 'dimensional_sight',\n      name: 'Dimensional Sight',\n      description: 'Advanced visual organs that can perceive multiple planes of reality simultaneously, revealing hidden truths and dangers.',\n      probability: 0.37,\n      requirements: [\n        'Requires Eldritch Influence > 0.7',\n        'Requires Acute Vision trait',\n        'Requires Ether Sensing trait'\n      ]\n    },\n    {\n      id: 'void_communion',\n      name: 'Void Communion',\n      description: 'Specialized neural structures that establish a symbiotic relationship with eldritch entities, granting access to forbidden knowledge.',\n      probability: 0.19,\n      requirements: [\n        'Requires Corruption Level > 0.6',\n        'Requires Ether Channeling trait',\n        'Requires prolonged exposure to high Eldritch Influence'\n      ]\n    }\n  ];\n  \n  // Calculate effective stress and adaptation probability\n  useEffect(() => {\n    // Simplified calculation for this example\n    const stressValues = environmentalPressures.map(pressure => \n      environment[pressure.id] !== undefined ? environment[pressure.id] : pressure.default\n    );\n    \n    const avgStress = stressValues.reduce((sum, value) => sum + value, 0) / stressValues.length;\n    setTotalEffectiveStress(avgStress);\n    \n    // Simplified adaptation probability based on sigmoid function\n    const adaptProb = 1 / (1 + Math.exp(-10 * (avgStress - 0.5)));\n    setAdaptationProbability(adaptProb);\n  }, [environment]);\n  \n  // Handle body shape selection\n  const handleSelectBodyShape = (shapeId) => {\n    onBodyShapeChange(shapeId);\n    setShowBodyShapeMenu(false);\n  };\n  \n  // Handle category filter selection\n  const handleSelectCategory = (categoryId) => {\n    onCategoryFilterChange(categoryId);\n    setShowCategoryMenu(false);\n  };\n  \n  // Handle trait selection\n  const handleSelectTrait = (categoryId, traitId) => {\n    onTraitChange(categoryId, traitId);\n  };\n  \n  // Handle trait category dropdown toggle\n  const handleToggleTraitMenu = (categoryId) => {\n    setShowTraitMenus(prev => ({\n      ...prev,\n      [categoryId]: !prev[categoryId]\n    }));\n    \n    // Close other menus\n    setShowBodyShapeMenu(false);\n    setShowCategoryMenu(false);\n    Object.keys(showTraitMenus).forEach(key => {\n      if (key !== categoryId) {\n        setShowTraitMenus(prev => ({\n          ...prev,\n          [key]: false\n        }));\n      }\n    });\n  };\n  \n  // Handle environment pressure change\n  const handleEnvironmentChange = (pressureId, value) => {\n    onEnvironmentChange({ \n      ...environment, \n      [pressureId]: parseFloat(value) \n    });\n  };\n  \n  // Get zoom controls\n  const handleZoom = (direction) => {\n    const newZoom = direction === 'in' \n      ? Math.min(zoom + 0.1, 3)\n      : Math.max(zoom - 0.1, 0.5);\n    onZoomChange(newZoom);\n  };\n  \n  // Get selected body shape name\n  const getSelectedBodyShapeName = () => {\n    const shape = bodyShapes.find(shape => shape.id === selectedBodyShape);\n    return shape ? shape.name : 'Select Body Shape';\n  };\n  \n  // Get selected category name\n  const getSelectedCategoryName = () => {\n    if (!selectedCategory) return 'All Categories';\n    const category = traitCategories.find(cat => cat.id === selectedCategory);\n    return category ? category.name : 'All Categories';\n  };\n  \n  // Render environmental stress bars with appropriate colors\n  const getStressColor = (value) => {\n    if (value < 0.4) return '#5C9D8B';\n    if (value < 0.7) return '#C99846';\n    return '#B54B4B';\n  };\n  \n  // Render environmental pressure sliders\n  const renderEnvironmentalPressure = (pressure) => {\n    const value = environment[pressure.id] !== undefined \n      ? environment[pressure.id] \n      : pressure.default;\n    \n    const percentage = value * 100;\n    \n    return (\n      <div className={classes.sliderContainer} key={pressure.id}>\n        <div className={classes.sliderHeader}>\n          <span className={classes.sliderLabel}>{pressure.name}</span>\n          <span className={classes.sliderValue}>{value.toFixed(1)}</span>\n        </div>\n        \n        <div className={classes.sliderTrack}>\n          <div \n            className={classes.sliderFill}\n            style={{ \n              width: `${percentage}%`,\n              backgroundColor: pressure.color\n            }}\n          />\n          <input\n            type=\"range\"\n            min={pressure.min}\n            max={pressure.max}\n            step=\"0.1\"\n            value={value}\n            onChange={(e) => handleEnvironmentChange(pressure.id, e.target.value)}\n            className={classes.sliderInput}\n          />\n          <div \n            className={classes.sliderThumb}\n            style={{ left: `${percentage}%` }}\n          />\n        </div>\n        \n        <div className={classes.sliderScale}>\n          <span>{pressure.minLabel}</span>\n          <span>{pressure.maxLabel}</span>\n        </div>\n        \n        <div style={{ fontSize: '0.8rem', color: 'rgba(224, 224, 224, 0.6)', marginTop: '0.25rem' }}>\n          {pressure.description}\n        </div>\n      </div>\n    );\n  };\n  \n  // Render trait cards\n  const renderTraitCards = (categoryId) => {\n    const traits = traitsByCategory[categoryId] || [];\n    \n    return (\n      <div className={classes.traitCards}>\n        {traits.map(trait => (\n          <div \n            key={trait.id}\n            className={`${classes.traitCard} ${selectedTraits[categoryId] === trait.id ? classes.traitCardActive : ''}`}\n            onClick={() => handleSelectTrait(categoryId, trait.id)}\n          >\n            <div className={classes.traitHeader}>\n              <h4 className={classes.traitName}>{trait.name}</h4>\n              <span className={classes.traitTier}>Tier {trait.tier}</span>\n            </div>\n            <p className={classes.traitDesc}>{trait.description}</p>\n          </div>\n        ))}\n      </div>\n    );\n  };\n  \n  // Render trait category sections\n  const renderTraitCategories = () => {\n    return traitCategories.map(category => (\n      <div className={classes.categorySection} key={category.id}>\n        <div className={classes.categoryHeading}>\n          <div \n            className={classes.categoryIcon}\n            style={{ backgroundColor: category.color }}\n          />\n          <h3 className={classes.categoryName}>{category.name}</h3>\n        </div>\n        {renderTraitCards(category.id)}\n      </div>\n    ));\n  };\n  \n  // Render trait probabilities chart\n  const renderProbabilitiesChart = () => {\n    // Flatten all traits into a single array and sort by probability\n    const allTraits = Object.values(traitsByCategory)\n      .flat()\n      .sort((a, b) => b.probability - a.probability)\n      .slice(0, 5); // Show top 5\n    \n    return (\n      <div className={classes.probabilityChart}>\n        <h4 style={{ color: '#bfad7f', margin: '0 0 1rem 0' }}>Highest Adaptation Probabilities</h4>\n        {allTraits.map(trait => (\n          <div className={classes.probabilityBar} key={trait.id}>\n            <div className={classes.probabilityLabel}>{trait.name}</div>\n            <div className={classes.probabilityTrack}>\n              <div \n                className={classes.probabilityFill}\n                style={{ width: `${trait.probability * 100}%` }}\n              />\n            </div>\n            <div className={classes.probabilityValue}>{(trait.probability * 100).toFixed(0)}%</div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n  \n  // Render synthesis options\n  const renderSynthesisOptions = () => {\n    return synthesisOptions.map(option => (\n      <div className={classes.synthesisCard} key={option.id}>\n        <div className={classes.synthesisHeader}>\n          <h3 className={classes.synthesisTitle}>{option.name}</h3>\n          <span className={classes.synthesisProbability}>{(option.probability * 100).toFixed(0)}%</span>\n        </div>\n        <p className={classes.synthesisDesc}>{option.description}</p>\n        <div className={classes.synthesisRequirements}>\n          <h4 className={classes.requirementTitle}>Requirements</h4>\n          <ul className={classes.requirementList}>\n            {option.requirements.map((req, index) => (\n              <li key={index}>{req}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    ));\n  };\n  \n  return (\n    <div className={classes.navContainer}>\n      {/* Upper navigation bar with title and main controls */}\n      <div className={classes.upperNav}>\n        <div className={classes.titleSection}>\n          <div className={classes.logoIcon}></div>\n          <h1 className={classes.title}>Crescent Evolution System</h1>\n        </div>\n        \n        <div className={classes.controlsSection}>\n          {/* Body shape selector */}\n          <div className={classes.bodyShapeSelector}>\n            <button \n              className={classes.selectorButton}\n              onClick={() => {\n                setShowBodyShapeMenu(!showBodyShapeMenu);\n                setShowCategoryMenu(false);\n                setShowTraitMenus({});\n              }}\n            >\n              <span>Body Shape:</span>\n              <strong>{getSelectedBodyShapeName()}</strong>\n              <span style={{ fontSize: '0.7rem', marginLeft: '0.25rem' }}>▼</span>\n            </button>\n            \n            <AnimatePresence>\n              {showBodyShapeMenu && (\n                <motion.div\n                  className={classes.selectorMenu}\n                  initial={{ opacity: 0, y: -10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: -10 }}\n                  transition={{ duration: 0.2 }}\n                >\n                  {bodyShapes.map(shape => (\n                    <div \n                      key={shape.id}\n                      className={`${classes.menuItem} ${selectedBodyShape === shape.id ? classes.menuItemActive : ''}`}\n                      onClick={() => handleSelectBodyShape(shape.id)}\n                    >\n                      <div className={classes.menuItemName}>{shape.name}</div>\n                      <div className={classes.menuItemDesc}>{shape.description}</div>\n                    </div>\n                  ))}\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n          \n          {/* Category filter */}\n          <div className={classes.filterSelector}>\n            <button \n              className={classes.selectorButton}\n              onClick={() => {\n                setShowCategoryMenu(!showCategoryMenu);\n                setShowBodyShapeMenu(false);\n                setShowTraitMenus({});\n              }}\n            >\n              <span>Filter:</span>\n              <strong>{getSelectedCategoryName()}</strong>\n              <span style={{ fontSize: '0.7rem', marginLeft: '0.25rem' }}>▼</span>\n            </button>\n            \n            <AnimatePresence>\n              {showCategoryMenu && (\n                <motion.div\n                  className={classes.selectorMenu}\n                  initial={{ opacity: 0, y: -10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: -10 }}\n                  transition={{ duration: 0.2 }}\n                >\n                  <div \n                    className={`${classes.menuItem} ${!selectedCategory ? classes.menuItemActive : ''}`}\n                    onClick={() => handleSelectCategory(null)}\n                  >\n                    <div className={classes.menuItemName}>All Categories</div>\n                  </div>\n                  \n                  {traitCategories.map(category => (\n                    <div \n                      key={category.id}\n                      className={`${classes.menuItem} ${selectedCategory === category.id ? classes.menuItemActive : ''}`}\n                      onClick={() => handleSelectCategory(category.id)}\n                    >\n                      <div className={classes.menuItemName}>{category.name}</div>\n                    </div>\n                  ))}\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n          \n          {/* Main navigation tabs */}\n          <div className={classes.navTabs}>\n            <button \n              className={`${classes.navTab} ${activeTab === 'traits' ? classes.navTabActive : ''}`}\n              onClick={() => onTabChange('traits')}\n            >\n              Traits\n            </button>\n            <button \n              className={`${classes.navTab} ${activeTab === 'environment' ? classes.navTabActive : ''}`}\n              onClick={() => onTabChange('environment')}\n            >\n              Environment\n            </button>\n            <button \n              className={`${classes.navTab} ${activeTab === 'synthesis' ? classes.navTabActive : ''}`}\n              onClick={() => onTabChange('synthesis')}\n            >\n              Synthesis\n            </button>\n          </div>\n          \n          {/* View controls */}\n          <div className={classes.viewControls}>\n            <button \n              className={classes.viewButton}\n              onClick={() => handleZoom('in')}\n              title=\"Zoom In\"\n            >\n              +\n            </button>\n            <button \n              className={classes.viewButton}\n              onClick={() => handleZoom('out')}\n              title=\"Zoom Out\"\n            >\n              -\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      {/* Network visualization controls */}\n      <div className={classes.visualizationPanel}>\n        <div>\n          <h3 className={classes.sectionTitle}>Network Visualization</h3>\n          <div className={classes.visualizationButtons}>\n            <button \n              className={`${classes.visualButton} ${visualizationMode === 'direct' ? classes.visualButtonActive : ''}`}\n              onClick={() => onVisualizationModeChange('direct')}\n            >\n              Direct Connections\n            </button>\n            <button \n              className={`${classes.visualButton} ${visualizationMode === 'tree' ? classes.visualButtonActive : ''}`}\n              onClick={() => onVisualizationModeChange('tree')}\n            >\n              Evolutionary Tree\n            </button>\n            <button \n              className={`${classes.visualButton} ${visualizationMode === 'category' ? classes.visualButtonActive : ''}`}\n              onClick={() => onVisualizationModeChange('category')}\n            >\n              Trait Category\n            </button>\n          </div>\n        </div>\n        \n        {/* Trait probabilities section */}\n        <div className={classes.probabilitiesSection}>\n          <h3 className={classes.sectionTitle}>Trait Probabilities</h3>\n          <button \n            className={classes.emergenceButton}\n            onClick={onToggleEmergence}\n          >\n            {showEmergence ? 'Hide' : 'Show'} Emergence Probabilities\n          </button>\n        </div>\n      </div>\n      \n      {/* Tab content panels */}\n      <div className={classes.contentPanel}>\n        {/* Traits panel */}\n        {activeTab === 'traits' && (\n          <div className={classes.traitsPanel}>\n            <div style={{ display: 'flex', gap: '2rem' }}>\n              <div style={{ flex: 1 }}>\n                {renderTraitCategories()}\n              </div>\n              <div style={{ width: '300px' }}>\n                <div className={classes.traitProbabilities}>\n                  {renderProbabilitiesChart()}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {/* Environment panel */}\n        {activeTab === 'environment' && (\n          <div className={classes.environmentPanel}>\n            <div className={classes.sliderGrid}>\n              {environmentalPressures.map(pressure => renderEnvironmentalPressure(pressure))}\n            </div>\n            \n            <div className={classes.environmentalStressSection}>\n              <div className={classes.stressHeader}>\n                <h3 className={classes.stressTitle}>Environmental Stress Impact</h3>\n                <span \n                  className={classes.stressValue}\n                  style={{ color: getStressColor(totalEffectiveStress) }}\n                >\n                  {(totalEffectiveStress * 100).toFixed(0)}%\n                </span>\n              </div>\n              \n              <div className={classes.adaptationBar}>\n                <div \n                  className={classes.adaptationFill}\n                  style={{ \n                    width: `${totalEffectiveStress * 100}%`,\n                    backgroundColor: getStressColor(totalEffectiveStress)\n                  }}\n                />\n              </div>\n              \n              <div className={classes.stressHeader}>\n                <h3 className={classes.stressTitle}>Adaptation Probability</h3>\n                <span \n                  className={classes.stressValue}\n                  style={{ color: getStressColor(adaptationProbability) }}\n                >\n                  {(adaptationProbability * 100).toFixed(0)}%\n                </span>\n              </div>\n              \n              <div className={classes.adaptationBar}>\n                <div \n                  className={classes.adaptationFill}\n                  style={{ \n                    width: `${adaptationProbability * 100}%`,\n                    backgroundColor: getStressColor(adaptationProbability)\n                  }}\n                />\n              </div>\n              \n              <div className={classes.adaptationLabel}>\n                <span>Stable</span>\n                <span>Adaptation Likely</span>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {/* Synthesis panel */}\n        {activeTab === 'synthesis' && (\n          <div className={classes.synthesisPanel}>\n            {renderSynthesisOptions()}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EvoSimShowcaseBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}