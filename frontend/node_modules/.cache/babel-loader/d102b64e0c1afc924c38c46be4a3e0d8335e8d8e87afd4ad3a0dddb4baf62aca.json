{"ast":null,"code":"var _jsxFileName = \"/home/valeria/Documents/Crucible/frontend/src/components/sections/codex/creators/creatorshowcase/EvolutionSimulatorConceptShowcase.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport Background from '../../../../core/Background';\nimport MeteorShower from '../../../../core/effects/cosmiceffects/MeteorShower';\nimport RevealText from '../../../../core/effects/RevealText';\nimport { createUseStyles } from 'react-jss';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = createUseStyles({\n  // Main container and layout\n  evolutionSimulator: {\n    position: 'relative',\n    width: '100%',\n    height: '100vh',\n    overflow: 'hidden',\n    color: '#e0e0e0',\n    fontFamily: '\"Garamond\", \"Adobe Caslon Pro\", serif',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  // Enhanced Navbar\n  navbar: {\n    position: 'relative',\n    width: '100%',\n    backgroundColor: 'rgba(15, 15, 20, 0.85)',\n    borderBottom: '1px solid rgba(191, 173, 127, 0.4)',\n    padding: '0.5rem 1rem',\n    zIndex: 100,\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    boxShadow: '0 4px 15px rgba(0, 0, 0, 0.3)'\n  },\n  title: {\n    color: '#bfad7f',\n    fontSize: '1.5rem',\n    margin: 0,\n    fontWeight: 300,\n    letterSpacing: '0.05em',\n    textShadow: '0 2px 5px rgba(0, 0, 0, 0.5)',\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.5rem'\n  },\n  logoIcon: {\n    width: '24px',\n    height: '24px',\n    borderRadius: '50%',\n    background: 'linear-gradient(135deg, #bfad7f 0%, #7D6B9E 100%)',\n    display: 'inline-block'\n  },\n  // Navigation Elements\n  navControls: {\n    display: 'flex',\n    gap: '1rem',\n    alignItems: 'center',\n    flexWrap: 'wrap'\n  },\n  dropdown: {\n    position: 'relative',\n    marginRight: '0.5rem'\n  },\n  dropdownButton: {\n    backgroundColor: 'rgba(30, 30, 40, 0.6)',\n    border: '1px solid rgba(191, 173, 127, 0.3)',\n    color: '#e0e0e0',\n    padding: '0.4rem 0.8rem',\n    borderRadius: '4px',\n    fontFamily: 'inherit',\n    fontSize: '0.9rem',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.5rem',\n    '&:hover': {\n      backgroundColor: 'rgba(191, 173, 127, 0.2)',\n      borderColor: 'rgba(191, 173, 127, 0.6)'\n    }\n  },\n  dropdownContent: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    backgroundColor: 'rgba(20, 20, 25, 0.95)',\n    minWidth: '200px',\n    maxHeight: '70vh',\n    overflowY: 'auto',\n    borderRadius: '4px',\n    padding: '0.5rem',\n    boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5)',\n    zIndex: 101,\n    border: '1px solid rgba(191, 173, 127, 0.3)'\n  },\n  menuItem: {\n    padding: '0.5rem 0.75rem',\n    cursor: 'pointer',\n    borderRadius: '3px',\n    transition: 'all 0.15s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(191, 173, 127, 0.2)'\n    }\n  },\n  menuItemActive: {\n    backgroundColor: 'rgba(191, 173, 127, 0.3)',\n    fontWeight: 'bold'\n  },\n  menuItemTitle: {\n    fontSize: '0.95rem',\n    color: '#bfad7f'\n  },\n  menuItemDescription: {\n    fontSize: '0.8rem',\n    color: 'rgba(224, 224, 224, 0.7)',\n    marginTop: '0.25rem'\n  },\n  // Tabs for different controls\n  navTabs: {\n    display: 'flex',\n    gap: '0.25rem',\n    marginLeft: 'auto'\n  },\n  navTab: {\n    padding: '0.4rem 0.8rem',\n    backgroundColor: 'transparent',\n    border: 'none',\n    borderBottom: '2px solid transparent',\n    color: 'rgba(224, 224, 224, 0.7)',\n    cursor: 'pointer',\n    fontSize: '0.9rem',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      color: '#bfad7f',\n      borderBottomColor: 'rgba(191, 173, 127, 0.3)'\n    }\n  },\n  navTabActive: {\n    color: '#bfad7f',\n    borderBottomColor: '#bfad7f'\n  },\n  // View controls\n  viewControls: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.75rem'\n  },\n  viewButton: {\n    backgroundColor: 'rgba(30, 30, 40, 0.6)',\n    border: '1px solid rgba(191, 173, 127, 0.3)',\n    color: '#e0e0e0',\n    width: '32px',\n    height: '32px',\n    borderRadius: '4px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(191, 173, 127, 0.2)',\n      borderColor: 'rgba(191, 173, 127, 0.6)'\n    }\n  },\n  // Environmental controls panel\n  environmentPanel: {\n    position: 'absolute',\n    top: '100%',\n    right: 0,\n    backgroundColor: 'rgba(20, 20, 25, 0.95)',\n    border: '1px solid rgba(191, 173, 127, 0.3)',\n    borderRadius: '4px',\n    padding: '1rem',\n    zIndex: 100,\n    width: '300px',\n    boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5)'\n  },\n  environmentTitle: {\n    color: '#bfad7f',\n    fontSize: '1rem',\n    marginTop: 0,\n    marginBottom: '1rem',\n    borderBottom: '1px solid rgba(191, 173, 127, 0.3)',\n    paddingBottom: '0.5rem'\n  },\n  // Enhanced stressor sliders\n  sliderContainer: {\n    marginBottom: '0.75rem'\n  },\n  sliderLabel: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    fontSize: '0.9rem',\n    marginBottom: '0.25rem'\n  },\n  sliderValue: {\n    fontWeight: 'bold'\n  },\n  sliderTrack: {\n    width: '100%',\n    height: '6px',\n    position: 'relative',\n    backgroundColor: 'rgba(30, 30, 40, 0.8)',\n    borderRadius: '3px'\n  },\n  sliderFill: {\n    position: 'absolute',\n    height: '100%',\n    borderRadius: '3px',\n    pointerEvents: 'none'\n  },\n  sliderThumb: {\n    width: '16px',\n    height: '16px',\n    borderRadius: '50%',\n    backgroundColor: '#bfad7f',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translate(-50%, -50%)',\n    cursor: 'pointer',\n    border: '2px solid rgba(30, 30, 40, 0.8)',\n    zIndex: 2,\n    transition: 'transform 0.1s ease',\n    '&:hover': {\n      transform: 'translate(-50%, -50%) scale(1.2)'\n    }\n  },\n  positiveValue: {\n    color: '#5C9D8B'\n  },\n  negativeValue: {\n    color: '#B54B4B'\n  },\n  // Main visualization area\n  visualizationContainer: {\n    position: 'relative',\n    flex: 1,\n    overflow: 'hidden'\n  },\n  networkCanvas: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    cursor: 'grab',\n    '&:active': {\n      cursor: 'grabbing'\n    }\n  },\n  // Category filters\n  categoryFilters: {\n    position: 'absolute',\n    bottom: '1rem',\n    left: '50%',\n    transform: 'translateX(-50%)',\n    backgroundColor: 'rgba(15, 15, 20, 0.8)',\n    borderRadius: '30px',\n    padding: '0.5rem 1rem',\n    display: 'flex',\n    gap: '0.5rem',\n    zIndex: 50,\n    boxShadow: '0 4px 15px rgba(0, 0, 0, 0.3)',\n    border: '1px solid rgba(191, 173, 127, 0.2)'\n  },\n  categoryButton: {\n    background: 'transparent',\n    border: 'none',\n    color: 'rgba(224, 224, 224, 0.7)',\n    padding: '0.35rem 0.75rem',\n    borderRadius: '20px',\n    fontSize: '0.85rem',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      color: '#e0e0e0',\n      backgroundColor: 'rgba(191, 173, 127, 0.1)'\n    }\n  },\n  categoryButtonActive: {\n    backgroundColor: 'rgba(191, 173, 127, 0.3)',\n    color: '#e0e0e0'\n  },\n  // Tooltip styling\n  tooltip: {\n    position: 'fixed',\n    backgroundColor: 'rgba(20, 20, 25, 0.95)',\n    border: '1px solid rgba(191, 173, 127, 0.3)',\n    borderRadius: '4px',\n    padding: '0.75rem',\n    maxWidth: '300px',\n    pointerEvents: 'none',\n    zIndex: 200,\n    boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5)'\n  },\n  // Media queries for responsive design\n  '@media (max-width: 768px)': {\n    navbar: {\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      padding: '0.75rem'\n    },\n    navControls: {\n      marginTop: '0.75rem',\n      width: '100%',\n      justifyContent: 'space-between'\n    },\n    environmentPanel: {\n      width: '90%',\n      right: '5%'\n    }\n  }\n});\n\n// Enhanced Evolution Simulator Component\nconst EnhancedEvolutionSimulator = () => {\n  _s();\n  var _bodyShapes$find, _traitCategories$find;\n  const classes = useStyles();\n\n  // State hooks\n  const [cursorPosition, setCursorPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedBodyShape, setSelectedBodyShape] = useState('quadrupedal');\n  const [showBodyShapeMenu, setShowBodyShapeMenu] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [showCategoryMenu, setShowCategoryMenu] = useState(false);\n  const [selectedTraits, setSelectedTraits] = useState({});\n  const [showTraitMenus, setShowTraitMenus] = useState({});\n  const [viewMode, setViewMode] = useState('all');\n  const [showEnvironmentPanel, setShowEnvironmentPanel] = useState(false);\n  const [activeTab, setActiveTab] = useState('traits');\n  const [zoom, setZoom] = useState(1);\n  const [panOffset, setPanOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({\n    x: 0,\n    y: 0\n  });\n  const [hoveredElement, setHoveredElement] = useState(null);\n\n  // Environment stressors state\n  const [environment, setEnvironment] = useState({\n    temperature: 0.4,\n    light_conditions: 0.3,\n    terrain_harshness: 0.5,\n    resource_scarcity: 0.2,\n    ether_density: 0.6,\n    pressure_gravity: 0.4\n  });\n\n  // Simulation metrics state\n  const [totalEffectiveStress, setTotalEffectiveStress] = useState(0);\n  const [adaptationProbability, setAdaptationProbability] = useState(0);\n\n  // Refs\n  const canvasRef = useRef(null);\n  const containerRef = useRef(null);\n  const networkRef = useRef(null);\n  const animationFrameRef = useRef(null);\n\n  // Define body shapes data\n  const bodyShapes = [{\n    id: 'bipedal',\n    name: 'Bipedal',\n    description: 'Upright forms with manipulative upper limbs'\n  }, {\n    id: 'quadrupedal',\n    name: 'Quadrupedal',\n    description: 'Four-limbed forms optimized for stability and movement'\n  }, {\n    id: 'serpentine',\n    name: 'Serpentine',\n    description: 'Elongated, limbless forms specialized for flexibility'\n  }, {\n    id: 'amorphous',\n    name: 'Amorphous',\n    description: 'Malleable forms without fixed structure'\n  }, {\n    id: 'insectoid',\n    name: 'Multi-limbed',\n    description: 'Multi-limbed, segmented forms'\n  }, {\n    id: 'avian',\n    name: 'Avian',\n    description: 'Forms optimized for flight and aerial movement'\n  }, {\n    id: 'aquatic',\n    name: 'Aquatic',\n    description: 'Forms specialized for water environments'\n  }];\n\n  // Trait categories\n  const traitCategories = [{\n    id: 'locomotion',\n    name: 'Locomotion',\n    color: '#7D6B9E'\n  }, {\n    id: 'metabolism',\n    name: 'Metabolism',\n    color: '#5C9D8B'\n  }, {\n    id: 'sensory',\n    name: 'Sensory Acuity',\n    color: '#C99846'\n  }, {\n    id: 'etheric',\n    name: 'Etheric Adaptation',\n    color: '#B54B4B'\n  }, {\n    id: 'thermal',\n    name: 'Thermal Regulation',\n    color: '#A67C52'\n  }];\n\n  // Get traits based on selected body shape and category\n  const getTraitsByCategory = categoryId => {\n    const allTraits = getTraitsByBodyShape(selectedBodyShape);\n    return allTraits[categoryId] || [];\n  };\n\n  // Function to get traits based on selected body shape (simplified version)\n  const getTraitsByBodyShape = bodyShapeId => {\n    // This would contain the full trait data structure from your original code\n    // For brevity, I'm using a simplified version here\n    const baseTraits = {\n      locomotion: [{\n        id: 'running',\n        name: 'Swift Limbs',\n        tier: 1,\n        description: 'Limbs designed for quick locomotion across varied terrain.',\n        compatible: ['quadrupedal', 'bipedal', 'insectoid']\n      }, {\n        id: 'climbing',\n        name: 'Grasping Appendages',\n        tier: 1,\n        description: 'Specialized limb structures with superior grip for vertical movement.',\n        compatible: ['bipedal', 'quadrupedal', 'insectoid']\n      }, {\n        id: 'webbed',\n        name: 'Webbed Appendages',\n        tier: 1,\n        description: 'Limbs with membrane structures optimized for aquatic movement.',\n        compatible: ['aquatic', 'bipedal', 'quadrupedal']\n      }],\n      metabolism: [{\n        id: 'carnivore',\n        name: 'Carnivore Digestion',\n        tier: 1,\n        description: 'Specialized digestive system optimized for meat processing.',\n        compatible: ['all']\n      }, {\n        id: 'omnivore',\n        name: 'Omnivore Adaptation',\n        tier: 1,\n        description: 'Versatile digestive system capable of processing diverse food sources.',\n        compatible: ['all']\n      }],\n      sensory: [{\n        id: 'acute_vision',\n        name: 'Acute Vision',\n        tier: 1,\n        description: 'Highly developed visual organs with exceptional acuity.',\n        compatible: ['all']\n      }, {\n        id: 'sonar_mapping',\n        name: 'Echolocation',\n        tier: 1,\n        description: 'Ability to emit and detect sound waves for environmental mapping.',\n        compatible: ['all']\n      }],\n      etheric: [{\n        id: 'ether_sensing',\n        name: 'Ether Sensing',\n        tier: 1,\n        description: 'Specialized organs that can detect and interpret etheric energy patterns.',\n        compatible: ['all']\n      }, {\n        id: 'ether_channeling',\n        name: 'Ether Channeling',\n        tier: 1,\n        description: 'Biological structures capable of directing and manipulating etheric energies.',\n        compatible: ['all']\n      }],\n      thermal: [{\n        id: 'thick_blubber',\n        name: 'Thick Blubber',\n        tier: 1,\n        description: 'Dense fatty tissue layer providing insulation in cold environments.',\n        compatible: ['all']\n      }, {\n        id: 'reflective_scales',\n        name: 'Reflective Scales',\n        tier: 1,\n        description: 'Light-reflecting scales that help regulate heat absorption.',\n        compatible: ['all']\n      }]\n    };\n    return baseTraits;\n  };\n\n  // Initialize selected traits on body shape change\n  useEffect(() => {\n    const initialTraits = {};\n    traitCategories.forEach(category => {\n      const traits = getTraitsByCategory(category.id);\n      const compatibleTraits = traits.filter(trait => trait.compatible.includes('all') || trait.compatible.includes(selectedBodyShape));\n      if (compatibleTraits.length > 0) {\n        initialTraits[category.id] = compatibleTraits[0].id;\n      }\n    });\n    setSelectedTraits(initialTraits);\n  }, [selectedBodyShape]);\n\n  // Setup the main visualization canvas\n  useEffect(() => {\n    if (!canvasRef.current || !containerRef.current) return;\n    const canvas = canvasRef.current;\n    const container = containerRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Set up canvas dimensions\n    const updateCanvasDimensions = () => {\n      const rect = container.getBoundingClientRect();\n      canvas.width = rect.width;\n      canvas.height = rect.height;\n      networkRef.current = {\n        width: rect.width,\n        height: rect.height,\n        centerX: rect.width / 2,\n        centerY: rect.height / 2\n      };\n    };\n    updateCanvasDimensions();\n    window.addEventListener('resize', updateCanvasDimensions);\n\n    // Animation function for the network visualization\n    const animate = () => {\n      if (!networkRef.current) return;\n\n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Apply zoom and pan transformations\n      ctx.save();\n      ctx.translate(panOffset.x, panOffset.y);\n      ctx.scale(zoom, zoom);\n\n      // Draw network visualization - this would contain the visualization logic\n      // from your original code, adapted to this component structure\n\n      // Example placeholder visualization\n      const {\n        centerX,\n        centerY\n      } = networkRef.current;\n\n      // Draw body shape at center\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, 50, 0, Math.PI * 2);\n      ctx.fillStyle = 'rgba(191, 173, 127, 0.8)';\n      ctx.fill();\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.5)';\n      ctx.lineWidth = 2;\n      ctx.stroke();\n\n      // Draw body shape text\n      ctx.font = 'bold 14px Arial';\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      const bodyShape = bodyShapes.find(shape => shape.id === selectedBodyShape);\n      ctx.fillText((bodyShape === null || bodyShape === void 0 ? void 0 : bodyShape.name) || 'Body Shape', centerX, centerY);\n\n      // Draw trait nodes in a circle around center\n      const traitRadius = 180;\n      traitCategories.forEach((category, index) => {\n        const angle = index / traitCategories.length * Math.PI * 2;\n        const x = centerX + Math.cos(angle) * traitRadius;\n        const y = centerY + Math.sin(angle) * traitRadius;\n\n        // Draw node\n        ctx.beginPath();\n        ctx.arc(x, y, 20, 0, Math.PI * 2);\n        ctx.fillStyle = category.color;\n        ctx.fill();\n        ctx.strokeStyle = 'white';\n        ctx.lineWidth = 2;\n        ctx.stroke();\n\n        // Draw connection to center\n        ctx.beginPath();\n        ctx.moveTo(centerX, centerY);\n        ctx.lineTo(x, y);\n        ctx.strokeStyle = category.color;\n        ctx.lineWidth = 2;\n        ctx.stroke();\n\n        // Draw trait name\n        ctx.font = '12px Arial';\n        ctx.fillStyle = 'white';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText(category.name, x, y);\n\n        // This would be expanded with the full network visualization logic\n      });\n      ctx.restore();\n\n      // Continue animation\n      animationFrameRef.current = requestAnimationFrame(animate);\n    };\n\n    // Start animation loop\n    animate();\n\n    // Set loaded after a delay\n    const timer = setTimeout(() => {\n      setIsLoaded(true);\n    }, 1000);\n\n    // Cleanup on unmount\n    return () => {\n      window.removeEventListener('resize', updateCanvasDimensions);\n      clearTimeout(timer);\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [selectedBodyShape, selectedTraits, viewMode, zoom, panOffset]);\n\n  // Calculate stress and adaptation probability when environment changes\n  useEffect(() => {\n    // Using simplified stress calculation\n    const stressFromEnvironment = Object.values(environment).reduce((sum, value) => sum + Math.abs(value), 0) / 6;\n    setTotalEffectiveStress(stressFromEnvironment);\n\n    // Simplified adaptation probability calculation\n    const probability = 1 / (1 + Math.exp(-10 * (stressFromEnvironment - 0.5)));\n    setAdaptationProbability(probability);\n  }, [environment, selectedBodyShape, selectedTraits]);\n\n  // Handle mouse move for background effect\n  const handleMouseMove = e => {\n    setCursorPosition({\n      x: e.clientX,\n      y: e.clientY\n    });\n\n    // Handle dragging\n    if (isDragging) {\n      const dx = e.clientX - dragStart.x;\n      const dy = e.clientY - dragStart.y;\n      setPanOffset({\n        x: panOffset.x + dx,\n        y: panOffset.y + dy\n      });\n      setDragStart({\n        x: e.clientX,\n        y: e.clientY\n      });\n    }\n  };\n\n  // Handle mouse down for drag start\n  const handleMouseDown = e => {\n    setIsDragging(true);\n    setDragStart({\n      x: e.clientX,\n      y: e.clientY\n    });\n\n    // Change cursor style\n    if (containerRef.current) {\n      containerRef.current.style.cursor = 'grabbing';\n    }\n  };\n\n  // Handle mouse up for drag end\n  const handleMouseUp = () => {\n    setIsDragging(false);\n\n    // Reset cursor style\n    if (containerRef.current) {\n      containerRef.current.style.cursor = 'grab';\n    }\n  };\n\n  // Handle mouse wheel for zoom\n  const handleWheel = e => {\n    e.preventDefault();\n    const zoomFactor = 0.1;\n    const newZoom = e.deltaY < 0 ? Math.min(zoom + zoomFactor, 3) : Math.max(zoom - zoomFactor, 0.5);\n    setZoom(newZoom);\n  };\n\n  // Update environmental stressor\n  const handleEnvironmentChange = (stressor, value) => {\n    setEnvironment(prev => ({\n      ...prev,\n      [stressor]: parseFloat(value)\n    }));\n  };\n\n  // Handle body shape selection\n  const handleBodyShapeSelect = shapeId => {\n    setSelectedBodyShape(shapeId);\n    setShowBodyShapeMenu(false);\n  };\n\n  // Handle trait selection\n  const handleTraitSelect = (categoryId, traitId) => {\n    setSelectedTraits(prev => ({\n      ...prev,\n      [categoryId]: traitId\n    }));\n    setShowTraitMenus(prev => ({\n      ...prev,\n      [categoryId]: false\n    }));\n  };\n\n  // Toggle trait menu visibility\n  const handleTraitMenuToggle = categoryId => {\n    setShowTraitMenus(prev => ({\n      ...prev,\n      [categoryId]: !prev[categoryId]\n    }));\n\n    // Close other menus\n    setShowBodyShapeMenu(false);\n    setShowCategoryMenu(false);\n    Object.keys(showTraitMenus).forEach(key => {\n      if (key !== categoryId) {\n        setShowTraitMenus(prev => ({\n          ...prev,\n          [key]: false\n        }));\n      }\n    });\n  };\n\n  // Reset view\n  const handleResetView = () => {\n    setZoom(1);\n    setPanOffset({\n      x: 0,\n      y: 0\n    });\n  };\n\n  // Get selected trait name\n  const getSelectedTraitName = categoryId => {\n    const traitId = selectedTraits[categoryId];\n    if (!traitId) return 'Select...';\n    const traits = getTraitsByCategory(categoryId);\n    const trait = traits.find(t => t.id === traitId);\n    return trait ? trait.name : 'Select...';\n  };\n\n  // Render environmental stressor slider\n  const renderStressorSlider = (stressor, label) => {\n    const value = environment[stressor];\n    const percentage = (value + 1) / 2 * 100;\n    const isPositive = value > 0;\n    const isNegative = value < 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sliderContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.sliderLabel,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `\n            ${classes.sliderValue} \n            ${isPositive ? classes.positiveValue : ''} \n            ${isNegative ? classes.negativeValue : ''}\n          `,\n          children: value.toFixed(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.sliderTrack,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.sliderFill,\n          style: {\n            left: '50%',\n            width: `${Math.abs(percentage - 50)}%`,\n            transform: `translateX(${value < 0 ? '-100%' : '0'})`,\n            backgroundColor: isPositive ? '#5C9D8B' : isNegative ? '#B54B4B' : '#888'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"-1\",\n          max: \"1\",\n          step: \"0.1\",\n          value: value,\n          onChange: e => handleEnvironmentChange(stressor, e.target.value),\n          style: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            opacity: 0,\n            cursor: 'pointer'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.sliderThumb,\n          style: {\n            left: `${percentage}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 9\n      }, this)]\n    }, stressor, true, {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render environment panel\n  const renderEnvironmentPanel = () => {\n    if (!showEnvironmentPanel) return null;\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      className: classes.environmentPanel,\n      initial: {\n        opacity: 0,\n        y: -10\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      exit: {\n        opacity: 0,\n        y: -10\n      },\n      transition: {\n        duration: 0.2\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: classes.environmentTitle,\n        children: \"Environmental Stressors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 9\n      }, this), renderStressorSlider('temperature', 'Temperature'), renderStressorSlider('light_conditions', 'Light Conditions'), renderStressorSlider('terrain_harshness', 'Terrain Harshness'), renderStressorSlider('resource_scarcity', 'Resource Scarcity'), renderStressorSlider('ether_density', 'Ether Density'), renderStressorSlider('pressure_gravity', 'Pressure/Gravity'), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '1rem',\n          fontSize: '0.9rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            marginBottom: '0.5rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Total Effective Stress:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 823,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: totalEffectiveStress.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Adaptation Probability:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: adaptationProbability.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render dropdown menu\n  const renderDropdownMenu = (isOpen, title, items, selectedId, onSelect, renderItem) => {\n    if (!isOpen) return null;\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      className: classes.dropdownContent,\n      initial: {\n        opacity: 0,\n        y: -10\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      exit: {\n        opacity: 0,\n        y: -10\n      },\n      transition: {\n        duration: 0.2\n      },\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `\n              ${classes.menuItem} \n              ${item.id === selectedId ? classes.menuItemActive : ''}\n            `,\n        onClick: () => onSelect(item.id),\n        children: renderItem ? renderItem(item) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.menuItemTitle,\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 858,\n            columnNumber: 17\n          }, this), item.description && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.menuItemDescription,\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 860,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.evolutionSimulator,\n    onMouseMove: handleMouseMove,\n    children: [/*#__PURE__*/_jsxDEV(Background, {\n      cursorPosition: cursorPosition,\n      setCursorPosition: setCursorPosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 876,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeteorShower, {\n      height: \"100vh\",\n      zIndex: 2,\n      trailColor: \"rgba(191, 173, 127, 0.8)\",\n      glowColor: \"rgba(207, 185, 130, 0.6)\",\n      coreColor: \"rgba(255, 248, 220, 1)\",\n      meteorDensity: 15,\n      meteorMinSize: 1,\n      meteorMaxSize: 2,\n      meteorSpeed: 0.08,\n      trailLength: 300,\n      trailSegments: 80,\n      enableParallax: true,\n      parallaxIntensity: 0.15,\n      mode: \"arc\",\n      staggered: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 879,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.navbar,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: classes.title,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.logoIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 900,\n          columnNumber: 11\n        }, this), \"Crescent Evolution System\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 899,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.navControls,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.dropdown,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.dropdownButton,\n            onClick: () => {\n              setShowBodyShapeMenu(!showBodyShapeMenu);\n              setShowCategoryMenu(false);\n              setShowTraitMenus({});\n              setShowEnvironmentPanel(false);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Body Shape: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 916,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: ((_bodyShapes$find = bodyShapes.find(shape => shape.id === selectedBodyShape)) === null || _bodyShapes$find === void 0 ? void 0 : _bodyShapes$find.name) || 'Select...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 917,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '0.8rem',\n                marginLeft: '4px'\n              },\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 920,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 907,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n            children: renderDropdownMenu(showBodyShapeMenu, 'Select Body Shape', bodyShapes, selectedBodyShape, handleBodyShapeSelect)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 923,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.dropdown,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.dropdownButton,\n            onClick: () => {\n              setShowCategoryMenu(!showCategoryMenu);\n              setShowBodyShapeMenu(false);\n              setShowTraitMenus({});\n              setShowEnvironmentPanel(false);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Filter: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 945,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: selectedCategory ? (_traitCategories$find = traitCategories.find(cat => cat.id === selectedCategory)) === null || _traitCategories$find === void 0 ? void 0 : _traitCategories$find.name : 'All Categories'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 946,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '0.8rem',\n                marginLeft: '4px'\n              },\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 951,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 936,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n            children: renderDropdownMenu(showCategoryMenu, 'Filter by Category', [{\n              id: null,\n              name: 'All Categories'\n            }, ...traitCategories], selectedCategory, categoryId => {\n              setSelectedCategory(categoryId);\n              setShowCategoryMenu(false);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 954,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 11\n        }, this), activeTab === 'traits' && traitCategories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.dropdown,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.dropdownButton,\n            style: {\n              borderColor: `${category.color}50`\n            },\n            onClick: () => handleTraitMenuToggle(category.id),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [category.name, \": \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 976,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: getSelectedTraitName(category.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 977,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '0.8rem',\n                marginLeft: '4px'\n              },\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 980,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 971,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n            children: renderDropdownMenu(showTraitMenus[category.id], `Select ${category.name} Trait`, getTraitsByCategory(category.id).filter(trait => trait.compatible.includes('all') || trait.compatible.includes(selectedBodyShape)), selectedTraits[category.id], traitId => handleTraitSelect(category.id, traitId), trait => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.menuItemTitle,\n                children: trait.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 994,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.menuItemDescription,\n                children: trait.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 995,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 983,\n            columnNumber: 15\n          }, this)]\n        }, category.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 970,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.navTabs,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${classes.navTab} ${activeTab === 'traits' ? classes.navTabActive : ''}`,\n          onClick: () => setActiveTab('traits'),\n          children: \"Traits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${classes.navTab} ${activeTab === 'environment' ? classes.navTabActive : ''}`,\n          onClick: () => {\n            setActiveTab('environment');\n            setShowEnvironmentPanel(!showEnvironmentPanel);\n            setShowBodyShapeMenu(false);\n            setShowCategoryMenu(false);\n            setShowTraitMenus({});\n          },\n          children: \"Environment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1012,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${classes.navTab} ${activeTab === 'synthesis' ? classes.navTabActive : ''}`,\n          onClick: () => setActiveTab('synthesis'),\n          children: \"Synthesis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1005,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.viewControls,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.viewButton,\n          onClick: () => setZoom(Math.min(zoom + 0.1, 3)),\n          title: \"Zoom In\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.viewButton,\n          onClick: () => setZoom(Math.max(zoom - 0.1, 0.5)),\n          title: \"Zoom Out\",\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1041,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.viewButton,\n          onClick: handleResetView,\n          title: \"Reset View\",\n          children: \"\\u21BB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1048,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 898,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: renderEnvironmentPanel()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1059,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: classes.visualizationContainer,\n      onMouseDown: handleMouseDown,\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseUp,\n      onWheel: handleWheel,\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: classes.networkCanvas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1072,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.categoryFilters,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${classes.categoryButton} ${viewMode === 'all' ? classes.categoryButtonActive : ''}`,\n          onClick: () => setViewMode('all'),\n          children: \"All Traits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1079,\n          columnNumber: 11\n        }, this), traitCategories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${classes.categoryButton} ${viewMode === category.id ? classes.categoryButtonActive : ''}`,\n          onClick: () => setViewMode(category.id),\n          style: {\n            borderBottom: `2px solid ${category.color}`\n          },\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1087,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${classes.categoryButton} ${viewMode === 'relevant' ? classes.categoryButtonActive : ''}`,\n          onClick: () => setViewMode('relevant'),\n          children: \"By Relevance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1099,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1078,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1064,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 871,\n    columnNumber: 5\n  }, this);\n};\n_s(EnhancedEvolutionSimulator, \"qH8iEq7D5BuUa3nkli4JGgphNLI=\", false, function () {\n  return [useStyles];\n});\n_c = EnhancedEvolutionSimulator;\nexport default EnhancedEvolutionSimulator;\nvar _c;\n$RefreshReg$(_c, \"EnhancedEvolutionSimulator\");","map":{"version":3,"names":["React","useState","useEffect","useRef","motion","AnimatePresence","Background","MeteorShower","RevealText","createUseStyles","jsxDEV","_jsxDEV","Fragment","_Fragment","useStyles","evolutionSimulator","position","width","height","overflow","color","fontFamily","display","flexDirection","navbar","backgroundColor","borderBottom","padding","zIndex","flexWrap","justifyContent","alignItems","boxShadow","title","fontSize","margin","fontWeight","letterSpacing","textShadow","gap","logoIcon","borderRadius","background","navControls","dropdown","marginRight","dropdownButton","border","cursor","transition","borderColor","dropdownContent","top","left","minWidth","maxHeight","overflowY","menuItem","menuItemActive","menuItemTitle","menuItemDescription","marginTop","navTabs","marginLeft","navTab","borderBottomColor","navTabActive","viewControls","viewButton","environmentPanel","right","environmentTitle","marginBottom","paddingBottom","sliderContainer","sliderLabel","sliderValue","sliderTrack","sliderFill","pointerEvents","sliderThumb","transform","positiveValue","negativeValue","visualizationContainer","flex","networkCanvas","categoryFilters","bottom","categoryButton","categoryButtonActive","tooltip","maxWidth","EnhancedEvolutionSimulator","_s","_bodyShapes$find","_traitCategories$find","classes","cursorPosition","setCursorPosition","x","y","isLoaded","setIsLoaded","selectedBodyShape","setSelectedBodyShape","showBodyShapeMenu","setShowBodyShapeMenu","selectedCategory","setSelectedCategory","showCategoryMenu","setShowCategoryMenu","selectedTraits","setSelectedTraits","showTraitMenus","setShowTraitMenus","viewMode","setViewMode","showEnvironmentPanel","setShowEnvironmentPanel","activeTab","setActiveTab","zoom","setZoom","panOffset","setPanOffset","isDragging","setIsDragging","dragStart","setDragStart","hoveredElement","setHoveredElement","environment","setEnvironment","temperature","light_conditions","terrain_harshness","resource_scarcity","ether_density","pressure_gravity","totalEffectiveStress","setTotalEffectiveStress","adaptationProbability","setAdaptationProbability","canvasRef","containerRef","networkRef","animationFrameRef","bodyShapes","id","name","description","traitCategories","getTraitsByCategory","categoryId","allTraits","getTraitsByBodyShape","bodyShapeId","baseTraits","locomotion","tier","compatible","metabolism","sensory","etheric","thermal","initialTraits","forEach","category","traits","compatibleTraits","filter","trait","includes","length","current","canvas","container","ctx","getContext","updateCanvasDimensions","rect","getBoundingClientRect","centerX","centerY","window","addEventListener","animate","clearRect","save","translate","scale","beginPath","arc","Math","PI","fillStyle","fill","strokeStyle","lineWidth","stroke","font","textAlign","textBaseline","bodyShape","find","shape","fillText","traitRadius","index","angle","cos","sin","moveTo","lineTo","restore","requestAnimationFrame","timer","setTimeout","removeEventListener","clearTimeout","cancelAnimationFrame","stressFromEnvironment","Object","values","reduce","sum","value","abs","probability","exp","handleMouseMove","e","clientX","clientY","dx","dy","handleMouseDown","style","handleMouseUp","handleWheel","preventDefault","zoomFactor","newZoom","deltaY","min","max","handleEnvironmentChange","stressor","prev","parseFloat","handleBodyShapeSelect","shapeId","handleTraitSelect","traitId","handleTraitMenuToggle","keys","key","handleResetView","getSelectedTraitName","t","renderStressorSlider","label","percentage","isPositive","isNegative","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","type","step","onChange","target","opacity","renderEnvironmentPanel","div","initial","exit","duration","renderDropdownMenu","isOpen","items","selectedId","onSelect","renderItem","map","item","onClick","onMouseMove","trailColor","glowColor","coreColor","meteorDensity","meteorMinSize","meteorMaxSize","meteorSpeed","trailLength","trailSegments","enableParallax","parallaxIntensity","mode","staggered","cat","ref","onMouseDown","onMouseUp","onMouseLeave","onWheel","_c","$RefreshReg$"],"sources":["/home/valeria/Documents/Crucible/frontend/src/components/sections/codex/creators/creatorshowcase/EvolutionSimulatorConceptShowcase.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport Background from '../../../../core/Background';\nimport MeteorShower from '../../../../core/effects/cosmiceffects/MeteorShower';\nimport RevealText from '../../../../core/effects/RevealText';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  // Main container and layout\n  evolutionSimulator: {\n    position: 'relative',\n    width: '100%',\n    height: '100vh',\n    overflow: 'hidden',\n    color: '#e0e0e0',\n    fontFamily: '\"Garamond\", \"Adobe Caslon Pro\", serif',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  \n  // Enhanced Navbar\n  navbar: {\n    position: 'relative',\n    width: '100%',\n    backgroundColor: 'rgba(15, 15, 20, 0.85)',\n    borderBottom: '1px solid rgba(191, 173, 127, 0.4)',\n    padding: '0.5rem 1rem',\n    zIndex: 100,\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    boxShadow: '0 4px 15px rgba(0, 0, 0, 0.3)'\n  },\n  title: {\n    color: '#bfad7f',\n    fontSize: '1.5rem',\n    margin: 0,\n    fontWeight: 300,\n    letterSpacing: '0.05em',\n    textShadow: '0 2px 5px rgba(0, 0, 0, 0.5)',\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.5rem'\n  },\n  logoIcon: {\n    width: '24px',\n    height: '24px',\n    borderRadius: '50%',\n    background: 'linear-gradient(135deg, #bfad7f 0%, #7D6B9E 100%)',\n    display: 'inline-block'\n  },\n  \n  // Navigation Elements\n  navControls: {\n    display: 'flex',\n    gap: '1rem',\n    alignItems: 'center',\n    flexWrap: 'wrap'\n  },\n  dropdown: {\n    position: 'relative',\n    marginRight: '0.5rem'\n  },\n  dropdownButton: {\n    backgroundColor: 'rgba(30, 30, 40, 0.6)',\n    border: '1px solid rgba(191, 173, 127, 0.3)',\n    color: '#e0e0e0',\n    padding: '0.4rem 0.8rem',\n    borderRadius: '4px',\n    fontFamily: 'inherit',\n    fontSize: '0.9rem',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.5rem',\n    '&:hover': {\n      backgroundColor: 'rgba(191, 173, 127, 0.2)',\n      borderColor: 'rgba(191, 173, 127, 0.6)'\n    }\n  },\n  dropdownContent: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    backgroundColor: 'rgba(20, 20, 25, 0.95)',\n    minWidth: '200px',\n    maxHeight: '70vh',\n    overflowY: 'auto',\n    borderRadius: '4px',\n    padding: '0.5rem',\n    boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5)',\n    zIndex: 101,\n    border: '1px solid rgba(191, 173, 127, 0.3)'\n  },\n  menuItem: {\n    padding: '0.5rem 0.75rem',\n    cursor: 'pointer',\n    borderRadius: '3px',\n    transition: 'all 0.15s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(191, 173, 127, 0.2)'\n    }\n  },\n  menuItemActive: {\n    backgroundColor: 'rgba(191, 173, 127, 0.3)',\n    fontWeight: 'bold'\n  },\n  menuItemTitle: {\n    fontSize: '0.95rem',\n    color: '#bfad7f'\n  },\n  menuItemDescription: {\n    fontSize: '0.8rem',\n    color: 'rgba(224, 224, 224, 0.7)',\n    marginTop: '0.25rem'\n  },\n  \n  // Tabs for different controls\n  navTabs: {\n    display: 'flex',\n    gap: '0.25rem',\n    marginLeft: 'auto'\n  },\n  navTab: {\n    padding: '0.4rem 0.8rem',\n    backgroundColor: 'transparent',\n    border: 'none',\n    borderBottom: '2px solid transparent',\n    color: 'rgba(224, 224, 224, 0.7)',\n    cursor: 'pointer',\n    fontSize: '0.9rem',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      color: '#bfad7f',\n      borderBottomColor: 'rgba(191, 173, 127, 0.3)'\n    }\n  },\n  navTabActive: {\n    color: '#bfad7f',\n    borderBottomColor: '#bfad7f'\n  },\n  \n  // View controls\n  viewControls: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '0.75rem'\n  },\n  viewButton: {\n    backgroundColor: 'rgba(30, 30, 40, 0.6)',\n    border: '1px solid rgba(191, 173, 127, 0.3)',\n    color: '#e0e0e0',\n    width: '32px',\n    height: '32px',\n    borderRadius: '4px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      backgroundColor: 'rgba(191, 173, 127, 0.2)',\n      borderColor: 'rgba(191, 173, 127, 0.6)'\n    }\n  },\n  \n  // Environmental controls panel\n  environmentPanel: {\n    position: 'absolute',\n    top: '100%',\n    right: 0,\n    backgroundColor: 'rgba(20, 20, 25, 0.95)',\n    border: '1px solid rgba(191, 173, 127, 0.3)',\n    borderRadius: '4px',\n    padding: '1rem',\n    zIndex: 100,\n    width: '300px',\n    boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5)'\n  },\n  environmentTitle: {\n    color: '#bfad7f',\n    fontSize: '1rem',\n    marginTop: 0,\n    marginBottom: '1rem',\n    borderBottom: '1px solid rgba(191, 173, 127, 0.3)',\n    paddingBottom: '0.5rem'\n  },\n  \n  // Enhanced stressor sliders\n  sliderContainer: {\n    marginBottom: '0.75rem'\n  },\n  sliderLabel: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    fontSize: '0.9rem',\n    marginBottom: '0.25rem'\n  },\n  sliderValue: {\n    fontWeight: 'bold'\n  },\n  sliderTrack: {\n    width: '100%',\n    height: '6px',\n    position: 'relative',\n    backgroundColor: 'rgba(30, 30, 40, 0.8)',\n    borderRadius: '3px'\n  },\n  sliderFill: {\n    position: 'absolute',\n    height: '100%',\n    borderRadius: '3px',\n    pointerEvents: 'none'\n  },\n  sliderThumb: {\n    width: '16px',\n    height: '16px',\n    borderRadius: '50%',\n    backgroundColor: '#bfad7f',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translate(-50%, -50%)',\n    cursor: 'pointer',\n    border: '2px solid rgba(30, 30, 40, 0.8)',\n    zIndex: 2,\n    transition: 'transform 0.1s ease',\n    '&:hover': {\n      transform: 'translate(-50%, -50%) scale(1.2)'\n    }\n  },\n  positiveValue: {\n    color: '#5C9D8B'\n  },\n  negativeValue: {\n    color: '#B54B4B'\n  },\n  \n  // Main visualization area\n  visualizationContainer: {\n    position: 'relative', \n    flex: 1,\n    overflow: 'hidden'\n  },\n  networkCanvas: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    cursor: 'grab',\n    '&:active': {\n      cursor: 'grabbing'\n    }\n  },\n  \n  // Category filters\n  categoryFilters: {\n    position: 'absolute',\n    bottom: '1rem',\n    left: '50%',\n    transform: 'translateX(-50%)',\n    backgroundColor: 'rgba(15, 15, 20, 0.8)',\n    borderRadius: '30px',\n    padding: '0.5rem 1rem',\n    display: 'flex',\n    gap: '0.5rem',\n    zIndex: 50,\n    boxShadow: '0 4px 15px rgba(0, 0, 0, 0.3)',\n    border: '1px solid rgba(191, 173, 127, 0.2)'\n  },\n  categoryButton: {\n    background: 'transparent',\n    border: 'none',\n    color: 'rgba(224, 224, 224, 0.7)',\n    padding: '0.35rem 0.75rem',\n    borderRadius: '20px',\n    fontSize: '0.85rem',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease',\n    '&:hover': {\n      color: '#e0e0e0',\n      backgroundColor: 'rgba(191, 173, 127, 0.1)'\n    }\n  },\n  categoryButtonActive: {\n    backgroundColor: 'rgba(191, 173, 127, 0.3)',\n    color: '#e0e0e0'\n  },\n  \n  // Tooltip styling\n  tooltip: {\n    position: 'fixed',\n    backgroundColor: 'rgba(20, 20, 25, 0.95)',\n    border: '1px solid rgba(191, 173, 127, 0.3)',\n    borderRadius: '4px',\n    padding: '0.75rem',\n    maxWidth: '300px',\n    pointerEvents: 'none',\n    zIndex: 200,\n    boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5)'\n  },\n  \n  // Media queries for responsive design\n  '@media (max-width: 768px)': {\n    navbar: {\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      padding: '0.75rem'\n    },\n    navControls: {\n      marginTop: '0.75rem',\n      width: '100%',\n      justifyContent: 'space-between'\n    },\n    environmentPanel: {\n      width: '90%',\n      right: '5%'\n    }\n  }\n});\n\n// Enhanced Evolution Simulator Component\nconst EnhancedEvolutionSimulator = () => {\n  const classes = useStyles();\n  \n  // State hooks\n  const [cursorPosition, setCursorPosition] = useState({ x: 0, y: 0 });\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedBodyShape, setSelectedBodyShape] = useState('quadrupedal');\n  const [showBodyShapeMenu, setShowBodyShapeMenu] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [showCategoryMenu, setShowCategoryMenu] = useState(false);\n  const [selectedTraits, setSelectedTraits] = useState({});\n  const [showTraitMenus, setShowTraitMenus] = useState({});\n  const [viewMode, setViewMode] = useState('all');\n  const [showEnvironmentPanel, setShowEnvironmentPanel] = useState(false);\n  const [activeTab, setActiveTab] = useState('traits');\n  const [zoom, setZoom] = useState(1);\n  const [panOffset, setPanOffset] = useState({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n  const [hoveredElement, setHoveredElement] = useState(null);\n  \n  // Environment stressors state\n  const [environment, setEnvironment] = useState({\n    temperature: 0.4,\n    light_conditions: 0.3,\n    terrain_harshness: 0.5,\n    resource_scarcity: 0.2,\n    ether_density: 0.6,\n    pressure_gravity: 0.4\n  });\n  \n  // Simulation metrics state\n  const [totalEffectiveStress, setTotalEffectiveStress] = useState(0);\n  const [adaptationProbability, setAdaptationProbability] = useState(0);\n  \n  // Refs\n  const canvasRef = useRef(null);\n  const containerRef = useRef(null);\n  const networkRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  \n  // Define body shapes data\n  const bodyShapes = [\n    { id: 'bipedal', name: 'Bipedal', description: 'Upright forms with manipulative upper limbs' },\n    { id: 'quadrupedal', name: 'Quadrupedal', description: 'Four-limbed forms optimized for stability and movement' },\n    { id: 'serpentine', name: 'Serpentine', description: 'Elongated, limbless forms specialized for flexibility' },\n    { id: 'amorphous', name: 'Amorphous', description: 'Malleable forms without fixed structure' },\n    { id: 'insectoid', name: 'Multi-limbed', description: 'Multi-limbed, segmented forms' },\n    { id: 'avian', name: 'Avian', description: 'Forms optimized for flight and aerial movement' },\n    { id: 'aquatic', name: 'Aquatic', description: 'Forms specialized for water environments' }\n  ];\n\n  // Trait categories\n  const traitCategories = [\n    { id: 'locomotion', name: 'Locomotion', color: '#7D6B9E' },\n    { id: 'metabolism', name: 'Metabolism', color: '#5C9D8B' },\n    { id: 'sensory', name: 'Sensory Acuity', color: '#C99846' },\n    { id: 'etheric', name: 'Etheric Adaptation', color: '#B54B4B' },\n    { id: 'thermal', name: 'Thermal Regulation', color: '#A67C52' }\n  ];\n  \n  // Get traits based on selected body shape and category\n  const getTraitsByCategory = (categoryId) => {\n    const allTraits = getTraitsByBodyShape(selectedBodyShape);\n    return allTraits[categoryId] || [];\n  };\n  \n  // Function to get traits based on selected body shape (simplified version)\n  const getTraitsByBodyShape = (bodyShapeId) => {\n    // This would contain the full trait data structure from your original code\n    // For brevity, I'm using a simplified version here\n    const baseTraits = {\n      locomotion: [\n        {\n          id: 'running',\n          name: 'Swift Limbs',\n          tier: 1,\n          description: 'Limbs designed for quick locomotion across varied terrain.',\n          compatible: ['quadrupedal', 'bipedal', 'insectoid']\n        },\n        {\n          id: 'climbing',\n          name: 'Grasping Appendages',\n          tier: 1,\n          description: 'Specialized limb structures with superior grip for vertical movement.',\n          compatible: ['bipedal', 'quadrupedal', 'insectoid']\n        },\n        {\n          id: 'webbed',\n          name: 'Webbed Appendages',\n          tier: 1,\n          description: 'Limbs with membrane structures optimized for aquatic movement.',\n          compatible: ['aquatic', 'bipedal', 'quadrupedal']\n        }\n      ],\n      metabolism: [\n        {\n          id: 'carnivore',\n          name: 'Carnivore Digestion',\n          tier: 1,\n          description: 'Specialized digestive system optimized for meat processing.',\n          compatible: ['all']\n        },\n        {\n          id: 'omnivore',\n          name: 'Omnivore Adaptation',\n          tier: 1,\n          description: 'Versatile digestive system capable of processing diverse food sources.',\n          compatible: ['all']\n        }\n      ],\n      sensory: [\n        {\n          id: 'acute_vision',\n          name: 'Acute Vision',\n          tier: 1,\n          description: 'Highly developed visual organs with exceptional acuity.',\n          compatible: ['all']\n        },\n        {\n          id: 'sonar_mapping',\n          name: 'Echolocation',\n          tier: 1,\n          description: 'Ability to emit and detect sound waves for environmental mapping.',\n          compatible: ['all']\n        }\n      ],\n      etheric: [\n        {\n          id: 'ether_sensing',\n          name: 'Ether Sensing',\n          tier: 1,\n          description: 'Specialized organs that can detect and interpret etheric energy patterns.',\n          compatible: ['all']\n        },\n        {\n          id: 'ether_channeling',\n          name: 'Ether Channeling',\n          tier: 1,\n          description: 'Biological structures capable of directing and manipulating etheric energies.',\n          compatible: ['all']\n        }\n      ],\n      thermal: [\n        {\n          id: 'thick_blubber',\n          name: 'Thick Blubber',\n          tier: 1,\n          description: 'Dense fatty tissue layer providing insulation in cold environments.',\n          compatible: ['all']\n        },\n        {\n          id: 'reflective_scales',\n          name: 'Reflective Scales',\n          tier: 1,\n          description: 'Light-reflecting scales that help regulate heat absorption.',\n          compatible: ['all']\n        }\n      ]\n    };\n    \n    return baseTraits;\n  };\n  \n  // Initialize selected traits on body shape change\n  useEffect(() => {\n    const initialTraits = {};\n    traitCategories.forEach(category => {\n      const traits = getTraitsByCategory(category.id);\n      const compatibleTraits = traits.filter(trait => \n        trait.compatible.includes('all') || trait.compatible.includes(selectedBodyShape)\n      );\n      if (compatibleTraits.length > 0) {\n        initialTraits[category.id] = compatibleTraits[0].id;\n      }\n    });\n    setSelectedTraits(initialTraits);\n  }, [selectedBodyShape]);\n  \n  // Setup the main visualization canvas\n  useEffect(() => {\n    if (!canvasRef.current || !containerRef.current) return;\n    \n    const canvas = canvasRef.current;\n    const container = containerRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    // Set up canvas dimensions\n    const updateCanvasDimensions = () => {\n      const rect = container.getBoundingClientRect();\n      canvas.width = rect.width;\n      canvas.height = rect.height;\n      \n      networkRef.current = {\n        width: rect.width,\n        height: rect.height,\n        centerX: rect.width / 2,\n        centerY: rect.height / 2\n      };\n    };\n    \n    updateCanvasDimensions();\n    window.addEventListener('resize', updateCanvasDimensions);\n    \n    // Animation function for the network visualization\n    const animate = () => {\n      if (!networkRef.current) return;\n      \n      // Clear canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      \n      // Apply zoom and pan transformations\n      ctx.save();\n      ctx.translate(panOffset.x, panOffset.y);\n      ctx.scale(zoom, zoom);\n      \n      // Draw network visualization - this would contain the visualization logic\n      // from your original code, adapted to this component structure\n      \n      // Example placeholder visualization\n      const { centerX, centerY } = networkRef.current;\n      \n      // Draw body shape at center\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, 50, 0, Math.PI * 2);\n      ctx.fillStyle = 'rgba(191, 173, 127, 0.8)';\n      ctx.fill();\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.5)';\n      ctx.lineWidth = 2;\n      ctx.stroke();\n      \n      // Draw body shape text\n      ctx.font = 'bold 14px Arial';\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      const bodyShape = bodyShapes.find(shape => shape.id === selectedBodyShape);\n      ctx.fillText(bodyShape?.name || 'Body Shape', centerX, centerY);\n      \n      // Draw trait nodes in a circle around center\n      const traitRadius = 180;\n      traitCategories.forEach((category, index) => {\n        const angle = (index / traitCategories.length) * Math.PI * 2;\n        const x = centerX + Math.cos(angle) * traitRadius;\n        const y = centerY + Math.sin(angle) * traitRadius;\n        \n        // Draw node\n        ctx.beginPath();\n        ctx.arc(x, y, 20, 0, Math.PI * 2);\n        ctx.fillStyle = category.color;\n        ctx.fill();\n        ctx.strokeStyle = 'white';\n        ctx.lineWidth = 2;\n        ctx.stroke();\n        \n        // Draw connection to center\n        ctx.beginPath();\n        ctx.moveTo(centerX, centerY);\n        ctx.lineTo(x, y);\n        ctx.strokeStyle = category.color;\n        ctx.lineWidth = 2;\n        ctx.stroke();\n        \n        // Draw trait name\n        ctx.font = '12px Arial';\n        ctx.fillStyle = 'white';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText(category.name, x, y);\n        \n        // This would be expanded with the full network visualization logic\n      });\n      \n      ctx.restore();\n      \n      // Continue animation\n      animationFrameRef.current = requestAnimationFrame(animate);\n    };\n    \n    // Start animation loop\n    animate();\n    \n    // Set loaded after a delay\n    const timer = setTimeout(() => {\n      setIsLoaded(true);\n    }, 1000);\n    \n    // Cleanup on unmount\n    return () => {\n      window.removeEventListener('resize', updateCanvasDimensions);\n      clearTimeout(timer);\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [selectedBodyShape, selectedTraits, viewMode, zoom, panOffset]);\n  \n  // Calculate stress and adaptation probability when environment changes\n  useEffect(() => {\n    // Using simplified stress calculation\n    const stressFromEnvironment = Object.values(environment).reduce((sum, value) => sum + Math.abs(value), 0) / 6;\n    setTotalEffectiveStress(stressFromEnvironment);\n    \n    // Simplified adaptation probability calculation\n    const probability = 1 / (1 + Math.exp(-10 * (stressFromEnvironment - 0.5)));\n    setAdaptationProbability(probability);\n  }, [environment, selectedBodyShape, selectedTraits]);\n  \n  // Handle mouse move for background effect\n  const handleMouseMove = (e) => {\n    setCursorPosition({ x: e.clientX, y: e.clientY });\n    \n    // Handle dragging\n    if (isDragging) {\n      const dx = e.clientX - dragStart.x;\n      const dy = e.clientY - dragStart.y;\n      setPanOffset({\n        x: panOffset.x + dx,\n        y: panOffset.y + dy\n      });\n      setDragStart({\n        x: e.clientX,\n        y: e.clientY\n      });\n    }\n  };\n  \n  // Handle mouse down for drag start\n  const handleMouseDown = (e) => {\n    setIsDragging(true);\n    setDragStart({\n      x: e.clientX,\n      y: e.clientY\n    });\n    \n    // Change cursor style\n    if (containerRef.current) {\n      containerRef.current.style.cursor = 'grabbing';\n    }\n  };\n  \n  // Handle mouse up for drag end\n  const handleMouseUp = () => {\n    setIsDragging(false);\n    \n    // Reset cursor style\n    if (containerRef.current) {\n      containerRef.current.style.cursor = 'grab';\n    }\n  };\n  \n  // Handle mouse wheel for zoom\n  const handleWheel = (e) => {\n    e.preventDefault();\n    const zoomFactor = 0.1;\n    const newZoom = e.deltaY < 0 \n      ? Math.min(zoom + zoomFactor, 3) \n      : Math.max(zoom - zoomFactor, 0.5);\n    \n    setZoom(newZoom);\n  };\n  \n  // Update environmental stressor\n  const handleEnvironmentChange = (stressor, value) => {\n    setEnvironment(prev => ({\n      ...prev,\n      [stressor]: parseFloat(value)\n    }));\n  };\n  \n  // Handle body shape selection\n  const handleBodyShapeSelect = (shapeId) => {\n    setSelectedBodyShape(shapeId);\n    setShowBodyShapeMenu(false);\n  };\n  \n  // Handle trait selection\n  const handleTraitSelect = (categoryId, traitId) => {\n    setSelectedTraits(prev => ({\n      ...prev,\n      [categoryId]: traitId\n    }));\n    setShowTraitMenus(prev => ({\n      ...prev,\n      [categoryId]: false\n    }));\n  };\n  \n  // Toggle trait menu visibility\n  const handleTraitMenuToggle = (categoryId) => {\n    setShowTraitMenus(prev => ({\n      ...prev,\n      [categoryId]: !prev[categoryId]\n    }));\n    \n    // Close other menus\n    setShowBodyShapeMenu(false);\n    setShowCategoryMenu(false);\n    Object.keys(showTraitMenus).forEach(key => {\n      if (key !== categoryId) {\n        setShowTraitMenus(prev => ({\n          ...prev,\n          [key]: false\n        }));\n      }\n    });\n  };\n  \n  // Reset view\n  const handleResetView = () => {\n    setZoom(1);\n    setPanOffset({ x: 0, y: 0 });\n  };\n  \n  // Get selected trait name\n  const getSelectedTraitName = (categoryId) => {\n    const traitId = selectedTraits[categoryId];\n    if (!traitId) return 'Select...';\n    \n    const traits = getTraitsByCategory(categoryId);\n    const trait = traits.find(t => t.id === traitId);\n    return trait ? trait.name : 'Select...';\n  };\n  \n  // Render environmental stressor slider\n  const renderStressorSlider = (stressor, label) => {\n    const value = environment[stressor];\n    const percentage = ((value + 1) / 2) * 100;\n    const isPositive = value > 0;\n    const isNegative = value < 0;\n    \n    return (\n      <div className={classes.sliderContainer} key={stressor}>\n        <div className={classes.sliderLabel}>\n          <span>{label}</span>\n          <span className={`\n            ${classes.sliderValue} \n            ${isPositive ? classes.positiveValue : ''} \n            ${isNegative ? classes.negativeValue : ''}\n          `}>\n            {value.toFixed(1)}\n          </span>\n        </div>\n        <div className={classes.sliderTrack}>\n          <div \n            className={classes.sliderFill} \n            style={{\n              left: '50%',\n              width: `${Math.abs(percentage - 50)}%`,\n              transform: `translateX(${value < 0 ? '-100%' : '0'})`,\n              backgroundColor: isPositive ? '#5C9D8B' : isNegative ? '#B54B4B' : '#888'\n            }}\n          />\n          <input\n            type=\"range\"\n            min=\"-1\"\n            max=\"1\"\n            step=\"0.1\"\n            value={value}\n            onChange={(e) => handleEnvironmentChange(stressor, e.target.value)}\n            style={{\n              position: 'absolute',\n              width: '100%',\n              height: '100%',\n              opacity: 0,\n              cursor: 'pointer'\n            }}\n          />\n          <div \n            className={classes.sliderThumb}\n            style={{ left: `${percentage}%` }}\n          />\n        </div>\n      </div>\n    );\n  };\n  \n  // Render environment panel\n  const renderEnvironmentPanel = () => {\n    if (!showEnvironmentPanel) return null;\n    \n    return (\n      <motion.div \n        className={classes.environmentPanel}\n        initial={{ opacity: 0, y: -10 }}\n        animate={{ opacity: 1, y: 0 }}\n        exit={{ opacity: 0, y: -10 }}\n        transition={{ duration: 0.2 }}\n      >\n        <h3 className={classes.environmentTitle}>Environmental Stressors</h3>\n        \n        {renderStressorSlider('temperature', 'Temperature')}\n        {renderStressorSlider('light_conditions', 'Light Conditions')}\n        {renderStressorSlider('terrain_harshness', 'Terrain Harshness')}\n        {renderStressorSlider('resource_scarcity', 'Resource Scarcity')}\n        {renderStressorSlider('ether_density', 'Ether Density')}\n        {renderStressorSlider('pressure_gravity', 'Pressure/Gravity')}\n        \n        <div style={{ marginTop: '1rem', fontSize: '0.9rem' }}>\n          <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '0.5rem' }}>\n            <span>Total Effective Stress:</span>\n            <span style={{ fontWeight: 'bold' }}>{totalEffectiveStress.toFixed(2)}</span>\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <span>Adaptation Probability:</span>\n            <span style={{ fontWeight: 'bold' }}>{adaptationProbability.toFixed(2)}</span>\n          </div>\n        </div>\n      </motion.div>\n    );\n  };\n  \n  // Render dropdown menu\n  const renderDropdownMenu = (isOpen, title, items, selectedId, onSelect, renderItem) => {\n    if (!isOpen) return null;\n    \n    return (\n      <motion.div \n        className={classes.dropdownContent}\n        initial={{ opacity: 0, y: -10 }}\n        animate={{ opacity: 1, y: 0 }}\n        exit={{ opacity: 0, y: -10 }}\n        transition={{ duration: 0.2 }}\n      >\n        {items.map(item => (\n          <div \n            key={item.id}\n            className={`\n              ${classes.menuItem} \n              ${item.id === selectedId ? classes.menuItemActive : ''}\n            `}\n            onClick={() => onSelect(item.id)}\n          >\n            {renderItem ? renderItem(item) : (\n              <>\n                <div className={classes.menuItemTitle}>{item.name}</div>\n                {item.description && (\n                  <div className={classes.menuItemDescription}>{item.description}</div>\n                )}\n              </>\n            )}\n          </div>\n        ))}\n      </motion.div>\n    );\n  };\n  \n  return (\n    <div \n      className={classes.evolutionSimulator}\n      onMouseMove={handleMouseMove}\n    >\n      {/* Background with stars */}\n      <Background cursorPosition={cursorPosition} setCursorPosition={setCursorPosition} />\n      \n      {/* Meteor shower effect */}\n      <MeteorShower \n        height=\"100vh\"\n        zIndex={2}\n        trailColor=\"rgba(191, 173, 127, 0.8)\"\n        glowColor=\"rgba(207, 185, 130, 0.6)\"\n        coreColor=\"rgba(255, 248, 220, 1)\"\n        meteorDensity={15}\n        meteorMinSize={1}\n        meteorMaxSize={2}\n        meteorSpeed={0.08}\n        trailLength={300}\n        trailSegments={80}\n        enableParallax={true}\n        parallaxIntensity={0.15}\n        mode=\"arc\"\n        staggered={true}\n      />\n      \n      {/* Enhanced Navbar */}\n      <div className={classes.navbar}>\n        <h1 className={classes.title}>\n          <span className={classes.logoIcon}></span>\n          Crescent Evolution System\n        </h1>\n        \n        <div className={classes.navControls}>\n          {/* Body Shape Dropdown */}\n          <div className={classes.dropdown}>\n            <button \n              className={classes.dropdownButton}\n              onClick={() => {\n                setShowBodyShapeMenu(!showBodyShapeMenu);\n                setShowCategoryMenu(false);\n                setShowTraitMenus({});\n                setShowEnvironmentPanel(false);\n              }}\n            >\n              <span>Body Shape: </span>\n              <span style={{ fontWeight: 'bold' }}>\n                {bodyShapes.find(shape => shape.id === selectedBodyShape)?.name || 'Select...'}\n              </span>\n              <span style={{ fontSize: '0.8rem', marginLeft: '4px' }}>▼</span>\n            </button>\n            \n            <AnimatePresence>\n              {renderDropdownMenu(\n                showBodyShapeMenu,\n                'Select Body Shape',\n                bodyShapes,\n                selectedBodyShape,\n                handleBodyShapeSelect\n              )}\n            </AnimatePresence>\n          </div>\n          \n          {/* Filter by Category Dropdown */}\n          <div className={classes.dropdown}>\n            <button \n              className={classes.dropdownButton}\n              onClick={() => {\n                setShowCategoryMenu(!showCategoryMenu);\n                setShowBodyShapeMenu(false);\n                setShowTraitMenus({});\n                setShowEnvironmentPanel(false);\n              }}\n            >\n              <span>Filter: </span>\n              <span style={{ fontWeight: 'bold' }}>\n                {selectedCategory \n                  ? traitCategories.find(cat => cat.id === selectedCategory)?.name \n                  : 'All Categories'}\n              </span>\n              <span style={{ fontSize: '0.8rem', marginLeft: '4px' }}>▼</span>\n            </button>\n            \n            <AnimatePresence>\n              {renderDropdownMenu(\n                showCategoryMenu,\n                'Filter by Category',\n                [{ id: null, name: 'All Categories' }, ...traitCategories],\n                selectedCategory,\n                (categoryId) => {\n                  setSelectedCategory(categoryId);\n                  setShowCategoryMenu(false);\n                }\n              )}\n            </AnimatePresence>\n          </div>\n          \n          {/* Trait Selection Dropdowns */}\n          {activeTab === 'traits' && traitCategories.map(category => (\n            <div className={classes.dropdown} key={category.id}>\n              <button \n                className={classes.dropdownButton}\n                style={{ borderColor: `${category.color}50` }}\n                onClick={() => handleTraitMenuToggle(category.id)}\n              >\n                <span>{category.name}: </span>\n                <span style={{ fontWeight: 'bold' }}>\n                  {getSelectedTraitName(category.id)}\n                </span>\n                <span style={{ fontSize: '0.8rem', marginLeft: '4px' }}>▼</span>\n              </button>\n              \n              <AnimatePresence>\n                {renderDropdownMenu(\n                  showTraitMenus[category.id],\n                  `Select ${category.name} Trait`,\n                  getTraitsByCategory(category.id).filter(trait => \n                    trait.compatible.includes('all') || trait.compatible.includes(selectedBodyShape)\n                  ),\n                  selectedTraits[category.id],\n                  (traitId) => handleTraitSelect(category.id, traitId),\n                  (trait) => (\n                    <>\n                      <div className={classes.menuItemTitle}>{trait.name}</div>\n                      <div className={classes.menuItemDescription}>{trait.description}</div>\n                    </>\n                  )\n                )}\n              </AnimatePresence>\n            </div>\n          ))}\n        </div>\n        \n        {/* Navigation Tabs */}\n        <div className={classes.navTabs}>\n          <button \n            className={`${classes.navTab} ${activeTab === 'traits' ? classes.navTabActive : ''}`}\n            onClick={() => setActiveTab('traits')}\n          >\n            Traits\n          </button>\n          <button \n            className={`${classes.navTab} ${activeTab === 'environment' ? classes.navTabActive : ''}`}\n            onClick={() => {\n              setActiveTab('environment');\n              setShowEnvironmentPanel(!showEnvironmentPanel);\n              setShowBodyShapeMenu(false);\n              setShowCategoryMenu(false);\n              setShowTraitMenus({});\n            }}\n          >\n            Environment\n          </button>\n          <button \n            className={`${classes.navTab} ${activeTab === 'synthesis' ? classes.navTabActive : ''}`}\n            onClick={() => setActiveTab('synthesis')}\n          >\n            Synthesis\n          </button>\n        </div>\n        \n        {/* View Controls */}\n        <div className={classes.viewControls}>\n          <button \n            className={classes.viewButton}\n            onClick={() => setZoom(Math.min(zoom + 0.1, 3))}\n            title=\"Zoom In\"\n          >\n            +\n          </button>\n          <button \n            className={classes.viewButton}\n            onClick={() => setZoom(Math.max(zoom - 0.1, 0.5))}\n            title=\"Zoom Out\"\n          >\n            -\n          </button>\n          <button \n            className={classes.viewButton}\n            onClick={handleResetView}\n            title=\"Reset View\"\n          >\n            ↻\n          </button>\n        </div>\n      </div>\n      \n      {/* Environment Panel */}\n      <AnimatePresence>\n        {renderEnvironmentPanel()}\n      </AnimatePresence>\n      \n      {/* Main Visualization Container */}\n      <div \n        ref={containerRef}\n        className={classes.visualizationContainer}\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n        onMouseLeave={handleMouseUp}\n        onWheel={handleWheel}\n      >\n        <canvas \n          ref={canvasRef}\n          className={classes.networkCanvas}\n        />\n        \n        {/* Category Filter Buttons */}\n        <div className={classes.categoryFilters}>\n          <button \n            className={`${classes.categoryButton} ${viewMode === 'all' ? classes.categoryButtonActive : ''}`}\n            onClick={() => setViewMode('all')}\n          >\n            All Traits\n          </button>\n          \n          {traitCategories.map(category => (\n            <button \n              key={category.id}\n              className={`${classes.categoryButton} ${viewMode === category.id ? classes.categoryButtonActive : ''}`}\n              onClick={() => setViewMode(category.id)}\n              style={{ \n                borderBottom: `2px solid ${category.color}`\n              }}\n            >\n              {category.name}\n            </button>\n          ))}\n          \n          <button \n            className={`${classes.categoryButton} ${viewMode === 'relevant' ? classes.categoryButtonActive : ''}`}\n            onClick={() => setViewMode('relevant')}\n          >\n            By Relevance\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EnhancedEvolutionSimulator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}